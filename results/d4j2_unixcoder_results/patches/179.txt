 return options.hasShortOption(optName);;  
 return options.hasShortOption(optName);  
 return true;  
 return options.hasOption(optName);;  
 return optName.length() > 0;  
 return optName != null;  
 return options.hasOption(optName);  
 return optName;  
 return optName.equals("-");;  
 return optName.startsWith("-");;  
 return options.hasLongOption(optName);;  
 return false;  
 return optName.length() == 1;  
 return options.hasLongOption(optName);  
  return true;  
 return optName.length() > 1;  
 return optName == null;  
 return options.getShortOption(optName);  
 return hasShortOption(optName);;  
 return isShortOption(optName);;  
  return optName != null;  
 return optName.equalsIgnoreCase("-");;  
 return optName.startsWith("--");;  
 return optName.startsWith("-"); ;  
  return optName.length() > 0;  
 return options.hasValue(optName);;  
 return options.has(optName);;  
 return optName.equals(name);  
 return shortOptions.containsKey(optName);;  
 return options.getOption(optName) != null;  
 return optName.equals("-"); ;  
 return optName.length() == 2;  
 return optName.equals(name);;  
 return !shortOptions.containsKey(optName);  
 return !shortOptions.containsKey(optName);;  
 return !options.hasOption(optName);;  
 return options.getShortOption(optName)!=null;  
  return optName.equals("-");;  
 return options.isShortOption(optName);;  
 return optionNames.contains(optName);  
 return options.getShortOption(optName);;  
 return optName.startsWith("--"); ;  
 return options.addOption(optName);;  
 return optName.equals("--");;  
 return optName.length() == 0;  
 return hasShortOption(optName);  
 return !optName.isEmpty();  
 return --optName;  
 return !shortOptions.contains(optName);  
 return options.hasShortName(optName);  
  return optName;  
 return optName.equals(optName);;  
 return options.isOption(optName);  
 return optName.equals("-");  
  return options.hasOption(optName);;  
  return false;  
 return options.get(optName) != null;  
 return shortOptions.containsKey(optName);  
 return !options.hasOption(optName);  
 return optName.equalsIgnoreCase(name);;  
 return optName.equals(shortName);  
 return options.addOption(optName);  
 return options.hasValue(optName);  
 return optName.equals(optName);  
  return optName.startsWith("-");;  
 return optName.startsWith("-");  
 return options.hasKey(optName);;  
 return null != optName;  
 return options.isShortOption(optName);  
 return optName.length() > 2;  
 return (optName.equals("-"));;  
 return optionNames.contains(optName);;  
  return optName == null;  
 return opts.hasShortOption(optName);;  
 return optName.length() != 0;  
 return optName.equalsIgnoreCase(optName);;  
 return optionName.equals(optName);;  
 return isShortOption(optName);  
 return optName.length()==1;  
 return options.hasOpt(optName);;  
 return options.containsKey(optName);;  
 return options.hasOpt(optName);  
 return options.has(optName);  
 return options.getOption(optName);  
 return optName.equalsIgnoreCase("-"); ;  
 return options.isLongOption(optName);  
 return pos != -1;  
 return options.hasOption(optName); ;  
  return optName.length() == 1;  
 return optName.equalsIgnoreCase(name);  
 return hasOption(optName);;  
 return optName.equals("--"); ;  
 return !!optName;  
 return isShortOption(optName); ;  
 return optName.charAt(0) == '-';  
 return optName.equals("help");;  
 return optName.equalsIgnoreCase("--");;  
 return optName.contains("-");;  
 return !optName;  
 return hasShortOption(optName); ;  
 return options.hasShortName(optName);;  
  return optName.length() > 1;  
  return options.hasOption(optName);  
 return optName.endsWith("-");;  
 return options.isOption(optName);;  
 return optName.trim().length() > 0;  
 return options.hasOwnProperty(optName);;  
 return "--" + optName;  
 return optName.equals(shortName);;  
 return shortOptions.contains(optName);;  
 return shortOptions.contains(optName);  
 return optName.equals("short");;  
 return this.hasShortOption(optName);;  
 return options.hasName(optName);  
 return optionNames.containsKey(optName);;  
 return !shortOptions.contains(optName);;  
  return optName.equalsIgnoreCase("-");;  
 return (optName != null);;  
 return optName.equalsIgnoreCase(shortName);;  
 return options.containsShortOption(optName);;  
 return optName.equals(optionName);  
 return options.hasOption(optName)!=null;  
 return Boolean.TRUE;  
 return optName.startsWith("--");  
 return optName.equalsIgnoreCase(shortName);  
 return !optName.equals("-");;  
 return optionNames.containsKey(optName);  
 return optName.equalsIgnoreCase(optName);  
 return optionMap.containsKey(optName);  
 return optName.length()==2;  
 return !optName.isEmpty();;  
 return optName.length() >= 2;  
 return optionMap.containsKey(optName);;  
 return optName.length() == 3;  
  return optName.startsWith("--");;  
 return (optName.length() > 0);  
 return options.getLongOption(optName);  
 return options[optName] != null;  
 return optionName.length() > 0;  
 return (optName.startsWith("-"));;  
 return options.containsOption(optName);  
 return optName.length() > 3;  
 return options.hasArgOption(optName);  
 return optName.length()>0;  
 return options.hasArg(optName);;  
 return optName.equals(opt);;  
 return optName!=null;  
 return name.equals(optName);;  
 return optName == "-";  
 return optName.equals("long");;  
 return options.containsOption(optName);;  
 return (optName.length() > 0);;  
 return -1 != pos;  
 return optName.equalsIgnoreCase("--"); ;  
 return optName.equals("value");;  
 return options.containsKey(optName);  
 return optName.equals("-option");;  
 return isLongOption(optName);;  
 return optName.equals(option);;  
 return options.isLongOption(optName);;  
 return options.hasName(optName);;  
  return isShortOption(optName);;  
 return isOption(optName);;  
 return optName.contains("--");;  
  return options.hasShortOption(optName);;  
 return optName.equals(token);  
 return options.contains(optName);;  
 return !optName.isEmpty(); ;  
 return options.isSet(optName);;  
 return options.definesOption(optName);  
 return options.getString(optName) != null;  
 return optionName.equalsIgnoreCase(optName);;  
 return optName.equals("verbose");;  
 return options.hasShortOpt(optName);;  
 return (optName.equalsIgnoreCase("-"));;  
  return hasShortOption(optName);;  
 return options.hasArgOption(optName);;  
 return options.getOptions().containsKey(optName);;  
 return longOptions.containsKey(optName);  
 return longOptions.containsKey(optName);;  
 return options.containsShortOption(optName);  
 return options.hasKey(optName);  
 return optName.length() >= 1;  
  return optName.equals("-");  
 return optionName.equals(optName);  
 return optName.isEmpty() || true;  
 return options.getLongOption(optName)!=null;  
 return !optName.isEmpty;  
 return optionsMap.containsKey(optName);  
 return optName.equalsIgnoreCase("-");  
 return hasOption(optName);  
 return optName.equalsIgnoreCase(opt);;  
 return optName.equals("-opt");;  
 return options.getOption(optName)!=null;  
 return options.definesShortOption(optName);  
 return optName.equalsIgnoreCase("help");;  
 return opts.hasShortOption(optName);  
 return options.hasValue(optName); ;  
 return shortOpts.containsKey(optName);;  
 return options.hasArg(optName);  
 return (optName == null);;  
 return optionExists(optName);;  
 return optName.equals("");  
 return this.hasShortOption(optName);  
 return opts.hasOption(optName);;  
 return pos == token.length() - 1;  
 return options.getOptions().containsKey(optName);  
 return !shortOptions.has(optName);  
 return optName.isEmpty() == false;  
 return optName.indexOf('=') != -1;  
 return options.getShortOption(optName)==null;  
  return optName.length() == 0;  
 return options.contains(optName);  
 return optName.equals("name");;  
 return !options.getShortOption(optName);  
 return false != optName;  
 return options.has(optName); ;  
  return optName.length() == 2;  
 return optName.equals('-');;  
 return optName == "-" || optName;  
 return optName == shortName;  
  return optName.equals(name);  
 return optName.equals("option");;  
 return existsShortOption(optName);;  
 return optName.contains("--"); ;  
 return options.isSetOption(optName);;  
 return optName.contains("-"); ;  
 return --optName == optName;  
 return optionName;  
 return options.isSetOption(optName);  
 return option.hasShortOption(optName);;  
 return optName.equals("help");  
 return !optName.isEmpty() && true;  
 return getShortOption(optName) != null;  
 return pos > 0;  
  return optName.equals("--");;  
 return !shortOptions.contains(optName;  
 return optName.equalsIgnoreCase(optionName);  
 return !!options.hasOption(optName);;  
 return !options.getShortOption(optName);;  
 return optName == optName;  
 return boolean;  
 return options.hasClassOption(optName);;  
 return optName.equals("opt");;  
 return !options.has(optName);  
 return optionName != null;  
 return optName.equals(optionsName);  
 return !shortOpts.containsKey(optName);;  
 return optName.equals(shortOpt);;  
 return _shortOptions.containsKey(optName);;  
 ; return options.hasShortOption(optName);   
 --; return options.hasShortOption(optName);   
 return true; return options.hasShortOption(optName);   
 //return true; return options.hasShortOption(optName);   
 ; return options.hasShortOption(optName);   
  return true; return options.hasShortOption(optName);   
 return optName != null; return options.hasShortOption(optName);   
 int idx = 0; return options.hasShortOption(optName);   
 int i = 0; return options.hasShortOption(optName);   
 optName += "="; return options.hasShortOption(optName);   
 ++; return options.hasShortOption(optName);   
 int index = 0; return options.hasShortOption(optName);   
 options; return options.hasShortOption(optName);   
 optName = token; return options.hasShortOption(optName);   
 //$NON-NLS-1$; return options.hasShortOption(optName);   
 --optName; return options.hasShortOption(optName);   
 //return optName != null; return options.hasShortOption(optName);   
  ; return options.hasShortOption(optName);   
 assert optName != null; return options.hasShortOption(optName);   
 int pos; return options.hasShortOption(optName);   
 optName += "-"; return options.hasShortOption(optName);   
 String optName = token; return options.hasShortOption(optName);   
 token = token.trim();; return options.hasShortOption(optName);   
 String optValue = token; return options.hasShortOption(optName);   
 options = null; return options.hasShortOption(optName);   
 pos += 2; return options.hasShortOption(optName);   
 i; return options.hasShortOption(optName);   
 String optValue = null; return options.hasShortOption(optName);   
 ++optCount; return options.hasShortOption(optName);   
 //; return options.hasShortOption(optName);   
 // return true; return options.hasShortOption(optName);   
 return false; return options.hasShortOption(optName);   
 nextToken; return options.hasShortOption(optName);   
 ++optIndex; return options.hasShortOption(optName);   
 ++pos; return options.hasShortOption(optName);   
 optName = optName; return options.hasShortOption(optName);   
 ++count; return options.hasShortOption(optName);   
  //return true; return options.hasShortOption(optName);   
 int optIndex = 0; return options.hasShortOption(optName);   
 int count = 0; return options.hasShortOption(optName);   
 token = token.toLowerCase();; return options.hasShortOption(optName);   
 int i; return options.hasShortOption(optName);   
 int len = 0; return options.hasShortOption(optName);   
 ; return options.hasShortOption(optName);   
 index += 2; return options.hasShortOption(optName);   
 //return false; return options.hasShortOption(optName);   
 boolean found = false; return options.hasShortOption(optName);   
 String optName; return options.hasShortOption(optName);   
 --options; return options.hasShortOption(optName);   
 int idx = -1; return options.hasShortOption(optName);   
 required; return options.hasShortOption(optName);   
 String optValue; return options.hasShortOption(optName);   
 String opt = optName; return options.hasShortOption(optName);   
 option; return options.hasShortOption(optName);   
 optName += "-";; return options.hasShortOption(optName);   
; return options.hasShortOption(optName);   
  --; return options.hasShortOption(optName);   
 flags; return options.hasShortOption(optName);   
 index += 1; return options.hasShortOption(optName);   
 options = options; return options.hasShortOption(optName);   
 boolean found; return options.hasShortOption(optName);   
 pos += 1; return options.hasShortOption(optName);   
 int idx = 1; return options.hasShortOption(optName);   
 int len = 2; return options.hasShortOption(optName);   
 int i = 1; return options.hasShortOption(optName);   
 int len = 1; return options.hasShortOption(optName);   
 long; return options.hasShortOption(optName);   
 nextToken = token; return options.hasShortOption(optName);   
 @return; return options.hasShortOption(optName);   
 optName += "-" + token; return options.hasShortOption(optName);   
 --opt; return options.hasShortOption(optName);   
 String opt = token; return options.hasShortOption(optName);   
  return optName != null; return options.hasShortOption(optName);   
 options += optName; return options.hasShortOption(optName);   
 nextToken(); return options.hasShortOption(optName);   
 //    return true; return options.hasShortOption(optName);   
 check; return options.hasShortOption(optName);   
 short opt; return options.hasShortOption(optName);   
 ++i; return options.hasShortOption(optName);   
 ""; return options.hasShortOption(optName);   
 ++options; return options.hasShortOption(optName);   
 options = this; return options.hasShortOption(optName);   
  ; return options.hasShortOption(optName);   
 options.clear();; return options.hasShortOption(optName);   
 ++index; return options.hasShortOption(optName);   
 optName += ":"; return options.hasShortOption(optName);   
 token; return options.hasShortOption(optName);   
 //return optName; return options.hasShortOption(optName);   
  ; return options.hasShortOption(optName);   
 -- optName; return options.hasShortOption(optName);   
 int pos = 0; return options.hasShortOption(optName);   
 index; return options.hasShortOption(optName);   
 optName += token; return options.hasShortOption(optName);   
 int idx = pos; return options.hasShortOption(optName);   
   ; return options.hasShortOption(optName);   
 int i=0; return options.hasShortOption(optName);   
 opt = optName; return options.hasShortOption(optName);   
 opt; return options.hasShortOption(optName);   
 try; return options.hasShortOption(optName);   
 int index = -1; return options.hasShortOption(optName);   
  --; return options.hasShortOption(optName);   
 options.addOption(optName; return options.hasShortOption(optName);   
 int index = 1; return options.hasShortOption(optName);   
  //return true; return options.hasShortOption(optName);   
 int length = 1; return options.hasShortOption(optName);   
 ++length; return options.hasShortOption(optName);   
 int len; return options.hasShortOption(optName);   
 short option; return options.hasShortOption(optName);   
 String optName = optName; return options.hasShortOption(optName);   
 return true; return options.hasShortOption(optName);   
 flag; return options.hasShortOption(optName);   
 for; return options.hasShortOption(optName);   
 int start = pos; return options.hasShortOption(optName);   
 -- --; return options.hasShortOption(optName);   
 String opt = null; return options.hasShortOption(optName);   
  return false; return options.hasShortOption(optName);   
 int n = 0; return options.hasShortOption(optName);   
 int length = 0; return options.hasShortOption(optName);   
 //--; return options.hasShortOption(optName);   
 checked; return options.hasShortOption(optName);   
 ++optionsCount; return options.hasShortOption(optName);   
 i++); return options.hasShortOption(optName);   
 ++token; return options.hasShortOption(optName);   
 int optIdx = 0; return options.hasShortOption(optName);   
 int pos = -1; return options.hasShortOption(optName);   
 int length = 2; return options.hasShortOption(optName);   
 int optCount = 0; return options.hasShortOption(optName);   
 int idx = 2; return options.hasShortOption(optName);   
 //	return true; return options.hasShortOption(optName);   
 boolean hasShortOption = false; return options.hasShortOption(optName);   
  ++; return options.hasShortOption(optName);   
 String name = token; return options.hasShortOption(optName);   
 return pos != -1; return options.hasShortOption(optName);   
 int idx; return options.hasShortOption(optName);   
 index++;; return options.hasShortOption(optName);   
 int count = 1; return options.hasShortOption(optName);   
 long option; return options.hasShortOption(optName);   
 short optName; return options.hasShortOption(optName);   
 // --; return options.hasShortOption(optName);   
 int i = -1; return options.hasShortOption(optName);   
 index --; return options.hasShortOption(optName);   
 optName = null; return options.hasShortOption(optName);   
 prefix; return options.hasShortOption(optName);   
 String value = token; return options.hasShortOption(optName);   
 pos++;; return options.hasShortOption(optName);   
 //      return true; return options.hasShortOption(optName);   
  // return true; return options.hasShortOption(optName);   
 else; return options.hasShortOption(optName);   
 short; return options.hasShortOption(optName);   
 debug; return options.hasShortOption(optName);   
 int start = 0; return options.hasShortOption(optName);   
  ; return options.hasShortOption(optName);   
 this; return options.hasShortOption(optName);   
 token = optName; return options.hasShortOption(optName);   
 String value = null; return options.hasShortOption(optName);   
 	return true; return options.hasShortOption(optName);   
 count += 1; return options.hasShortOption(optName);   
    ; return options.hasShortOption(optName);   
 int offset = 0; return options.hasShortOption(optName);   
 flags = 0; return options.hasShortOption(optName);   
 String optVal = token; return options.hasShortOption(optName);   
 i=0; return options.hasShortOption(optName);   
 int optIndex = 1; return options.hasShortOption(optName);   
 ++options.count; return options.hasShortOption(optName);   
 --option; return options.hasShortOption(optName);   
  // return true; return options.hasShortOption(optName);   
 ++optLength; return options.hasShortOption(optName);   
 boolean result = true; return options.hasShortOption(optName);   
 options = new Options; return options.hasShortOption(optName);   
     return true; return options.hasShortOption(optName);   
 ++optionCount; return options.hasShortOption(optName);   
 //        return true; return options.hasShortOption(optName);   
 String optString = token; return options.hasShortOption(optName);   
 options = options.clone(); return options.hasShortOption(optName);   
 index = pos + 1; return options.hasShortOption(optName);   
 @return boolean; return options.hasShortOption(optName);   
 optName = optionName; return options.hasShortOption(optName);   
 String optVal = null; return options.hasShortOption(optName);   
 /*package; return options.hasShortOption(optName);   
 ++options.length; return options.hasShortOption(optName);   
  optName = token; return options.hasShortOption(optName);   
 lastToken = token; return options.hasShortOption(optName);   
 optName += "-"; ; return options.hasShortOption(optName);   
 --opt name; return options.hasShortOption(optName);   
 int end = pos; return options.hasShortOption(optName);   
 int optLen = 0; return options.hasShortOption(optName);   
 int optPos = 0; return options.hasShortOption(optName);   
 String str = token; return options.hasShortOption(optName);   
 boolean result = false; return options.hasShortOption(optName);   
 String[] optNames = null; return options.hasShortOption(optName);   
 int optIndex = -1; return options.hasShortOption(optName);   
 optName += "--";; return options.hasShortOption(optName);   
 // return optName != null; return options.hasShortOption(optName);   
 String optValue = optName; return options.hasShortOption(optName);   
 //return optName == null; return options.hasShortOption(optName);   
	; return options.hasShortOption(optName);   
 e.g; return options.hasShortOption(optName);   
 String shortName = token; return options.hasShortOption(optName);   
 boolean hasShortOption = true; return options.hasShortOption(optName);   
 boolean hasOpt = false; return options.hasShortOption(optName);   
 String val = token; return options.hasShortOption(optName);   
 LongOption longOption = null; return options.hasShortOption(optName);   
 int optLength = 0; return options.hasShortOption(optName);   
 optName += "";; return options.hasShortOption(optName);   
 ++options.optionCount; return options.hasShortOption(optName);   
 short opt = optName; return options.hasShortOption(optName);   
 optName += ":";; return options.hasShortOption(optName);   
 pos = token.indexOf('=');; return options.hasShortOption(optName);   
 token = token.toUpperCase();; return options.hasShortOption(optName);   
 optName += optSeparator; return options.hasShortOption(optName);   
 long optName = token; return options.hasShortOption(optName);   
 ++options.numOptions; return options.hasShortOption(optName);   
 optionName = token; return options.hasShortOption(optName);   
 options.clearOptions();; return options.hasShortOption(optName);   
 String shortName = null; return options.hasShortOption(optName);   
 Token token2 = null; return options.hasShortOption(optName);   
 options.verbose = true; return options.hasShortOption(optName);   
 int idx = pos + 1; return options.hasShortOption(optName);   
 Options opt = options; return options.hasShortOption(optName);   
 boolean hasOption = false; return options.hasShortOption(optName);   
 optName += "_"; return options.hasShortOption(optName);   
 String optStr = token; return options.hasShortOption(optName);   
 LongOption option = null; return options.hasShortOption(optName);   
 int index = pos; return options.hasShortOption(optName);   
 String optName = null; return options.hasShortOption(optName);   
 String[] optNames; return options.hasShortOption(optName);   
 optName += "."; return options.hasShortOption(optName);   
 short optName = token; return options.hasShortOption(optName);   
 int idx = pos + 2; return options.hasShortOption(optName);   
 options.add(optName; return options.hasShortOption(optName);   
 int end = pos + 1; return options.hasShortOption(optName);   
 int end = pos + 2; return options.hasShortOption(optName);   
 optName += optionSuffix; return options.hasShortOption(optName);   
 String optionName = token; return options.hasShortOption(optName);   
 String[] optArgs = null; return options.hasShortOption(optName);   
 String[] optValues = null; return options.hasShortOption(optName);   
 String longName = token; return options.hasShortOption(optName);   
 optionName = optName; return options.hasShortOption(optName);   
 optName += "_" + token; return options.hasShortOption(optName);   
 int start = pos + 1; return options.hasShortOption(optName);   
 optName += "-option";; return options.hasShortOption(optName);   
 optName += "Options";; return options.hasShortOption(optName);   
 int len = optionLength; return options.hasShortOption(optName);   
 optName.trim();; return options.hasShortOption(optName);   
 optName += "+";; return options.hasShortOption(optName);   
 long optValue = 0; return options.hasShortOption(optName);   
 Token optName = token; return options.hasShortOption(optName);   
 optName += "Option";; return options.hasShortOption(optName);   
 optName += ":"; ; return options.hasShortOption(optName);   
 OptName optName = null; return options.hasShortOption(optName);   
return  options.hasShortOption(optName);  
return  options.hasShortOption(optName);;  
return  options.hasOption(optName);  
return  true;  
return  options.hasLongOption(optName);  
return  options.hasOption(optName);;  
return  optName.length() > 0;  
return  optName != null;  
return  false;  
return  optName;  
return  options.hasLongOption(optName);;  
return  optName.length() == 1;  
return  options.hasOption(optName); ;  
return  options.getOption(optName) != null;  
return  hasShortOption(optName);  
return  !shortOptions.containsKey(optName);  
return  options.getShortOption(optName);  
return  optName == null;  
return  optName.length() > 1;  
return  optName.equals("-");;  
return  options.get(optName) != null;  
return  optName.startsWith("-");;  
return  shortOptions.containsKey(optName);  
return  options.isShortOption(optName);  
return  isShortOption(optName);  
return  !options.hasOption(optName);  
return  options.isOption(optName);  
return  optionNames.contains(optName);  
return  optName.startsWith("-"); ;  
return  options.hasShortName(optName);  
return  optName.equals("-"); ;  
return  options.getShortOption(optName)!=null;  
return  !shortOptions.contains(optName);  
return  optName.length() == 2;  
return  options.addOption(optName) != null;  
return  isShortOption(optName); ;  
return  options.has(optName);  
return  options.isLongOption(optName);  
return  options.hasOption(optName) ;  
return  options.hasOpt(optName);  
return  optName.equals("-") || optName;  
return  !options.hasOption(optName);;  
return  options.isShortOption(optName);;  
return  options.has(optName) || false;  
return  optName.startsWith("--");;  
return  hasShortOption(optName) || false;  
return  options.getShortOption(optName).booleanValue;  
return  null != optName;  
return  pos != -1;  
return  shortOptions.containsKey(optName);;  
return  hasShortOption(optName);;  
return  !optName.isEmpty();  
return  --optName;  
return  hasShortOption(optName); ;  
return  options.hasValue(optName) || false;  
return  options.containsShortOption(optName);  
return  options.getShortOption(optName);;  
return  optName.equals(shortName);  
return  isShortOption(optName);;  
return  isShortOption(optName) || false;  
return  hasShortOption(optName) == true;  
return  !shortOptions.containsKey(optName);;  
return  optName.length() == 0;  
return  optName.startsWith("--"); ;  
return  opts.hasShortOption(optName);  
return  options.hasName(optName);  
return  options.hasValue(optName);  
return  options.has(optName); ;  
return  optName.equalsIgnoreCase("-");;  
return  optionNames.containsKey(optName);  
return  options.getOptions().containsKey(optName);  
return  options.containsOption(optName);  
return  shortOptions.contains(optName);  
return  this.hasShortOption(optName);  
return  "--" + optName;  
return  options.has(optName);;  
return  optName.equalsIgnoreCase("-"); ;  
return  options.hasOption(optName).booleanValue;  
return  options.hasOption(optName)!=null;  
return  (optName.equals("-"));;  
return  Boolean.TRUE;  
return  (optName.length() > 0);  
return  optName.equals(SHORT_OPTION);  
return  options.hasArgOption(optName);  
return  options.definesShortOption(optName);  
return  optName.startsWith("-");  
return  optName.equals("--");;  
return  optionMap.containsKey(optName);  
return  optName.equals(shortName);;  
return  optName.length() != 0;  
return  hasShortOption;  
return  optName.equals(optName);  
return  options.hasKey(optName);  
return  optName.length() > 2;  
return  options.containsKey(optName);  
return  !optName;  
return  options.hasValue(optName) && true;  
return  !!optName;  
return  options.getString(optName) != null;  
return  options.containsKey(optName) || false;  
return  options.options.containsKey(optName);  
return  shortOptions.containsKey(optName); ;  
return  optName.startsWith("-") || optName;  
return  options.getShortOption(optName) ;  
return  optName.startsWith("--") || optName;  
return  options[optName] != null;  
return  hasShortOption(optName) && true;  
return  options.definesOption(optName);  
return  -1 != pos;  
return  options.hasValue(optName); ;  
return  options.has(optName) != null;  
return  options.hasValue(optName);;  
return  hasOption(optName);  
return  _shortOptions.containsKey(optName);  
return  optName.equals("--") || optName;  
return  opts.hasShortOption(optName);;  
return  options.has(optName) == true;  
return  false != optName;  
return  options.getOption(optName).hasArg();  
return  optName.charAt(0) == '-';  
return  isShortOption(optName) == true;  
return  optName.startsWith("--");  
return  longOptions.containsKey(optName);  
return  options.isValidShortOption(optName);  
return  optionsMap.containsKey(optName);  
return  optName.equals(shortOptName);  
return  options.getShortOption(optName)==null;  
return  options.isOption(optName);;  
return  optName.equals(name) || false;  
return  options.hasKey(optName); ;  
return  options.option(optName) != null;  
return  hasShortOption(optName) != false;  
return  optName.equalsIgnoreCase(shortName);  
return  optName.length() >= 2;  
return  optName.equals("--"); ;  
return  options.hasShortOpt(optName);  
return  !options.getShortOption(optName);  
return  options.hasKey(optName) || false;  
return  !optName.equals("-");;  
return  optName.equals(shortOptionName);  
return  options.hasKey(optName);;  
return  pos == token.length() - 1;  
return  isShortOption(optName) && true;  
return  options.hasClassOption(optName);  
return  options.hasOpt(optName);;  
return  optName.equals(shortOption);;  
return  (optName.startsWith("-"));;  
return  options.containsShortOption(optName);;  
return  optName.equals(optName);;  
return  !shortOpts.containsKey(optName);  
return  options.isSetOption(optName);  
return  options.containsKey(optName) && true;  
return  options.hasLongOpt(optName);  
return  options.getShortOption(optName); ;  
return  pos > 0;  
return  options.containsKey(optName);;  
return  options.hasValue(optName) || true;  
return  isShortOption(optName) || true;  
return  optName.equals(shortName); ;  
return  this.hasShortOption(optName);;  
return  options.has(optName) && true;  
return  optName.equals(SHORT_OPTION);;  
return  options.contains(optName);  
return  (optName.length() == 1);  
return  optName.length()==1;  
return  optName.equalsIgnoreCase("--");;  
return  optName.equals("-");  
return  Long.parseLong(optName) > 0;  
return  options.containsKey(optName); ;  
return  optName.equals(optionName);  
return  optName.trim().length() > 0;  
return  options.isInShortOption(optName);  
return  null == optName;  
return  optName.equals("-option");;  
return  hasShortOption(optName) || true;  
return  optName.equalsIgnoreCase("-") || optName;  
return  !options.hasValue(optName);  
return  shortOpts.containsKey(optName);  
return  options.hasValue(optName) == true;  
return  !shortOptions.contains(optName);;  
return  shortOptionsMap.containsKey(optName);  
return  options.hasShortName(optName);;  
return  (optName != null);  
return  optionNames.contains(optName);;  
return  getShortOption(optName) != null;  
return  isOption(optName);  
return  !"".equals(optName);  
return  optName.equalsIgnoreCase(shortName);;  
return  optName.equalsIgnoreCase("--"); ;  
return  options.hasShortOptions(optName);  
return  optName.endsWith("-");;  
return  !shortOptions.has(optName);  
return  options.isInOption(optName);  
return  optName.contains("-");;  
return  isLongOption(optName);  
return  pos >= 0;  
return  optionName.equals(optName);;  
return  optName.equals(getShortOption());;  
return  options.isLongOption(optName);;  
return  optionName.equals(optName);  
return  false == optName;  
return  optName.length() >= 1;  
return  options.hasOptionValue(optName);  
return  --optName == optName;  
return  optName.length() == 3;  
return  optionName.length() > 0;  
return  options.getName(optName) != null;  
return  optName.equals(optName); ;  
return  options.addOption(optName) == true;  
return  options.hasOwnProperty(optName);;  
return  options.contains(optName) || false;  
return  optionNames.containsKey(optName);;  
return  options.getOption(optName) == null;  
return  hasShortOption(optName) ;  
return  options.getLongOption(optName)!=null;  
return  options.hasIntOption(optName);  
return  hasShortOption(optName) == false;  
return  option.hasShortOption(optName);  
return  options.has(optName) == false;  
return  options.options.has(optName);  
return  options.hasOption(optName)==true;  
return  optName.equalsIgnoreCase(optName);  
return  options.get(optName).hasArg();  
return  pos > -1;  
return  !optionNames.contains(optName);  
return  opts.hasOption(optName);  
return  optName.equalsIgnoreCase(SHORT_OPTION);  
return  options.hasKey(optName) && true;  
return  -1 == pos;  
return  options.options().containsKey(optName);  
return  !"";  
return  optName.equals(name) || true;  
return  options.containsLongOption(optName);  
return  boolean;  
return  optName.equals(shortOption);  
return  null;  
return  options.hasStringOption(optName);  
return  optName.equalsIgnoreCase(shortName); ;  
return  0 < pos;  
return  optName.equalsIgnoreCase(shortOptName);  
return  options.getShortOption(optName).isPresent;  
return  optName.equalsIgnoreCase(SHORT_OPTION);;  
return  hasOption;  
return  --;  
return  --short;  
return  found;  
return  exists;  
return  required;  
return ;  
return ;  
return options.hasShortOption(optName);   
return options.hasOption(optName);   
return options.getShortOption(optName);   
return options.hasLongOption(optName);   
return options.isShortOption(optName);   
return options.getOption(optName);   
return options.getLongOption(optName);   
return options.hasOpt(optName);   
return options.getOpt(optName);   
return options.hasValue(optName);   
return options.isLongOption(optName);   
return options.containsShortOption(optName);   
return options.addOption(optName);   
return options.hasShortName(optName);   
return options.shortOptions.containsKey(optName);   
return options.containsKey(optName);   
return options.isOption(optName);   
return options.hasShortOpt(optName);   
return options.containsOption(optName);   
return options.hasKey(optName);   
return options.hasLongOpt(optName);   
return options.shortOption(optName);   
return options.getOptName(optName);   
return options.hasOwnProperty(optName);   
return options.shortOptions.contains(optName);   
return options.getOptionName(optName);   
return options.hasName(optName);   
return options.hasArg(optName);   
return options.shortOptions().containsKey(optName);   
return options.isSetOption(optName);   
return options.shortOptions().contains(optName);   
return options.hasArgOption(optName);   
return options.getStringOption(optName);   
return options.shortOptions(optName);   
return options.definesOption(optName);   
return options.contains(optName);   
return options.getShortOption(optName);   
return options.definesShortOption(optName);   
return options.getShortOpt(optName);   
return options.hasShortOptions(optName);   
return options.hasClassOption(optName);   
return options.isInOption(optName);   
return options.isValidShortOption(optName);   
return options.getOptions().containsKey(optName);   
return options.isInShortOption(optName);   
return options.containsLongOption(optName);   
return options.optName(optName);   
return options.hasOptionValue(optName);   
return options.getLongOpt(optName);   
return options.getBooleanOption(optName);   
return options.getName(optName);   
return options.hasValueOption(optName);   
return options.isOpt(optName);   
return options.getIntOption(optName);   
return options.findShortOption(optName);   
return options.hasOptions(optName);   
return options.hasIntOption(optName);   
return options.getString(optName);   
return options.getOptionByName(optName);   
return options.hasSingleOption(optName);   
return options.hasRequiredOption(optName);   
return options.hasBooleanOption(optName);   
return options.hasStringOption(optName);   
return options.isSet(optName);   
return options.optionExists(optName);   
return options.containsKeyShortOption(optName);   
return options.shortOpts.containsKey(optName);   
return options.getOptByName(optName);   
return options.hasShortOptionValue(optName);   
return options.haveOption(optName);   
return options.hasFlag(optName);   
return options.hasValueShortOption(optName);   
return options.hasOptionalShortOption(optName);   
return options.getBoolOption(optName);   
return options.longOption(optName);   
return options.indexOfShortOption(optName);   
return options.get(optName);   
return options.indexOf(optName);   
return options.getOptionValue(optName);   
return options.option(optName);   
return options.hasKeyword(optName);   
return options.getShortOptions(optName);   
return options.hasOptName(optName);   
return options.getVariable(optName);   
return options.isInLongOption(optName);   
return options.getBoolean(optName);   
return options.addShortOption(optName);   
return options.defines(optName);   
return options.shortOptions.get(optName);   
return options.startsWith(optName);   
return options.has(optName);   
return options.isInOptions(optName);   
return options.hasAttribute(optName);   
return options.opt(optName);   
return options.isLongOpt(optName);   
return options.getOptions(optName);   
return options.isFlagSet(optName);   
return options.hasCommand(optName);   
return options.isValidOption(optName);   
return options.getOpts().containsKey(optName);   
return options.findOption(optName);   
return options.hasOptionalOption(optName);   
return options.useShortOption(optName);   
return options.getOptionIndex(optName);   
return options.getVariableName(optName);   
return options.options.hasOption(optName);   
return options.hasWord(optName);   
return options.getShortOptions().contains(optName);   
return options.getOptShort(optName);   
return options.optName.equals(optName);   
return options.getStringOpt(optName);   
return options.hasCustomOption(optName);   
return options.getOptions().contains(optName);   
return options.existsShortOption(optName);   
return options.optNames().contains(optName);   
return options.hasLongOptions(optName);   
return options.acceptsShortOption(optName);   
return options.hasRequiredShortOption(optName);   
return options.shortOptions.has(optName);   
return options.hasArgument(optName);   
return options.isStringOption(optName);   
return options.getShortOptionByName(optName);   
return options.hasShortNameOption(optName);   
return options.getLongOption(optName);   
return options.isDefined(optName);   
return options.optName().equals(optName);   
return options.hasValidShortOption(optName);   
return options.getShortOptions().containsKey(optName);   
return options.optShortOption(optName);   
return options.getRequiredOption(optName);   
return options.containsOpt(optName);   
return options.haveShortOption(optName);   
return options.hasNamedOption(optName);   
return options.getOptValue(optName);   
return options.hasAttr(optName);   
return options.getOptLong(optName);   
return options.definesLongOption(optName);   
return options.supportsShortOption(optName);   
return options.isInOpt(optName);   
return options.getOptionShort(optName);   
return options.isDefinedOption(optName);   
return options.shortOpt(optName);   
return options.getOptionCount(optName);   
return options.getShortOptionName(optName);   
return options.equals(optName);   
return options.getShortName(optName);   
return options.getShortOptionValue(optName);   
return options.shortOpts.contains(optName);   
return options.getRequiredShortOption(optName);   
return options.isSetShortOption(optName);   
return options.containsName(optName);   
return options.getOptions().hasOption(optName);   
return options.parseShortOption(optName);   
return options.existsOption(optName);   
return options.getIntOpt(optName);   
return options.valueOf(optName);   
return options.hasToken(optName);   
return options.optionIsSet(optName);   
return options.options.containsKey(optName);   
return options.haslongOption(optName);   
return options.hasExtraOption(optName);   
return options.hasDoubleOption(optName);   
return options.hasShortFlag(optName);   
return options.getSingleOption(optName);   
return options.getOptionFlag(optName);   
return options.containsKeyOption(optName);   
return options.hasShortOptionName(optName);   
return options.getHasShortOption(optName);   
return options.shortOpts().containsKey(optName);   
return options.getValidShortOption(optName);   
return options.isSetLongOption(optName);   
return options.hasCommandOption(optName);   
return options.optLong(optName);   
return options.optionName(optName);   
return options.containsKeyLongOption(optName);   
return options.hasValidOption(optName);   
return options.hasArgShortOption(optName);   
return options.hasFullOption(optName);   
return options.isPresent(optName);   
return options.optLongOption(optName);   
return options.getInt(optName);   
return options.hasShortcut(optName);   
return options.hasShortOptionByName(optName);   
return options.includesShortOption(optName);   
return options.hasshortOption(optName);   
return options.hasSpecialOption(optName);   
return options.isDefaultOption(optName);   
return options.options(optName);   
return options.hasValue(optName);   
return options.acceptsOption(optName);   
return options.getValue(optName);   
return options.checkShortOption(optName);   
return options.optByName(optName);   
return options.hasExtendedOption(optName);   
return options.getOptFlag(optName);   
return options.hasPreferredOption(optName);   
return options.getopt(optName);   
return options.needsShortOption(optName);   
return options.hasShort(optName);   
return options.getOptString(optName);   
return options.getLongOptions().containsKey(optName);   
return options.parseLongOption(optName);   
return options.setOption(optName);   
return options.withShortOption(optName);   
return options.getKeyword(optName);   
return options.hasInternalOption(optName);   
return options.getProperty(optName);   
return options.startsWithOption(optName);   
return options.canOption(optName);   
return options.isObjectOption(optName);   
return options.longOptions.containsKey(optName);   
return options.hasNextOption(optName);   
return options.shortOpts().contains(optName);   
return options.optName.contains(optName);   
return options.hasDirectOption(optName);   
return options. hasShortOption(optName);   
return options.hasArg(optName);   
return options.hasKey(optName);   
return options.getOptionString(optName);   
return options.options.getShortOption(optName);   
return options.getOpts(optName);   
return options.shortOpts(optName);   
return options.hasParameter(optName);   
return options.getOptShortName(optName);   
return options.isSupportedOption(optName);   
return options.optionsExists(optName);   
return options.getFullOption(optName);   
return options.singleOption(optName);   
return options.hasRawOption(optName);   
return options.canShortOption(optName);   
return options.hasBoolean(optName);   
return options.getBooleanOpt(optName);   
return options.isShortName(optName);   
return options.hasMoreOptions(optName);   
return options.getOptionName().equals(optName);   
return options.hasShortcutOption(optName);   
return options.isInstantiableOption(optName);   
return options.hasDescription(optName);   
return options.getName().equals(optName);   
return options.hasKeyOption(optName);   
return options.getopt(optName);   
return options.indexOfOption(optName);   
return options.hasShortArgument(optName);   
return options.getBool(optName);   
return options.getBoolOpt(optName);   
return options.HasShortOption(optName);   
return options.isInList(optName);   
return options.hasSubOption(optName);   
return options.hasTag(optName);   
return options.hasMandatoryOption(optName);   
return options.hasShortOption(optName);   
return options.hasShortOption(optName, true);   
return options.hasShortOption(optName); });   
return options.hasShortOption(optName, false);   
return options.hasShortOption(optName););   
return options.hasShortOption(optionName);   
return options.hasShortOption(optName); );   
return options.hasShortOption(token);   
return options.hasShortOption(optName.toLowerCase);   
return options.hasShortOption( optName);   
return options.hasShortOption(optName.trim);   
return options.hasShortOption(opName);   
return options.hasShortOption(optName );   
return options.hasShortOption(optname);   
return options.hasShortOption(optName); },);   
return options.hasShortOption(optName.toLowerCase()););   
return options.hasShortOption(optName,true);   
return options.hasShortOption(optName<mask3>optName);   
return options.hasShortOption(optName2);   
return options.hasShortOption(optName<mask1>optName);   
return options.hasShortOption(optName + "=");   
return options.hasShortOption(optName,false);   
return options.hasShortOption(optName)!=null);   
return options.hasShortOption(optName, null);   
return options.hasShortOption(optName.trim()););   
return options.hasShortOption(pos);   
return options.hasShortOption(opt);   
return options.hasShortOption(optName.toLowerCase());   
return options.hasShortOption(optName<mask5>optName);   
return options.hasShortOption(optName.toUpperCase()););   
return options.hasShortOption(optName);   );   
return options.hasShortOption(optgroupName);   
return options.hasShortOption(optName, 0);   
return options.hasShortOption(optName.toUpperCase);   
return options.hasShortOption(optName != null);   
return options.hasShortOption(optName); //);   
return options.hasShortOption(optName).booleanValue(););   
return options.hasShortOption(option);   
return options.hasShortOption(null);   
return options.hasShortOption(OptName);   
return options.hasShortOption(tokName);   
return options.hasShortOption(optName );   
return options.hasShortOption(ptName);   
return options.hasShortOption(prefName);   
return options.hasShortOption(optNameName);   
return options.hasShortOption(paramName);   
return options.hasShortOption(optName+":"+token);   
return options.hasShortOption(optName;);   
return options.hasShortOption(optName<mask5>token););   
return options.hasShortOption(optName.intern);   
return options.hasShortOption(optName);  );   
return options.hasShortOption(getOptionName(optName);   
return options.hasShortOption(optNamePrefix);   
return options.hasShortOption(argName);   
return options.hasShortOption(optName, optName);   
return options.hasShortOption(optName, -1);   
return options.hasShortOption(optName<mask2>optName);   
return options.hasShortOption(name);   
return options.hasShortOption(optName, this);   
return options.hasShortOption(optName); );   
return options.hasShortOption(optName)(token);   
return options.hasShortOption(optName);     );   
return options.hasShortOption(optName, 1);   
return options.hasShortOption(optName);  });   
return options.hasShortOption(optName + "-");   
return options.hasShortOption(optName, token);   
return options.hasShortOption(optName);  );   
return options.hasShortOption(optName == null);   
return options.hasShortOption(optName+1);   
return options.hasShortOption(attrName);   
return options.hasShortOption(optName, pos);   
return options.hasShortOption(optgroup);   
return options.hasShortOption(optName)(optName);   
return options.hasShortOption(optName1);   
return options.hasShortOption(optName), true);   
return options.hasShortOption(optNameStr);   
return options.hasShortOption(tok);   
return options.hasShortOption(optName.toLowerCase(););   
return options.hasShortOption(optName).booleanValue);   
return options.hasShortOption(optName);    );   
return options.hasShortOption(optName)==true);   
return options.hasShortOption(optName, options);   
return options.hasShortOption(opts);   
return options.hasShortOption(optName!=null);   
return options.hasShortOption(optName.trim());   
return options.hasShortOption(optName);});   
return options.hasShortOption(optName - 1);   
return options.hasShortOption(optName || optName);   
return options.hasShortOption(optName<mask5> optName);   
return options.hasShortOption(optName)>=0);   
return options.hasShortOption(optName|$);   
return options.hasShortOption(optName)););   
return options.hasShortOption(optName+"-"+token);   
return options.hasShortOption(optName_short);   
return options.hasShortOption(optName*2);   
return options.hasShortOption(pref);   
return options.hasShortOption(optName)!=false);   
return options.hasShortOption(optPath);   
return options.hasShortOption(shortName);   
return options.hasShortOption(pos + 1);   
return options.hasShortOption(optName || null);   
return options.hasShortOption(optId);   
return options.hasShortOption(optName);   });   
return options.hasShortOption(getOption(optName);   
return options.hasShortOption(optName});   
return options.hasShortOption(optName++);   
return options.hasShortOption(optName,0);   
return options.hasShortOption(optName, i);   
return options.hasShortOption(prop);   
return options.hasShortOption(str);   
return options.hasShortOption(optName, shortName);   
return options.hasShortOption(optName, 2);   
return options.hasShortOption(valName);   
return options.hasShortOption(optNameType);   
return options.hasShortOption(intOptName);   
return options.hasShortOption(optName, shortOptions);   
return options.hasShortOption(optName<mask6>optName);   
return options.hasShortOption(optNameValue);   
return options.hasShortOption(optName);  );   
return options.hasShortOption(optName) != null);   
return options.hasShortOption(optName || token);   
return options.hasShortOption(pos+1);   
return options.hasShortOption(optName) == true);   
return options.hasShortOption(optParams);   
return options.hasShortOption(optName+optName);   
return options.hasShortOption(suboptName);   
return options.hasShortOption(optName<mask14>optName);   
return options.hasShortOption(errName);   
return options.hasShortOption(term);   
return options.hasShortOption(optNameString);   
return options.hasShortOption(optName..);   
return options.hasShortOption(true);   
return options.hasShortOption( optName);   
return options.hasShortOption(optOptName);   
return options.hasShortOption(optName,null);   
return options.hasShortOption(optName)!=null;);   
return options.hasShortOption(optName<mask4>optName);   
return options.hasShortOption(optName=optName);   
return options.hasShortOption();   
return options.hasShortOption(optName, value);   
return options.hasShortOption(opt_name);   
return options.hasShortOption(optsName);   
return options.hasShortOption(optName, name);   
return options.hasShortOption(optName-1);   
return options.hasShortOption(opt name);   
return options.hasShortOption(optName)!= null);   
return options.hasShortOption(op);   
return options.hasShortOption(optName).booleanValue();   
return options.hasShortOption(optName.trim(););   
return options.hasShortOption(optKey);   
return options.hasShortOption(optName.toUpperCase(););   
return options.hasShortOption(optName,optName);   
return options.hasShortOption(longName);   
return options.hasShortOption(optName);}});   
return options.hasShortOption(optName,);   
return options.hasShortOption(optName );   
return options.hasShortOption(optName || false);   
return options.hasShortOption(optName, verbose);   
return options.hasShortOption(optName>=0);   
return options.hasShortOption(val);   
return options.hasShortOption(optNames);   
return options.hasShortOption(optName);   );   
return options.hasShortOption(false);   
return options.hasShortOption(optName, prefix);   
return options.hasShortOption(optName);*/);   
return options.hasShortOption(optString);   
return options.hasShortOption(optionsName);   
return options.hasShortOption(param);   
return options.hasShortOption(getOption);   
return options.hasShortOption(optName || "-");   
return options.hasShortOption(varName);   
return options.hasShortOption(spec);   
return options.hasShortOption(optName; );   
return options.hasShortOption(optName, --);   
return options.hasShortOption(optName)==false);   
return options.hasShortOption(optarg);   
return options.hasShortOption(attr);   
return options.hasShortOption(intName);   
return options.hasShortOption(subOptName);   
return options.hasShortOption(symbol);   
return options.hasShortOption(optNameId);   
return options.hasShortOption(optNameOverride);   
return options.hasShortOption(optNameSuffix);   
return options.hasShortOption(subName);   
return options.hasShortOption(tag);   
return options.hasShortOption(optName true);   
return options.hasShortOption(optionalName);   
return options.hasShortOption(o);   
return options.hasShortOption(pt);   
return options.hasShortOption(Opt);   
return options.hasShortOption(0);   
return options.hasShortOption(extName);   
return options.hasShortOption(subOption);   
return options.hasShortOption(optValue);   
return options.hasShortOption(shortOptName);   
return options.hasShortOption(optName...);   
return options.hasShortOption(propName);   
return options.hasShortOption(getOptionName);   
return options.hasShortOption(field);   
return options.hasShortOption(id);   
return options.hasShortOption(key);   
return options.hasShortOption(otName);   
return options.hasShortOption(optType);   
return options.hasShortOption(ent);   
return options.hasShortOption(optToken);   
return options.hasShortOption(optParam);   
return options.hasShortOption(options);   
return options.hasShortOption(oName);   
return options.hasShortOption(idx);   
return options.hasShortOption(varOpt);   
return options.hasShortOption(shortOption);   
return options.hasShortOption(intOpt);   
return options.hasShortOption(subOpt);   
return options.hasShortOption(oid);   
return options.hasShortOption(OptVal);   
return options.hasShortOption(path);   
return options.hasShortOption(string);   
return options.hasShortOption(OPTNAME);   
return options.hasShortOption(err);   
return options.hasShortOption(optIndex);   
return options.hasShortOption(OptLong);   
return options.hasShortOption(addOption);   
return options.hasShortOption(optN);   
return options.hasShortOption(arg);   
return options.hasShortOption(pluginName);   
return options.hasShortOption(optVal);   
return options.hasShortOption(optParamsName);   
return options.hasShortOption(typ);   
return options.hasShortOption(paramName);   
return options.hasShortOption(index);   
return options.hasShortOption(OPT);   
return options.hasShortOption(text);   
return options.hasShortOption(exp);   
return options.hasShortOption(p);   
return options.hasShortOption(ot);   
return options.hasShortOption(phrase);   
return options.hasShortOption(word);   
return options.hasShortOption(ptr);   
return options.hasShortOption(this);   
return options.hasShortOption(optional);   
return options.hasShortOption(value);   
return options.hasShortOption(ext);   
return options.hasShortOption(cmd);   
return options.hasShortOption(perm);   
return options.hasShortOption(elem);   
return options.hasShortOption(sub);   
return options.hasShortOption(getopt);   
return options.hasShortOption(expr);   
return options.hasShortOption(hasArg);   
return options.hasShortOption(var);   
return options.hasShortOption(optName, true);   
return options.hasShortOption(optName, false);   
return options.hasShortOption(optName, null);   
return options.hasShortOption(optName,true);   
return options.hasShortOption(optName,false);   
return options.hasShortOption(optName, 0);   
return options.hasShortOption(optName, this);   
return options.hasShortOption(optName, -1);   
return options.hasShortOption(optName, token);   
return options.hasShortOption(optName, optName);   
return options.hasShortOption(optName, 1);   
return options.hasShortOption(optName, pos);   
return options.hasShortOption(optName, options);   
return options.hasShortOption(optName, shortOptions);   
return options.hasShortOption(optName, 2);   
return options.hasShortOption(optName, value);   
return options.hasShortOption(optName, name);   
return options.hasShortOption(optName, prefix);   
return options.hasShortOption(optName, shortName);   
return options.hasShortOption(optName, type);   
return options.hasShortOption(optName, optValue);   
return options.hasShortOption(optName, defaultValue);   
return options.hasShortOption(optName,0);   
return options.hasShortOption(optName, i);   
return options.hasShortOption(optName, shortOpts);   
return options.hasShortOption(optName,null);   
return options.hasShortOption(optName, false, false);   
return options.hasShortOption(optName, optType);   
return options.hasShortOption(optName, verbose);   
return options.hasShortOption(optName, parser);   
return options.hasShortOption(optName, flag);   
return options.hasShortOption(optName, false, true);   
return options.hasShortOption(optName, mode);   
return options.hasShortOption(optName, 3);   
return options.hasShortOption(optName, longName);   
return options.hasShortOption(optName, optionName);   
return options.hasShortOption(optName, shortNames);   
return options.hasShortOption(optName, Boolean.TRUE);   
return options.hasShortOption(optName, index);   
return options.hasShortOption(optName, true, false);   
return options.hasShortOption(optName, --);   
return options.hasShortOption(optName, true, true);   
return options.hasShortOption(optName, flags);   
return options.hasShortOption(optName, syntax);   
return options.hasShortOption(optName, delimiter);   
return options.hasShortOption(optName, debug);   
return options.hasShortOption(optName, "");   
return options.hasShortOption(optName, length);   
return options.hasShortOption(optName,1);   
return options.hasShortOption(optName, String.class);   
return options.hasShortOption(optName,optName);   
return options.hasShortOption(optName, strict);   
return options.hasShortOption(optName, word);   
return options.hasShortOption(optName, short);   
return options.hasShortOption(optName, args);   
return options.hasShortOption(optName, key);   
return options.hasShortOption(optName, option);   
return options.hasShortOption(optName, opts);   
return options.hasShortOption(optName, val);   
return options.hasShortOption(optName, lang);   
return options.hasShortOption(optName, config);   
return options.hasShortOption(optName, p);   
return options.hasShortOption(optName, TRUE);   
return options.hasShortOption(optName, t);   
return options.hasShortOption(optName, arguments);   
return options.hasShortOption(optName, version);   
return options.hasShortOption(optName, 0, 1);   
return options.hasShortOption(optName, radix);   
return options.hasShortOption(optName, 10);   
return options.hasShortOption(optName, default);   
return options.hasShortOption(optName, pos > 0);   
return options.hasShortOption(optName, separator);   
return options.hasShortOption(optName, isLongOption);   
return options.hasShortOption(optName, req);   
return options.hasShortOption(optName, true);   
return options.hasShortOption(optName, 4);   
return options.hasShortOption(optName, field);   
return options.hasShortOption(optName, defaultVal);   
return options.hasShortOption(optName, opt);   
return options.hasShortOption(optName, language);   
return options.hasShortOption(optName, optVal);   
return options.hasShortOption(optName, position);   
return options.hasShortOption(optName,this);   
return options.hasShortOption(optName, longOptions);   
return options.hasShortOption(optName,token);   
return options.hasShortOption(optName, tag);   
return options.hasShortOption(optName, line);   
return options.hasShortOption(optName, env);   
return options.hasShortOption(optName, sep);   
return options.hasShortOption(optName, optPrefix);   
return options.hasShortOption(optName, depth);   
return options.hasShortOption(optName, int);   
return options.hasShortOption(optName, optionPrefix);   
return options.hasShortOption(optName, optionType);   
return options.hasShortOption(optName, state);   
return options.hasShortOption(optName, pos + 1);   
return options.hasShortOption(optName, id);   
return options.hasShortOption(optName, this.name);   
return options.hasShortOption(optName, param);   
return options.hasShortOption(optName, method);   
return options.hasShortOption(optName, shortOption);   
return options.hasShortOption(optName, true););   
return options.hasShortOption(optName, longOpt);   
return options.hasShortOption(optName, shortPrefix);   
return options.hasShortOption(optName,2);   
return options.hasShortOption(optName, tokenizer);   
return options.hasShortOption(optName, conf);   
return options.hasShortOption(optName, shortValues);   
return options.hasShortOption(optName, format);   
return options.hasShortOption(optName, input);   
return options.hasShortOption(optName, shortOpt);   
return options.hasShortOption(optName, --short);   
return options.hasShortOption(optName, locale);   
return options.hasShortOption(optName, 0, true);   
return options.hasShortOption(optName, cmd);   
return options.hasShortOption(optName, file);   
return options.hasShortOption(optName, scanner);   
return options.hasShortOption(optName, !shortOptions);   
return options.hasShortOption(optName, logger);   
return options.hasShortOption(optName, argName);   
return options.hasShortOption(optName,optValue);   
return options.hasShortOption(optName, Boolean.FALSE);   
return options.hasShortOption(optName, defaultValues);   
return options.hasShortOption(optName, 0, 0);   
return options.hasShortOption(optName, caseSensitive);   
return options.hasShortOption(optName, ctx);   
return options.hasShortOption(optName, isShort);   
return options.hasShortOption(optName, lexer);   
return options.hasShortOption(optName, isShortOption);   
return options.hasShortOption(optName, ignoreCase);   
return options.hasShortOption(optName, required);   
return options.hasShortOption(optName, command);   
return options.hasShortOption(optName, idx);   
return options.hasShortOption(optName, enabled);   
return options.hasShortOption(optName, count);   
return options.hasShortOption(optName, description);   
return options.hasShortOption(optName, context);   
return options.hasShortOption(optName, reader);   
return options.hasShortOption(optName, boolean.TRUE);   
return options.hasShortOption(optName, desc);   
return options.hasShortOption(optName, comment);   
return options.hasShortOption(optName, arg);   
return options.hasShortOption(optName, optDefault);   
return options.hasShortOption(optName, s);   
return options.hasShortOption(optName, l);   
return options.hasShortOption(optName, false, null);   
return options.hasShortOption(optName, boolean);   
return options.hasShortOption(optName, label);   
return options.hasShortOption(optName, NAME);   
return options.hasShortOption(optName, tokens);   
return options.hasShortOption(optName, True);   
return options.hasShortOption(optName, symbol);   
return options.hasShortOption(optName,pos);   
return options.hasShortOption(optName, shorts);   
return options.hasShortOption(optName, Short.class);   
return options.hasShortOption(optName, shortType);   
return options.hasShortOption(optName, defaultValue);   
return options.hasShortOption(optName, pos+1);   
return options.hasShortOption(optName, "-");   
return options.hasShortOption(optName, pos > 1);   
return options.hasShortOption(optName, true); );   
return options.hasShortOption(optName, yes);   
return options.hasShortOption(optName, longOption);   
return options.hasShortOption(optName, maxOptions);   
return options.hasShortOption(optName, verb);   
return options.hasShortOption(optName, nil);   
return options.hasShortOption(optName, pos >= 0);   
return options.hasShortOption(optName, namespace);   
return options.hasShortOption(optName, argv);   
return options.hasShortOption(optName, shortList);   
return options.hasShortOption(optName, v);   
return options.hasShortOption(optName, target);   
return options.hasShortOption(optName,value);   
return options.hasShortOption(optName, 8);   
return options.hasShortOption(optName, 5);   
return options.hasShortOption(optName, "", true);   
return options.hasShortOption(optName, start);   
return options.hasShortOption(optName, optional);   
return options.hasShortOption(optName, shortFlags);   
return options.hasShortOption(optName, shortArgs);   
return options.hasShortOption(optName, LONG);   
return options.hasShortOption(optName, path);   
return options.hasShortOption(optName, ext);   
return options.hasShortOption(optName, 6);   
return options.hasShortOption(optName, c);   
return options.hasShortOption(optName, x);   
return options.hasShortOption(optName, code);   
return options.hasShortOption(optName, section);   
return options.hasShortOption(optName, flagName);   
return options.hasShortOption(optName, --verbose);   
return options.hasShortOption(optName, long);   
return options.hasShortOption(optName, false);   
return options.hasShortOption(optName, charset);   
return options.hasShortOption(optName, "--);   
return options.hasShortOption(optName,  false);   
return options.hasShortOption(optName, "", false);   
return options.hasShortOption(optName, null, null);   
return options.hasShortOption(optName, Long);   
return options.hasShortOption(optName, argumentName);   
return options.hasShortOption(optName, class);   
return options.hasShortOption(optName, false););   
return options.hasShortOption(optName, optionValue);   
return options.hasShortOption(optName, k);   
return options.hasShortOption(optName, encoding);   
return options.hasShortOption(optName, signature);   
return options.hasShortOption(optName, defaultOption);   
return options.hasShortOption(optName, url);   
return options.hasShortOption(optName, this.options);   
return options.hasShortOption(optName, parserOptions);   
return options.hasShortOption(optName, null, false);   
return options.hasShortOption(optName, shortOptionPrefix);   
return options.hasShortOption(optName, shortFlag);   
return options.hasShortOption(optName, null, true);   
return options.hasShortOption(optName, this.value);   
return options.hasShortOption(optName, boolean.FALSE);   
return options.hasShortOption(optName, "-"););   
return options.hasShortOption(optName, shortopt);   
return options.hasShortOption(optName, "short);   
return options.hasShortOption(optName, 0, false);   
return options.hasShortOption(optName, 0, pos);   
return options.hasShortOption(optName, ""); });   
return options.hasShortOption(optName, System.out);   
return options.hasShortOption(optName, pos == 0);   
return options.hasShortOption(optName, shortOptionName);   
return options.hasShortOption(optName, _shortOptions);   
return options.hasShortOption(optName, shortOptionNames);   
return options.hasShortOption(optName, "help);   
return options.hasShortOption(optName, shortOptName);   
return options.hasShortOption(optName, shortOptionMap);   
return options.hasShortOption(optName, false); );   
return options.hasShortOption(optName, isLongOpt);   
return options.hasShortOption(optName, Long.class);   
return options.hasShortOption(optName, pos + 2);   
return options.hasShortOption(optName, false, 0);   
return options.hasShortOption(optName,false,false);   
return options.hasShortOption(optName, _short);   
return options.hasShortOption(optName, this.flags);   
return options.hasShortOption(optName, defaultShort);   
return options.hasShortOption(optName, !optName);   
return options.hasShortOption(optName,false,true);   
return options.hasShortOption(optName, Token.SHORT);   
return options.hasShortOption(optName, isLong);   
return options.hasShortOption(optName, true, null);   
return options.hasShortOption(optName, "long);   
return options.hasShortOption(optName, options.hasArg);   
return options.hasShortOption(optName, NAME_SHORT);   
return options.hasShortOption(optName, !shortOpts);   
return options.hasShortOption(optName, token, true);   
return options.hasShortOption(optName, TYPE_LONG);   
return options.hasShortOption(optName, longOptionName);   
return options.hasShortOption(optName,optName);   
return options.hasShortOption(token,optName);   
return options.hasShortOption(name,optName);   
return options.hasShortOption(optPrefix,optName);   
return options.hasShortOption(shortName,optName);   
return options.hasShortOption(null,optName);   
return options.hasShortOption(prefix,optName);   
return options.hasShortOption(this,optName);   
return options.hasShortOption(pos,optName);   
return options.hasShortOption(options,optName);   
return options.hasShortOption(optionName,optName);   
return options.hasShortOption(shortOptions,optName);   
return options.hasShortOption("",optName);   
return options.hasShortOption(value,optName);   
return options.hasShortOption(key,optName);   
return options.hasShortOption(true,optName);   
return options.hasShortOption(longName,optName);   
return options.hasShortOption(cmd,optName);   
return options.hasShortOption(shortOpts,optName);   
return options.hasShortOption(0,optName);   
return options.hasShortOption(optType,optName);   
return options.hasShortOption(args,optName);   
return options.hasShortOption(false,optName);   
return options.hasShortOption(label,optName);   
return options.hasShortOption(optPath,optName);   
return options.hasShortOption(tag,optName);   
return options.hasShortOption(optValue,optName);   
return options.hasShortOption(flags,optName);   
return options.hasShortOption(optionPrefix,optName);   
return options.hasShortOption(flag,optName);   
return options.hasShortOption(this.name,optName);   
return options.hasShortOption(optId,optName);   
return options.hasShortOption(option,optName);   
return options.hasShortOption(id,optName);   
return options.hasShortOption(paramName,optName);   
return options.hasShortOption(pos+1,optName);   
return options.hasShortOption(path,optName);   
return options.hasShortOption(optIndex,optName);   
return options.hasShortOption(namespace,optName);   
return options.hasShortOption(optGroup,optName);   
return options.hasShortOption(opt,optName);   
return options.hasShortOption(symbol,optName);   
return options.hasShortOption(optDir,optName);   
return options.hasShortOption(pluginName,optName);   
return options.hasShortOption(optLabel,optName);   
return options.hasShortOption(fieldName,optName);   
return options.hasShortOption(SHORT,optName);   
return options.hasShortOption(optNamespace,optName);   
return options.hasShortOption(url,optName);   
return options.hasShortOption(shortOpt,optName);   
return options.hasShortOption(argv,optName);   
return options.hasShortOption(argName,optName);   
return options.hasShortOption(cmdName,optName);   
return options.hasShortOption(optionsName,optName);   
return options.hasShortOption(type,optName);   
return options.hasShortOption(optVal,optName);   
return options.hasShortOption(appName,optName);   
return options.hasShortOption(ctx,optName);   
return options.hasShortOption(opts,optName);   
return options.hasShortOption(flagName,optName);   
return options.hasShortOption(optKey,optName);   
return options.hasShortOption(arg,optName);   
return options.hasShortOption(description,optName);   
return options.hasShortOption(input,optName);   
return options.hasShortOption(field,optName);   
return options.hasShortOption(context,optName);   
return options.hasShortOption(val,optName);   
return options.hasShortOption(command,optName);   
return options.hasShortOption(index,optName);   
return options.hasShortOption(shortPrefix,optName);   
return options.hasShortOption( optName,optName);   
return options.hasShortOption(parameterName,optName);   
return options.hasShortOption(shortOptName,optName);   
return options.hasShortOption(1,optName);   
return options.hasShortOption(target,optName);   
return options.hasShortOption(parser,optName);   
return options.hasShortOption(longOpt,optName);   
return options.hasShortOption(optname,optName);   
return options.hasShortOption(word,optName);   
return options.hasShortOption(moduleName,optName);   
return options.hasShortOption(optAlias,optName);   
return options.hasShortOption(optPos,optName);   
return options.hasShortOption(tagName,optName);   
return options.hasShortOption(defaultValue,optName);   
return options.hasShortOption(shortname,optName);   
return options.hasShortOption(varname,optName);   
return options.hasShortOption(alias,optName);   
return options.hasShortOption(pattern,optName);   
return options.hasShortOption(p,optName);   
return options.hasShortOption(optGroupName,optName);   
return options.hasShortOption(pos-1,optName);   
return options.hasShortOption(desc,optName);   
return options.hasShortOption(optOpt,optName);   
return options.hasShortOption(group,optName);   
return options.hasShortOption(shortOption,optName);   
return options.hasShortOption(longOptName,optName);   
return options.hasShortOption(str,optName);   
return options.hasShortOption(shortOptionPrefix,optName);   
return options.hasShortOption(optionsPrefix,optName);   
return options.hasShortOption(optTag,optName);   
return options.hasShortOption(mode,optName);   
return options.hasShortOption(params,optName);   
return options.hasShortOption(param,optName);   
return options.hasShortOption(filename,optName);   
return options.hasShortOption(i,optName);   
return options.hasShortOption(indexName,optName);   
return options.hasShortOption(pref,optName);   
return options.hasShortOption(pos + 1,optName);   
return options.hasShortOption(groupName,optName);   
return options.hasShortOption(serverName,optName);   
return options.hasShortOption(delimiter,optName);   
return options.hasShortOption(file,optName);   
return options.hasShortOption(optionKey,optName);   
return options.hasShortOption(pt,optName);   
return options.hasShortOption(optFullName,optName);   
return options.hasShortOption(shortOptPrefix,optName);   
return options.hasShortOption(text,optName);   
return options.hasShortOption(methodName,optName);   
return options.hasShortOption(options.name,optName);   
return options.hasShortOption(term,optName);   
return options.hasShortOption(optarg,optName);   
return options.hasShortOption(optCategory,optName);   
return options.hasShortOption(help,optName);   
return options.hasShortOption(opt.name,optName);   
return options.hasShortOption(SHORT_OPTION,optName);   
return options.hasShortOption(optList,optName);   
return options.hasShortOption(shortNames,optName);   
return options.hasShortOption(programName,optName);   
return options.hasShortOption(optMode,optName);   
return options.hasShortOption(version,optName);   
return options.hasShortOption(parameter,optName);   
return options.hasShortOption(optionsKey,optName);   
return options.hasShortOption(config,optName);   
return options.hasShortOption(optParam,optName);   
return options.hasShortOption(separator,optName);   
return options.hasShortOption(optIdx,optName);   
return options.hasShortOption(shortOptionName,optName);   
return options.hasShortOption(2,optName);   
return options.hasShortOption(longOptions,optName);   
return options.hasShortOption(method,optName);   
return options.hasShortOption(optLong,optName);   
return options.hasShortOption(scope,optName);   
return options.hasShortOption(className,optName);   
return options.hasShortOption(dir,optName);   
return options.hasShortOption(short,optName);   
return options.hasShortOption(tokens,optName);   
return options.hasShortOption(uri,optName);   
return options.hasShortOption(optgroup,optName);   
return options.hasShortOption(parent,optName);   
return options.hasShortOption(opName,optName);   
return options.hasShortOption(node,optName);   
return options.hasShortOption(s,optName);   
return options.hasShortOption(arguments,optName);   
return options.hasShortOption(serviceName,optName);   
return options.hasShortOption(server,optName);   
return options.hasShortOption(position,optName);   
return options.hasShortOption(prop,optName);   
return options.hasShortOption(optCode,optName);   
return options.hasShortOption(root,optName);   
return options.hasShortOption(attr,optName);   
return options.hasShortOption(keyword,optName);   
return options.hasShortOption(suffix,optName);   
return options.hasShortOption(fileName,optName);   
return options.hasShortOption(idx,optName);   
return options.hasShortOption(packageName,optName);   
return options.hasShortOption(line,optName);   
return options.hasShortOption(usage,optName);   
return options.hasShortOption(shortId,optName);   
return options.hasShortOption(optClass,optName);   
return options.hasShortOption(optString,optName);   
return options.hasShortOption(section,optName);   
return options.hasShortOption(filepath,optName);   
return options.hasShortOption(code,optName);   
return options.hasShortOption(dest,optName);   
return options.hasShortOption(commandName,optName);   
return options.hasShortOption(shortType,optName);   
return options.hasShortOption(language,optName);   
return options.hasShortOption(optNamePrefix,optName);   
return options.hasShortOption(attrName,optName);   
return options.hasShortOption(signature,optName);   
return options.hasShortOption(shortIndex,optName);   
return options.hasShortOption(optArgs,optName);   
return options.hasShortOption(k,optName);   
return options.hasShortOption(optFlag,optName);   
return options.hasShortOption(optOptName,optName);   
return options.hasShortOption(optShortName,optName);   
return options.hasShortOption(SHORT_OPT,optName);   
return options.hasShortOption(shortID,optName);   
return options.hasShortOption(optSpace,optName);   
return options.hasShortOption(optVar,optName);   
return options.hasShortOption(optind,optName);   
return options.hasShortOption(default,optName);   
return options.hasShortOption(optName);,optName);   
return options.hasShortOption(longOptionName,optName);   
return options.hasShortOption(optionsIndex,optName);   
return options.hasShortOption(strName,optName);   
return options.hasShortOption(m,optName);   
return options.hasShortOption(,optName);   
return options.hasShortOption(cfg,optName);   
return options.hasShortOption(host,optName);   
return options.hasShortOption(optMap,optName);   
return options.hasShortOption(pos+2,optName);   
return options.hasShortOption(longOptPrefix,optName);   
return options.hasShortOption(this.options,optName);   
return options.hasShortOption(tagname,optName);   
return options.hasShortOption(optionGroup,optName);   
return options.hasShortOption(comment,optName);   
return options.hasShortOption(tok,optName);   
return options.hasShortOption(o,optName);   
return options.hasShortOption(LONG,optName);   
return options.hasShortOption(element,optName);   
return options.hasShortOption(argp,optName);   
return options.hasShortOption(NAME,optName);   
return options.hasShortOption(prefixName,optName);   
return options.hasShortOption(mName,optName);   
return options.hasShortOption(shortArgs,optName);   
return options.hasShortOption(paramName,optName);   
return options.hasShortOption(shortList,optName);   
return options.hasShortOption(optLongName,optName);   
return options.hasShortOption(cname,optName);   
return options.hasShortOption(optionId,optName);   
return options.hasShortOption(longOption,optName);   
return options.hasShortOption(module,optName);   
return options.hasShortOption(env,optName);   
return options.hasShortOption(cluster,optName);   
return options.hasShortOption(session,optName);   
return options.hasShortOption(optStr,optName);   
return options.hasShortOption(branchName,optName);   
return options.hasShortOption(shortLabel,optName);   
return options.hasShortOption(segment,optName);   
return options.hasShortOption(baseUrl,optName);   
return options.hasShortOption(varName,optName);   
return options.hasShortOption(OPT_PREFIX,optName);   
return options.hasShortOption(OPTION_PREFIX,optName);   
return options.hasShortOption(optDef,optName);   
return options.hasShortOption(SHORT_PREFIX,optName);   
return options.hasShortOption(this.key,optName);   
return options.hasShortOption(shortOptionsPrefix,optName);   
return options.hasShortOption(SHORT_OPTIONS,optName);   
return options.hasShortOption(pos - 1,optName);   
return options.hasShortOption(optOptions,optName);   
return options.hasShortOption(optNames,optName);   
return options.hasShortOption(shortopt,optName);   
return options.hasShortOption(optArg,optName);   
return options.hasShortOption(longOptionPrefix,optName);   
return options.hasShortOption(defaultOption,optName);   
return options.hasShortOption(opt_name,optName);   
return options.hasShortOption(opt.value,optName);   
return options.hasShortOption(shortNamePrefix,optName);   
return options.hasShortOption(fullOpt,optName);   
return  options.hasShortOption(optName);   
return  this.hasShortOption(optName);   
return  !options.hasShortOption(optName);   
return  this.options.hasShortOption(optName);   
return  opts.hasShortOption(optName);   
return  option.hasShortOption(optName);   
return  opt.hasShortOption(optName);   
return  flags.hasShortOption(optName);   
return  (options.hasShortOption(optName);   
return   options.hasShortOption(optName);   
return  _options.hasShortOption(optName);   
return  --options.hasShortOption(optName);   
return  arguments.hasShortOption(optName);   
return  Options.hasShortOption(optName);   
return  config.hasShortOption(optName);   
return  optionMap.hasShortOption(optName);   
return  super.hasShortOption(optName);   
return  shortOptions.hasShortOption(optName);   
return  optionList.hasShortOption(optName);   
return  longOptions.hasShortOption(optName);   
return  commands.hasShortOption(optName);   
return  getOptions.hasShortOption(optName);   
return  command.hasShortOption(optName);   
return  ! options.hasShortOption(optName);   
return  !!options.hasShortOption(optName);   
return  commandLine.hasShortOption(optName);   
return  parent.hasShortOption(optName);   
return  options.hasShortOption(optName);   
return  !this.hasShortOption(optName);   
return  values.hasShortOption(optName);   
return  parser.hasShortOption(optName);   
return  Option.hasShortOption(optName);   
return  args.hasShortOption(optName);   
return  cmd.hasShortOption(optName);   
return  settings.hasShortOption(optName);   
return  optOptions.hasShortOption(optName);   
return  availableOptions.hasShortOption(optName);   
return  optionRegistry.hasShortOption(optName);   
return  optMap.hasShortOption(optName);   
return  parameters.hasShortOption(optName);   
return  cli.hasShortOption(optName);   
return  tokens.hasShortOption(optName);   
return  options.options.hasShortOption(optName);   
return  commandOptions.hasShortOption(optName);   
return  program.hasShortOption(optName);   
return  params.hasShortOption(optName);   
return  true if options.hasShortOption(optName);   
return  map.hasShortOption(optName);   
return  superOptions.hasShortOption(optName);   
return  m.hasShortOption(optName);   
return  properties.hasShortOption(optName);   
return  this.flags.hasShortOption(optName);   
return  StringUtils.hasShortOption(optName);   
return  console.hasShortOption(optName);   
return  optNames.hasShortOption(optName);   
return  optionTable.hasShortOption(optName);   
return  input.hasShortOption(optName);   
return  o.hasShortOption(optName);   
return  allOptions.hasShortOption(optName);   
return  target.hasShortOption(optName);   
return  helper.hasShortOption(optName);   
return  isOption.hasShortOption(optName);   
return  cmdOptions.hasShortOption(optName);   
return  optionManager.hasShortOption(optName);   
return  configuration.hasShortOption(optName);   
return    options.hasShortOption(optName);   
return  optionStore.hasShortOption(optName);   
return  names.hasShortOption(optName);   
return  name.hasShortOption(optName);   
return  -options.hasShortOption(optName);   
return  self.hasShortOption(optName);   
return  optionSet.hasShortOption(optName);   
return  customOptions.hasShortOption(optName);   
return  this._options.hasShortOption(optName);   
return  _, options.hasShortOption(optName);   
return  s.hasShortOption(optName);   
return  hasOptions.hasShortOption(optName);   
return  globalOptions.hasShortOption(optName);   
return  mOptions.hasShortOption(optName);   
return  (shortOptions.hasShortOption(optName);   
return  !(options.hasShortOption(optName);   
return  fields.hasShortOption(optName);   
return  optName.hasShortOption(optName);   
return  hasOption.hasShortOption(optName);   
return  index.hasShortOption(optName);   
return  dest.hasShortOption(optName);   
return  _shortOptions.hasShortOption(optName);   
return  list.hasShortOption(optName);   
return  this.parser.hasShortOption(optName);   
return  attributes.hasShortOption(optName);   
return  --.hasShortOption(optName);   
return  defaultOptions.hasShortOption(optName);   
return  that.hasShortOption(optName);   
return  types.hasShortOption(optName);   
return  selected.hasShortOption(optName);   
return  optList.hasShortOption(optName);   
return  this.config.hasShortOption(optName);   
return  optManager.hasShortOption(optName);   
return  optionOptions.hasShortOption(optName);   
return  type.hasShortOption(optName);   
return  os.hasShortOption(optName);   
return  !shortOptions.hasShortOption(optName);   
return  this.arguments.hasShortOption(optName);   
return  this.option.hasShortOption(optName);   
return  false != options.hasShortOption(optName);   
return  options.getOptions.hasShortOption(optName);   
return  data.hasShortOption(optName);   
return  selectedOptions.hasShortOption(optName);   
return  messages.hasShortOption(optName);   
return  description.hasShortOption(optName);   
return  value.hasShortOption(optName);   
return  Utils.hasShortOption(optName);   
return  validOptions.hasShortOption(optName);   
return  null != options.hasShortOption(optName);   
return  parsedOptions.hasShortOption(optName);   
return  OPTIONS.hasShortOption(optName);   
return  isOptions.hasShortOption(optName);   
return  utils.hasShortOption(optName);   
return  set.hasShortOption(optName);   
return  overrides.hasShortOption(optName);   
return  programOptions.hasShortOption(optName);   
return  strings.hasShortOption(optName);   
return  shortOpts.hasShortOption(optName);   
return  userOptions.hasShortOption(optName);   
return  node.hasShortOption(optName);   
return  myOptions.hasShortOption(optName);   
return  this.opts.hasShortOption(optName);   
return  proto.hasShortOption(optName);   
return  client.hasShortOption(optName);   
return  token.hasShortOption(optName);   
return  currentOptions.hasShortOption(optName);   
return  tasks.hasShortOption(optName);   
return  engine.hasShortOption(optName);   
return  subOptions.hasShortOption(optName);   
return  false == options.hasShortOption(optName);   
return  knownOptions.hasShortOption(optName);   
return  sub.hasShortOption(optName);   
return  optionGroup.hasShortOption(optName);   
return  (!options.hasShortOption(optName);   
return !options.hasShortOption(optName);   
return  true && options.hasShortOption(optName);   
return  context.hasShortOption(optName);   
return  menu.hasShortOption(optName);   
return  !option.hasShortOption(optName);   
return  elements.hasShortOption(optName);   
return  children.hasShortOption(optName);   
return  helpers.hasShortOption(optName);   
return  current.hasShortOption(optName);   
return  optionNames.hasShortOption(optName);   
return  m_options.hasShortOption(optName);   
return  root.hasShortOption(optName);   
return  handler.hasShortOption(optName);   
return  script.hasShortOption(optName);   
return  options .hasShortOption(optName);   
return  longOpts.hasShortOption(optName);   
return  conf.hasShortOption(optName);   
return  cmds.hasShortOption(optName);   
return  labels.hasShortOption(optName);   
return  optEngine.hasShortOption(optName);   
return  internalOptions.hasShortOption(optName);   
return  task.hasShortOption(optName);   
return  !_options.hasShortOption(optName);   
return Options.hasShortOption(optName);   
return  the options.hasShortOption(optName);   
return  longOption.hasShortOption(optName);   
return  service.hasShortOption(optName);   
return  usage.hasShortOption(optName);   
return  Arrays.hasShortOption(optName);   
return  modules.hasShortOption(optName);   
return  help.hasShortOption(optName);   
return  descriptor.hasShortOption(optName);   
return  container.hasShortOption(optName);   
return  flag.hasShortOption(optName);   
return  this.opt.hasShortOption(optName);   
return  p.hasShortOption(optName);   
return  true.hasShortOption(optName);   
return  cliOptions.hasShortOption(optName);   
return  features.hasShortOption(optName);   
return  _flags.hasShortOption(optName);   
return  cfg.hasShortOption(optName);   
return  long.hasShortOption(optName);   
return  tc.hasShortOption(optName);   
return  Util.hasShortOption(optName);   
return  super.options.hasShortOption(optName);   
return  return options.hasShortOption(optName);   
return  prefs.hasShortOption(optName);   
return  server.hasShortOption(optName);   
return  delegate.hasShortOption(optName);   
return  this.configuration.hasShortOption(optName);   
return  groups.hasShortOption(optName);   
return  v.hasShortOption(optName);   
return  output.hasShortOption(optName);   
return  cluster.hasShortOption(optName);   
return  these.hasShortOption(optName);   
return  desc.hasShortOption(optName);   
return  exists.hasShortOption(optName);   
return  api.hasShortOption(optName);   
return  this.command.hasShortOption(optName);   
return  additionalOptions.hasShortOption(optName);   
return  view.hasShortOption(optName);   
return  getOptions.hasShortOption(optName);   
return  this.parameters.hasShortOption(optName);   
return  OptionParser.hasShortOption(optName);   
return  inOptions.hasShortOption(optName);   
return  activeOptions.hasShortOption(optName);   
return  parseOptions.hasShortOption(optName);   
return  inputOptions.hasShortOption(optName);   
return  model.hasShortOption(optName);   
return  message.hasShortOption(optName);   
return  components.hasShortOption(optName);   
return .hasShortOption(optName);   
return  extraOptions.hasShortOption(optName);   
return  optionValues.hasShortOption(optName);   
return  parsed.hasShortOption(optName);   
return  _opt.hasShortOption(optName);   
return  style.hasShortOption(optName);   
return  this.getOptions.hasShortOption(optName);   
return  aliases.hasShortOption(optName);   
return  ctx.hasShortOption(optName);   
return  plugins.hasShortOption(optName);   
return  manager.hasShortOption(optName);   
return  anyOptions.hasShortOption(optName);   
return  this.commands.hasShortOption(optName);   
return  existingOptions.hasShortOption(optName);   
return  localOptions.hasShortOption(optName);   
return  files.hasShortOption(optName);   
return  optionTree.hasShortOption(optName);   
return  app.hasShortOption(optName);   
return  !opts.hasShortOption(optName);   
return  select.hasShortOption(optName);   
return  _option.hasShortOption(optName);   
return  session.hasShortOption(optName);   
return  optionParser.hasShortOption(optName);   
return  !opt.hasShortOption(optName);   
return  new Options.hasShortOption(optName);   
return options.hasShortOption(optName);   
return  argv.hasShortOption(optName);   
return  parsers.hasShortOption(optName);   
return  result.hasShortOption(optName);   
return  scriptOptions.hasShortOption(optName);   
return  options2.hasShortOption(optName);   
return  !config.hasShortOption(optName);   
return  state.hasShortOption(optName);   
return  !! options.hasShortOption(optName);   
return  appOptions.hasShortOption(optName);   
return  false if options.hasShortOption(optName);   
return  items.hasShortOption(optName);   
return  (--options.hasShortOption(optName);   
return  this.args.hasShortOption(optName);   
return  options.opt.hasShortOption(optName);   
return options.hasShortOption(optName);   
return options.hasShortOption(optName, true);   
return options.hasShortOption(optName); });   
return options.hasShortOption(optName, false);   
return options.hasShortOption(optName););   
return options.hasShortOption(optionName);   
return options.hasShortOption(optName); );   
return options.hasShortOption(token);   
return options.hasShortOption(optName.toLowerCase);   
return options.hasShortOption( optName);   
return options.hasShortOption(optName.trim);   
return options.hasShortOption(opName);   
return options.hasShortOption(optName );   
return options.hasShortOption(optname);   
return options.hasShortOption(optName); },);   
return options.hasShortOption(optName.toLowerCase()););   
return options.hasShortOption(optName,true);   
return options.hasShortOption(optName<mask3>optName);   
return options.hasShortOption(optName2);   
return options.hasShortOption(optName<mask1>optName);   
return options.hasShortOption(optName + "=");   
return options.hasShortOption(optName,false);   
return options.hasShortOption(optName)!=null);   
return options.hasShortOption(optName, null);   
return options.hasShortOption(optName.trim()););   
return options.hasShortOption(pos);   
return options.hasShortOption(opt);   
return options.hasShortOption(optName.toLowerCase());   
return options.hasShortOption(optName<mask5>optName);   
return options.hasShortOption(optName.toUpperCase()););   
return options.hasShortOption(optName);   );   
return options.hasShortOption(optgroupName);   
return options.hasShortOption(optName, 0);   
return options.hasShortOption(optName.toUpperCase);   
return options.hasShortOption(optName != null);   
return options.hasShortOption(optName); //);   
return options.hasShortOption(optName).booleanValue(););   
return options.hasShortOption(option);   
return options.hasShortOption(null);   
return options.hasShortOption(OptName);   
return options.hasShortOption(tokName);   
return options.hasShortOption(optName );   
return options.hasShortOption(ptName);   
return options.hasShortOption(prefName);   
return options.hasShortOption(optNameName);   
return options.hasShortOption(paramName);   
return options.hasShortOption(optName+":"+token);   
return options.hasShortOption(optName;);   
return options.hasShortOption(optName<mask5>token););   
return options.hasShortOption(optName.intern);   
return options.hasShortOption(optName);  );   
return options.hasShortOption(getOptionName(optName);   
return options.hasShortOption(optNamePrefix);   
return options.hasShortOption(argName);   
return options.hasShortOption(optName, optName);   
return options.hasShortOption(optName, -1);   
return options.hasShortOption(optName<mask2>optName);   
return options.hasShortOption(name);   
return options.hasShortOption(optName, this);   
return options.hasShortOption(optName); );   
return options.hasShortOption(optName)(token);   
return options.hasShortOption(optName);     );   
return options.hasShortOption(optName, 1);   
return options.hasShortOption(optName);  });   
return options.hasShortOption(optName + "-");   
return options.hasShortOption(optName, token);   
return options.hasShortOption(optName);  );   
return options.hasShortOption(optName == null);   
return options.hasShortOption(optName+1);   
return options.hasShortOption(attrName);   
return options.hasShortOption(optName, pos);   
return options.hasShortOption(optgroup);   
return options.hasShortOption(optName)(optName);   
return options.hasShortOption(optName1);   
return options.hasShortOption(optName), true);   
return options.hasShortOption(optNameStr);   
return options.hasShortOption(tok);   
return options.hasShortOption(optName.toLowerCase(););   
return options.hasShortOption(optName).booleanValue);   
return options.hasShortOption(optName);    );   
return options.hasShortOption(optName)==true);   
return options.hasShortOption(optName, options);   
return options.hasShortOption(opts);   
return options.hasShortOption(optName!=null);   
return options.hasShortOption(optName.trim());   
return options.hasShortOption(optName);});   
return options.hasShortOption(optName - 1);   
return options.hasShortOption(optName || optName);   
return options.hasShortOption(optName<mask5> optName);   
return options.hasShortOption(optName)>=0);   
return options.hasShortOption(optName|$);   
return options.hasShortOption(optName)););   
return options.hasShortOption(optName+"-"+token);   
return options.hasShortOption(optName_short);   
return options.hasShortOption(optName*2);   
return options.hasShortOption(pref);   
return options.hasShortOption(optName)!=false);   
return options.hasShortOption(optPath);   
return options.hasShortOption(shortName);   
return options.hasShortOption(pos + 1);   
return options.hasShortOption(optName || null);   
return options.hasShortOption(optId);   
return options.hasShortOption(optName);   });   
return options.hasShortOption(getOption(optName);   
return options.hasShortOption(optName});   
return options.hasShortOption(optName++);   
return options.hasShortOption(optName,0);   
return options.hasShortOption(optName, i);   
return options.hasShortOption(prop);   
return options.hasShortOption(str);   
return options.hasShortOption(optName, shortName);   
return options.hasShortOption(optName, 2);   
return options.hasShortOption(valName);   
return options.hasShortOption(optNameType);   
return options.hasShortOption(intOptName);   
return options.hasShortOption(optName, shortOptions);   
return options.hasShortOption(optName<mask6>optName);   
return options.hasShortOption(optNameValue);   
return options.hasShortOption(optName);  );   
return options.hasShortOption(optName) != null);   
return options.hasShortOption(optName || token);   
return options.hasShortOption(pos+1);   
return options.hasShortOption(optName) == true);   
return options.hasShortOption(optParams);   
return options.hasShortOption(optName+optName);   
return options.hasShortOption(suboptName);   
return options.hasShortOption(optName<mask14>optName);   
return options.hasShortOption(errName);   
return options.hasShortOption(term);   
return options.hasShortOption(optNameString);   
return options.hasShortOption(optName..);   
return options.hasShortOption(true);   
return options.hasShortOption( optName);   
return options.hasShortOption(optOptName);   
return options.hasShortOption(optName,null);   
return options.hasShortOption(optName)!=null;);   
return options.hasShortOption(optName<mask4>optName);   
return options.hasShortOption(optName=optName);   
return options.hasShortOption();   
return options.hasShortOption(optName, value);   
return options.hasShortOption(opt_name);   
return options.hasShortOption(optsName);   
return options.hasShortOption(optName, name);   
return options.hasShortOption(optName-1);   
return options.hasShortOption(opt name);   
return options.hasShortOption(optName)!= null);   
return options.hasShortOption(op);   
return options.hasShortOption(optName).booleanValue();   
return options.hasShortOption(optName.trim(););   
return options.hasShortOption(optKey);   
return options.hasShortOption(optName.toUpperCase(););   
return options.hasShortOption(optName,optName);   
return options.hasShortOption(longName);   
return options.hasShortOption(optName);}});   
return options.hasShortOption(optName,);   
return options.hasShortOption(optName );   
return options.hasShortOption(optName || false);   
return options.hasShortOption(optName, verbose);   
return options.hasShortOption(optName>=0);   
return options.hasShortOption(val);   
return options.hasShortOption(optNames);   
return options.hasShortOption(optName);   );   
return options.hasShortOption(false);   
return options.hasShortOption(optName, prefix);   
return options.hasShortOption(optName);*/);   
return options.hasShortOption(optString);   
return options.hasShortOption(optionsName);   
return options.hasShortOption(param);   
return options.hasShortOption(getOption);   
return options.hasShortOption(optName || "-");   
return options.hasShortOption(varName);   
return options.hasShortOption(spec);   
return options.hasShortOption(optName; );   
return options.hasShortOption(optName, --);   
return options.hasShortOption(optName)==false);   
return options.hasShortOption(optarg);   
return options.hasShortOption(attr);   
return options.hasShortOption(intName);   
return options.hasShortOption(subOptName);   
return options.hasShortOption(symbol);   
return options.hasShortOption(optNameId);   
return options.hasShortOption(optNameOverride);   
return options.hasShortOption(optNameSuffix);   
return options.hasShortOption(subName);   
return options.hasShortOption(tag);   
return options.hasShortOption(optName true);   
return options.hasShortOption(optionalName);   
return options.hasShortOption(o);   
return options.hasShortOption(pt);   
return options.hasShortOption(Opt);   
return options.hasShortOption(0);   
return options.hasShortOption(extName);   
return options.hasShortOption(subOption);   
return options.hasShortOption(optValue);   
return options.hasShortOption(shortOptName);   
return options.hasShortOption(optName...);   
return options.hasShortOption(propName);   
return options.hasShortOption(getOptionName);   
return options.hasShortOption(field);   
return options.hasShortOption(id);   
return options.hasShortOption(key);   
return options.hasShortOption(otName);   
return options.hasShortOption(optType);   
return options.hasShortOption(ent);   
return options.hasShortOption(optToken);   
return options.hasShortOption(optParam);   
return options.hasShortOption(options);   
return options.hasShortOption(oName);   
return options.hasShortOption(idx);   
return options.hasShortOption(varOpt);   
return options.hasShortOption(shortOption);   
return options.hasShortOption(intOpt);   
return options.hasShortOption(subOpt);   
return options.hasShortOption(oid);   
return options.hasShortOption(OptVal);   
return options.hasShortOption(path);   
return options.hasShortOption(string);   
return options.hasShortOption(OPTNAME);   
return options.hasShortOption(err);   
return options.hasShortOption(optIndex);   
return options.hasShortOption(OptLong);   
return options.hasShortOption(addOption);   
return options.hasShortOption(optN);   
return options.hasShortOption(arg);   
return options.hasShortOption(pluginName);   
return options.hasShortOption(optVal);   
return options.hasShortOption(optParamsName);   
return options.hasShortOption(typ);   
return options.hasShortOption(paramName);   
return options.hasShortOption(index);   
return options.hasShortOption(OPT);   
return options.hasShortOption(text);   
return options.hasShortOption(exp);   
return options.hasShortOption(p);   
return options.hasShortOption(ot);   
return options.hasShortOption(phrase);   
return options.hasShortOption(word);   
return options.hasShortOption(ptr);   
return options.hasShortOption(this);   
return options.hasShortOption(optional);   
return options.hasShortOption(value);   
return options.hasShortOption(ext);   
return options.hasShortOption(cmd);   
return options.hasShortOption(perm);   
return options.hasShortOption(elem);   
return options.hasShortOption(sub);   
return options.hasShortOption(getopt);   
return options.hasShortOption(expr);   
return options.hasShortOption(hasArg);   
return options.hasShortOption(var);   
if(options==null){return  false;} return options.hasShortOption(optName);   
if(options==null){return  false;;} return options.hasShortOption(optName);   
if(options==null){return false;} return options.hasShortOption(optName);   
if(options==null){return  true;} return options.hasShortOption(optName);   
if(options==null){return  true;;} return options.hasShortOption(optName);   
if(options==null){return  false; ;} return options.hasShortOption(optName);   
if(options==null){return false;;} return options.hasShortOption(optName);   
if(options==null){return  false;  ;} return options.hasShortOption(optName);   
if(options==null){return  false ;;} return options.hasShortOption(optName);   
if(options==null){return true;} return options.hasShortOption(optName);   
if(options==null){return  false; };} return options.hasShortOption(optName);   
if(options==null){return  false; ;} return options.hasShortOption(optName);   
if(options==null){return ;;} return options.hasShortOption(optName);   
if(options==null){return  false;} return true;} return options.hasShortOption(optName);   
if(options==null){return  false;AST#return_statement#Right;} return options.hasShortOption(optName);   
if(options==null){return true;;} return options.hasShortOption(optName);   
if(options==null){return  null;} return options.hasShortOption(optName);   
if(options==null){return  true; ;} return options.hasShortOption(optName);   
if(options==null){return  false; };} return options.hasShortOption(optName);   
if(options==null){return  false ;} return options.hasShortOption(optName);   
if(options==null){return  false; } ;} return options.hasShortOption(optName);   
if(options==null){return  false;  };} return options.hasShortOption(optName);   
if(options==null){return  false ;} return options.hasShortOption(optName);   
if(options==null){return  false;  ;} return options.hasShortOption(optName);   
if(options==null){return  false; } else;} return options.hasShortOption(optName);   
if(options==null){return  null;;} return options.hasShortOption(optName);   
if(options==null){return  !optName;} return options.hasShortOption(optName);   
if(options==null){return  false false;} return options.hasShortOption(optName);   
if(options==null){return  return false;;} return options.hasShortOption(optName);   
if(options==null){return  false;} return true;} return options.hasShortOption(optName);   
if(options==null){return false; ;} return options.hasShortOption(optName);   
if(options==null){return  false;    ;} return options.hasShortOption(optName);   
if(options==null){return  false; return true;} return options.hasShortOption(optName);   
if(options==null){return  options;} return options.hasShortOption(optName);   
if(options==null){return  false;};} return options.hasShortOption(optName);   
if(options==null){return  options==null;} return options.hasShortOption(optName);   
if(options==null){return  false};;} return options.hasShortOption(optName);   
if(options==null){return  false;i;} return options.hasShortOption(optName);   
if(options==null){return  return false;} return options.hasShortOption(optName);   
if(options==null){return  falseAST#return_statement#Right;} return options.hasShortOption(optName);   
if(options==null){return  true; };} return options.hasShortOption(optName);   
if(options==null){return   false;} return options.hasShortOption(optName);   
if(options==null){return  false; return true;;} return options.hasShortOption(optName);   
if(options==null){return  false; } else;} return options.hasShortOption(optName);   
if(options==null){return  false;   };} return options.hasShortOption(optName);   
if(options==null){return  true;  ;} return options.hasShortOption(optName);   
if(options==null){return  false;   ;} return options.hasShortOption(optName);   
if(options==null){return  false;return true;} return options.hasShortOption(optName);   
if(options==null){return  false;  };} return options.hasShortOption(optName);   
if(options==null){return  true ;;} return options.hasShortOption(optName);   
if(options==null){return  optName==null;} return options.hasShortOption(optName);   
if(options==null){return  false<mask3> false;;} return options.hasShortOption(optName);   
if(options==null){return  false} return true;} return options.hasShortOption(optName);   
if(options==null){return  -1;} return options.hasShortOption(optName);   
if(options==null){return  false;      ;} return options.hasShortOption(optName);   
if(options==null){return  false;     ;} return options.hasShortOption(optName);   
if(options==null){return  false;} ;} return options.hasShortOption(optName);   
if(options==null){return  false;} else;} return options.hasShortOption(optName);   
if(options==null){return  true; ;} return options.hasShortOption(optName);   
if(options==null){return  false;..;} return options.hasShortOption(optName);   
if(options==null){return  false;} else;} return options.hasShortOption(optName);   
if(options==null){return  optName;} return options.hasShortOption(optName);   
if(options==null){return  false;};} return options.hasShortOption(optName);   
if(options==null){return  true;} return false;} return options.hasShortOption(optName);   
if(options==null){return  false  ;} return options.hasShortOption(optName);   
if(options==null){return  false};} return options.hasShortOption(optName);   
if(options==null){return  false; }else;} return options.hasShortOption(optName);   
if(options==null){return  false<mask1> false;;} return options.hasShortOption(optName);   
if(options==null){return  true;AST#return_statement#Right;} return options.hasShortOption(optName);   
if(options==null){return  false;}};} return options.hasShortOption(optName);   
if(options==null){return  false  ;} return options.hasShortOption(optName);   
if(options==null){return  false;}else;} return options.hasShortOption(optName);   
if(options==null){return  false;s;} return options.hasShortOption(optName);   
if(options==null){return  !options;} return options.hasShortOption(optName);   
if(options==null){return  false;  ;} return options.hasShortOption(optName);   
if(options==null){return  false;  } ;} return options.hasShortOption(optName);   
if(options==null){return  false;AST#then#Right;} return options.hasShortOption(optName);   
if(options==null){return  default;} return options.hasShortOption(optName);   
if(options==null){return  false;g;} return options.hasShortOption(optName);   
if(options==null){return  false;        ;} return options.hasShortOption(optName);   
if(options==null){return  false; i;} return options.hasShortOption(optName);   
if(options==null){return  optName==null;;} return options.hasShortOption(optName);   
if(options==null){return  false; }  ;} return options.hasShortOption(optName);   
if(options==null){return false;} return true;} return options.hasShortOption(optName);   
if(options==null){return  false;} else;} return options.hasShortOption(optName);   
if(options==null){return  0;} return options.hasShortOption(optName);   
if(options==null){return  false;} return options.hasShortOption(optName);   
if(options==null){return false ;;} return options.hasShortOption(optName);   
if(options==null){return  false true;} return options.hasShortOption(optName);   
if(options==null){return  this;} return options.hasShortOption(optName);   
if(options==null){return  false;} else;} return options.hasShortOption(optName);   
if(options==null){return  0;;} return options.hasShortOption(optName);   
if(options==null){return  defaultValue;} return options.hasShortOption(optName);   
if(options==null){return  false;<mask3> false;} return options.hasShortOption(optName);   
if(options==null){return  false;return;} return options.hasShortOption(optName);   
if(options==null){return  !optName;;} return options.hasShortOption(optName);   
if(options==null){return  false;         ;} return options.hasShortOption(optName);   
if(options==null){return  false; ;} return options.hasShortOption(optName);   
if(options==null){return (false);;} return options.hasShortOption(optName);   
if(options==null){return  false; } else {;} return options.hasShortOption(optName);   
if(options==null){return  false;    ;} return options.hasShortOption(optName);   
if(options==null){return !optName;} return options.hasShortOption(optName);   
if(options==null){return  (false);;} return options.hasShortOption(optName);   
if(options==null){return false; };} return options.hasShortOption(optName);   
if(options==null){return  true;} return true;} return options.hasShortOption(optName);   
if(options==null){return  false;;;} return options.hasShortOption(optName);   
if(options==null){return false;  ;} return options.hasShortOption(optName);   
if(options==null){return  false<mask3> false;};} return options.hasShortOption(optName);   
if(options==null){return  false;default;} return options.hasShortOption(optName);   
if(options==null){return  false;	;} return options.hasShortOption(optName);   
if(options==null){return  true; };} return options.hasShortOption(optName);   
if(options==null){return false; ;} return options.hasShortOption(optName);   
if(options==null){return  false;} return true;} return options.hasShortOption(optName);   
if(options==null){return  false;} return false;} return options.hasShortOption(optName);   
if(options==null){return  !shortOptions;} return options.hasShortOption(optName);   
if(options==null){return  false.;} return options.hasShortOption(optName);   
if(options==null){return  true;  };} return options.hasShortOption(optName);   
if(options==null){return  false;};;} return options.hasShortOption(optName);   
if(options==null){return  defaultOptions;} return options.hasShortOption(optName);   
if(options==null){return  true ;} return options.hasShortOption(optName);   
if(options==null){return  -1;;} return options.hasShortOption(optName);   
if(options==null){return  false<mask5> false;;} return options.hasShortOption(optName);   
if(options==null){return   false;;} return options.hasShortOption(optName);   
if(options==null){return  false;} else {;} return options.hasShortOption(optName);   
if(options==null){return  false;}return true;} return options.hasShortOption(optName);   
if(options==null){return  optName == null;} return options.hasShortOption(optName);   
if(options==null){return false;AST#return_statement#Right;} return options.hasShortOption(optName);   
if(options==null){return  options==null;;} return options.hasShortOption(optName);   
if(options==null){return  false;},;} return options.hasShortOption(optName);   
if(options==null){return  false; }   ;} return options.hasShortOption(optName);   
if(options==null){return  false; default;} return options.hasShortOption(optName);   
if(options==null){return  falsefalse;} return options.hasShortOption(optName);   
if(options==null){return };;} return options.hasShortOption(optName);   
if(options==null){return  false;?;} return options.hasShortOption(optName);   
if(options==null){return  false<mask3> true;;} return options.hasShortOption(optName);   
if(options==null){return  false;   } ;} return options.hasShortOption(optName);   
if(options==null){return  opts==null;} return options.hasShortOption(optName);   
if(options==null){return  boolean;} return options.hasShortOption(optName);   
if(options==null){return  false; //};} return options.hasShortOption(optName);   
if(options==null){return  optName;;} return options.hasShortOption(optName);   
if(options==null){return  false; } ;} return options.hasShortOption(optName);   
if(options==null){return  false<mask1> true;;} return options.hasShortOption(optName);   
if(options==null){return  false; } return true;} return options.hasShortOption(optName);   
if(options==null){return null;} return options.hasShortOption(optName);   
if(options==null){return  true false;} return options.hasShortOption(optName);   
if(options==null){return  false;   ;} return options.hasShortOption(optName);   
if(options==null){return  false;l;} return options.hasShortOption(optName);   
if(options==null){return  false<mask5> false;} return options.hasShortOption(optName);   
if(options==null){return  false;<mask3> true;} return options.hasShortOption(optName);   
if(options==null){return  ;;} return options.hasShortOption(optName);   
if(options==null){return  false;}else;} return options.hasShortOption(optName);   
if(options==null){return  return true;;} return options.hasShortOption(optName);   
if(options==null){return  true; } else;} return options.hasShortOption(optName);   
if(options==null){return  false; this;} return options.hasShortOption(optName);   
if(options==null){return  false ;} return options.hasShortOption(optName);   
if(options==null){return  !shortOption;} return options.hasShortOption(optName);   
if(options==null){return  false;} else return true;} return options.hasShortOption(optName);   
if(options==null){return  false;                ;} return options.hasShortOption(optName);   
if(options==null){return  false;<mask1> false;} return options.hasShortOption(optName);   
if(options==null){return  true;  ;} return options.hasShortOption(optName);   
if(options==null){return  "";;} return options.hasShortOption(optName);   
if(options==null){return  true};;} return options.hasShortOption(optName);   
if(options==null){return  false;reporting;} return options.hasShortOption(optName);   
if(options==null){return  false<mask5>false;;} return options.hasShortOption(optName);   
if(options==null){return  optName!=null;} return options.hasShortOption(optName);   
if(options==null){return  !optName.isEmpty;} return options.hasShortOption(optName);   
if(options==null){return  Boolean.FALSE;} return options.hasShortOption(optName);   
if(options==null){return !false;} return options.hasShortOption(optName);   
if(options==null){return  false; ...;} return options.hasShortOption(optName);   
if(options==null){return  false} else;} return options.hasShortOption(optName);   
if(options==null){return ; };} return options.hasShortOption(optName);   
if(options==null){return !options;} return options.hasShortOption(optName);   
if(options==null){return  false;++options;} return options.hasShortOption(optName);   
if(options==null){return  false; }     ;} return options.hasShortOption(optName);   
if(options==null){return false ;} return options.hasShortOption(optName);   
if(options==null){return  true; } ;} return options.hasShortOption(optName);   
if(options==null){return  isShortOption;} return options.hasShortOption(optName);   
if(options==null){return  false; true;} return options.hasShortOption(optName);   
if(options==null){return  false ; ;} return options.hasShortOption(optName);   
if(options==null){return  falseAST#assignment_expression#Right;} return options.hasShortOption(optName);   
if(options==null){return  true;    ;} return options.hasShortOption(optName);   
if(options==null){return  False;} return options.hasShortOption(optName);   
if(options==null){return  false } return true;} return options.hasShortOption(optName);   
if(options==null){return  false;p;} return options.hasShortOption(optName);   
if(options==null){return  options == null;} return options.hasShortOption(optName);   
if(options==null){return  FALSE;} return options.hasShortOption(optName);   
if(options==null){return  false;       ;} return options.hasShortOption(optName);   
if(options==null){return  false;}};} return options.hasShortOption(optName);   
if(options==null){return  false instead;} return options.hasShortOption(optName);   
if(options==null){return  true;};} return options.hasShortOption(optName);   
if(options==null){return  false;...;} return options.hasShortOption(optName);   
if(options==null){return  true; return false;;} return options.hasShortOption(optName);   
if(options==null){return  false;                                                     ;} return options.hasShortOption(optName);   
if(options==null){return  false; return false;} return options.hasShortOption(optName);   
if(options==null){return  false;} ;} return options.hasShortOption(optName);   
if(options==null){return  false;}.;} return options.hasShortOption(optName);   
if(options==null){return  optName == null;;} return options.hasShortOption(optName);   
if(options==null){return  --;} return options.hasShortOption(optName);   
if(options==null){return  false;            ;} return options.hasShortOption(optName);   
if(options==null){return  false!;} return options.hasShortOption(optName);   
if(options==null){return  false}; return true;} return options.hasShortOption(optName);   
if(options==null){return  false;return false;} return options.hasShortOption(optName);   
if(options==null){return  false   ;} return options.hasShortOption(optName);   
if(options==null){return  defaultOption;} return options.hasShortOption(optName);   
if(options==null){return  !short;} return options.hasShortOption(optName);   
if(options==null){return  true; return false;} return options.hasShortOption(optName);   
if(options==null){return  false<mask2> false;;} return options.hasShortOption(optName);   
if(options==null){return falseAST#return_statement#Right;} return options.hasShortOption(optName);   
if(options==null){return  false}else;} return options.hasShortOption(optName);   
if(options==null){return  false;          ;} return options.hasShortOption(optName);   
if(options==null){return  true;} return false;} return options.hasShortOption(optName);   
if(options==null){return  false };} return options.hasShortOption(optName);   
if(options==null){return  false();;} return options.hasShortOption(optName);   
if(options==null){return  true;   };} return options.hasShortOption(optName);   
if(options==null){return  false;    };} return options.hasShortOption(optName);   
if(options==null){return  false;true;} return options.hasShortOption(optName);   
if(options==null){return  false;      ;} return options.hasShortOption(optName);   
if(options==null){return false false;} return options.hasShortOption(optName);   
if(options==null){return  false; ..;} return options.hasShortOption(optName);   
if(options==null){return  false; 默认;} return options.hasShortOption(optName);   
if(options==null){return  undefined;} return options.hasShortOption(optName);   
if(options==null){return  true};} return options.hasShortOption(optName);   
if(options==null){return  !false;} return options.hasShortOption(optName);   
if(options==null){return  false<mask5> true;;} return options.hasShortOption(optName);   
if(options==null){return  false;this;} return options.hasShortOption(optName);   
if(options==null){return  false:true;} return options.hasShortOption(optName);   
if(options==null){return true; ;} return options.hasShortOption(optName);   
if(options==null){return  false;++optName;} return options.hasShortOption(optName);   
if(options==null){return  false;};;} return options.hasShortOption(optName);   
if(options==null){return  false;<mask2> false;} return options.hasShortOption(optName);   
if(options==null){return  true;i;} return options.hasShortOption(optName);   
if(options==null){return  false;//;} return options.hasShortOption(optName);   
if(options==null){return  falseAST#return#Right;} return options.hasShortOption(optName);   
if(options==null){return  return true;} return options.hasShortOption(optName);   
if(options==null){return ; ;} return options.hasShortOption(optName);   
if(options==null){return false ;} return options.hasShortOption(optName);   
if(options==null){return ;AST#return_statement#Right;} return options.hasShortOption(optName);   
if(options==null){return  ;} return options.hasShortOption(optName);   
if(options==null){return  true ;} return options.hasShortOption(optName);   
if(options==null){return  falseAST#ternary_expression#Right;} return options.hasShortOption(optName);   
if(options==null){return ;} return options.hasShortOption(optName);   
if(options==null){return 0;} return options.hasShortOption(optName);   
if(options==null){return  bool;} return options.hasShortOption(optName);   
if(options==null){return  super;} return options.hasShortOption(optName);   
if(options==null){return  fallback;} return options.hasShortOption(optName);   
if(options==null){return Boolean;} return options.hasShortOption(optName);   
if(options==null){return  empty;} return options.hasShortOption(optName);   
if(options==null){return  defaults;} return options.hasShortOption(optName);   
if(options==null){return  {};;} return options.hasShortOption(optName);   
if(options==null){return  opts;} return options.hasShortOption(optName);   
if(options==null){ options=new Options(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new Options; } return options.hasShortOption(optName);   
if(options==null){ options=defaultOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new Options(); return true; } return options.hasShortOption(optName);   
if(options==null){ options= new Options(); }; } return options.hasShortOption(optName);   
if(options==null){ options=createOptions; } return options.hasShortOption(optName);   
if(options==null){ options=optionsFactory; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionSet; } return options.hasShortOption(optName);   
if(options==null){ options=new Options(); return false; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionParser; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionList; } return options.hasShortOption(optName);   
if(options==null){ options=this; } return options.hasShortOption(optName);   
if(options==null){ options=createOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionMap; } return options.hasShortOption(optName);   
if(options==null){ options=buildOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new HashMap; } return options.hasShortOption(optName);   
if(options==null){ options= new Options; } return options.hasShortOption(optName);   
if(options==null){ options=newOptions; } return options.hasShortOption(optName);   
if(options==null){ options=getDefaultOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new ParsedOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new LongOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new ParseOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new Options(); } return options.hasShortOption(optName);   
if(options==null){ options=new Flags; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionParser(); }; } return options.hasShortOption(optName);   
if(options==null){ options=default; } return options.hasShortOption(optName);   
if(options==null){ options= new Options(); return true; } return options.hasShortOption(optName);   
if(options==null){ options=new CommandLineOptions; } return options.hasShortOption(optName);   
if(options==null){ options=create; } return options.hasShortOption(optName);   
if(options==null){ options=new Config; } return options.hasShortOption(optName);   
if(options==null){ options=getOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new ParseOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=Options; } return options.hasShortOption(optName);   
if(options==null){ options=DEFAULT_OPTIONS; } return options.hasShortOption(optName);   
if(options==null){ options=getDefaultOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionSet(); }; } return options.hasShortOption(optName);   
if(options==null){ options=parseOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new JOptionPane; } return options.hasShortOption(optName);   
if(options==null){ options=new ParsedOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=System.out; } return options.hasShortOption(optName);   
if(options==null){ options=this.options; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionsImpl; } return options.hasShortOption(optName);   
if(options==null){ options=factory; } return options.hasShortOption(optName);   
if(options==null){ options=new CommandLineOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=null; } return options.hasShortOption(optName);   
if(options==null){ options=createOptions(); return true; } return options.hasShortOption(optName);   
if(options==null){ options=new Options(); return options; } return options.hasShortOption(optName);   
if(options==null){ options=new CommandOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new LongOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new ArrayList; } return options.hasShortOption(optName);   
if(options==null){ options=DefaultOptions; } return options.hasShortOption(optName);   
if(options==null){ options=engineOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionsBuilder; } return options.hasShortOption(optName);   
if(options==null){ options=getOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new ArgOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionList(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new SimpleOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionGroup; } return options.hasShortOption(optName);   
if(options==null){ options=new CommandOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=opts; } return options.hasShortOption(optName);   
if(options==null){ options=new Properties(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new Options() }; } return options.hasShortOption(optName);   
if(options==null){ options=new DefaultOptions; } return options.hasShortOption(optName);   
if(options==null){ options=getDefaultOptions(); return false; } return options.hasShortOption(optName);   
if(options==null){ options=DEFAULT; } return options.hasShortOption(optName);   
if(options==null){ options= new OptionList; } return options.hasShortOption(optName);   
if(options==null){ options= new Options(); return false; } return options.hasShortOption(optName);   
if(options==null){ options=new FileOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options= new OptionSet; } return options.hasShortOption(optName);   
if(options==null){ options=makeOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new Hashtable; } return options.hasShortOption(optName);   
if(options==null){ options= this; } return options.hasShortOption(optName);   
if(options==null){ options=new Config(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new JSONObject; } return options.hasShortOption(optName);   
if(options==null){ options=new HashMap(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new CliOptions; } return options.hasShortOption(optName);   
if(options==null){ options=makeOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=config; } return options.hasShortOption(optName);   
if(options==null){ options=new FileOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new TreeOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=initOptions; } return options.hasShortOption(optName);   
if(options==null){ options=engine; } return options.hasShortOption(optName);   
if(options==null){ options=new SimpleOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=CommandOptions; } return options.hasShortOption(optName);   
if(options==null){ options=getDefaultOptions(); return true; } return options.hasShortOption(optName);   
if(options==null){ options=new GnuOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new OptionParser; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionRegistry; } return options.hasShortOption(optName);   
if(options==null){ options=new StringOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionMap(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new ExtendedOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new Options();  }; } return options.hasShortOption(optName);   
if(options==null){ options=createDefaultOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new options; } return options.hasShortOption(optName);   
if(options==null){ options=ShortOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new Properties; } return options.hasShortOption(optName);   
if(options==null){ options=parser; } return options.hasShortOption(optName);   
if(options==null){ options= createOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new GlobOptions; } return options.hasShortOption(optName);   
if(options==null){ options=getCommandLineOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options= new OptionParser(); }; } return options.hasShortOption(optName);   
if(options==null){ options=CliOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new MessageOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new JSONArray; } return options.hasShortOption(optName);   
if(options==null){ options=newOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionsDefault; } return options.hasShortOption(optName);   
if(options==null){ options=opt; } return options.hasShortOption(optName);   
if(options==null){ options=new Options(); return; } return options.hasShortOption(optName);   
if(options==null){ options=getOptions(); return false; } return options.hasShortOption(optName);   
if(options==null){ options=addOption; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionManager; } return options.hasShortOption(optName);   
if(options==null){ options=createOptions(); return false; } return options.hasShortOption(optName);   
if(options==null){ options=new OptMap; } return options.hasShortOption(optName);   
if(options==null){ options=parse; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionParser(); return true; } return options.hasShortOption(optName);   
if(options==null){ options=init; } return options.hasShortOption(optName);   
if(options==null){ options= getDefaultOptions; } return options.hasShortOption(optName);   
if(options==null){ options=NewOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new StringBuilder; } return options.hasShortOption(optName);   
if(options==null){ options=new EnumOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new MessageOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=buildOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=getOptions(); return true; } return options.hasShortOption(optName);   
if(options==null){ options= new OptionMap; } return options.hasShortOption(optName);   
if(options==null){ options= defaultOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new Flags(); }; } return options.hasShortOption(optName);   
if(options==null){ options=createOptionMap; } return options.hasShortOption(optName);   
if(options==null){ options=getopt; } return options.hasShortOption(optName);   
if(options==null){ options=global; } return options.hasShortOption(optName);   
if(options==null){ options=new StringOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new DefaultOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new CliOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=OptionList; } return options.hasShortOption(optName);   
if(options==null){ options=build; } return options.hasShortOption(optName);   
if(options==null){ options=OptionMap; } return options.hasShortOption(optName);   
if(options==null){ options= optionsFactory; } return options.hasShortOption(optName);   
if(options==null){ options=new AbstractOptions; } return options.hasShortOption(optName);   
if(options==null){ options=optionsOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new OptionSet(); }; } return options.hasShortOption(optName);   
if(options==null){ options= new Options(); } return options.hasShortOption(optName);   
if(options==null){ options=new JSONArray(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new CommonOptions; } return options.hasShortOption(optName);   
if(options==null){ options=createOptionList; } return options.hasShortOption(optName);   
if(options==null){ options=flags; } return options.hasShortOption(optName);   
if(options==null){ options=new ArgOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=CLI; } return options.hasShortOption(optName);   
if(options==null){ options=loadOptions; } return options.hasShortOption(optName);   
if(options==null){ options=DEFAULTS; } return options.hasShortOption(optName);   
if(options==null){ options= new CommandLineOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new FlagsOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionsImpl(); }; } return options.hasShortOption(optName);   
if(options==null){ options=requireOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new HashMap; } return options.hasShortOption(optName);   
if(options==null){ options=new Map; } return options.hasShortOption(optName);   
if(options==null){ options=createDefaultOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new Options; }; } return options.hasShortOption(optName);   
if(options==null){ options=optionsBuilder; } return options.hasShortOption(optName);   
if(options==null){ options=OptionSet; } return options.hasShortOption(optName);   
if(options==null){ options=new GlobOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new BitSet; } return options.hasShortOption(optName);   
if(options==null){ options=defaultOption; } return options.hasShortOption(optName);   
if(options==null){ options=new CommonOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=parent; } return options.hasShortOption(optName);   
if(options==null){ options=configure; } return options.hasShortOption(optName);   
if(options==null){ options=globalOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new ParseOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=CommandLineOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new Options();; } return options.hasShortOption(optName);   
if(options==null){ options=getOpts(); }; } return options.hasShortOption(optName);   
if(options==null){ options= parseOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new ExtendedOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options= getDefaultOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=getCommandLineOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new GitOptions; } return options.hasShortOption(optName);   
if(options==null){ options=parseArgs; } return options.hasShortOption(optName);   
if(options==null){ options=new TreeOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new EnumOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new AbstractOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new CmdOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionsWrapper; } return options.hasShortOption(optName);   
if(options==null){ options= new CommandOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=LongOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new MainOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionCollection; } return options.hasShortOption(optName);   
if(options==null){ options=new GenericOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options= new Options() }; } return options.hasShortOption(optName);   
if(options==null){ options=EnumOptions; } return options.hasShortOption(optName);   
if(options==null){ options=createCommandOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new HashOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new ConfigOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new BitSet(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionManager(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionParser(); return false; } return options.hasShortOption(optName);   
if(options==null){ options=getDefaultOptions() return false; } return options.hasShortOption(optName);   
if(options==null){ options= new ParsedOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new HashOptions; } return options.hasShortOption(optName);   
if(options==null){ options=generateOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new OptionList(); }; } return options.hasShortOption(optName);   
if(options==null){ options=createCommandLineOptions; } return options.hasShortOption(optName);   
if(options==null){ options= createOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionsOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options= new Flags; } return options.hasShortOption(optName);   
if(options==null){ options=new GlobusOptions; } return options.hasShortOption(optName);   
if(options==null){ options=createOptionSet; } return options.hasShortOption(optName);   
if(options==null){ options=new Options() return false; } return options.hasShortOption(optName);   
if(options==null){ options=new ConsoleOptionParser; } return options.hasShortOption(optName);   
if(options==null){ options=new ObjectOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new JsOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new MultiOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new longOptions; } return options.hasShortOption(optName);   
if(options==null){ options=getDefaultOptions(); } return options.hasShortOption(optName);   
if(options==null){ options=new Options();   }; } return options.hasShortOption(optName);   
if(options==null){ options=new FlagOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new Options(); return options; } return options.hasShortOption(optName);   
if(options==null){ options=new ParsedCommandLine; } return options.hasShortOption(optName);   
if(options==null){ options=new ConfigOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new JSONObject(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new JavaOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new LongOptionList; } return options.hasShortOption(optName);   
if(options==null){ options= new CommandLineOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new TreeMap; } return options.hasShortOption(optName);   
if(options==null){ options=new MultiOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new NoOptOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new MainOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new LongOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=create(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new StringOptionMap; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionTable; } return options.hasShortOption(optName);   
if(options==null){ options=new ConsoleOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new ObjectOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new ParsedArgs; } return options.hasShortOption(optName);   
if(options==null){ options=new GnuPGOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new GitOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=Factory.getOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new ParsedCommandLineOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new SimpleOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options= new Config(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new GenericOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new InMemoryOptions; } return options.hasShortOption(optName);   
if(options==null){ options=new Configuration(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new StringOptionList; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionGroup(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new ParserOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionsOptions; } return options.hasShortOption(optName);   
if(options==null){ options= new OptionMap(); }; } return options.hasShortOption(optName);   
if(options==null){ options= new JOptionPane; } return options.hasShortOption(optName);   
if(options==null){ options=new Options(){ }; } return options.hasShortOption(optName);   
if(options==null){ options=new RtfOptions; } return options.hasShortOption(optName);   
if(options==null){ options=AST#object_creation_expression#LeftnewOptions(); }; } return options.hasShortOption(optName);   
if(options==null){ options=new OptionParser(); } return options.hasShortOption(optName);   
if(optName==null){return  false;;} return options.hasShortOption(optName);   
if(optName==null){return  false;} return options.hasShortOption(optName);   
if(optName==null){return false;} return options.hasShortOption(optName);   
if(optName==null){return  true;;} return options.hasShortOption(optName);   
if(optName==null){return  true;} return options.hasShortOption(optName);   
if(optName==null){return false;;} return options.hasShortOption(optName);   
if(optName==null){return  false; ;} return options.hasShortOption(optName);   
if(optName==null){return  false;  ;} return options.hasShortOption(optName);   
if(optName==null){return  false; ;} return options.hasShortOption(optName);   
if(optName==null){return true;} return options.hasShortOption(optName);   
if(optName==null){return  false ;;} return options.hasShortOption(optName);   
if(optName==null){return  false; } return true;} return options.hasShortOption(optName);   
if(optName==null){return true;;} return options.hasShortOption(optName);   
if(optName==null){return  false;} return true;} return options.hasShortOption(optName);   
if(optName==null){return  false; };} return options.hasShortOption(optName);   
if(optName==null){return  false; };} return options.hasShortOption(optName);   
if(optName==null){return  false;} return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;AST#return_statement#Right;} return options.hasShortOption(optName);   
if(optName==null){return  true; ;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else { return true;} return options.hasShortOption(optName);   
if(optName==null){return ;;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else {return true;} return options.hasShortOption(optName);   
if(optName==null){return  null;} return options.hasShortOption(optName);   
if(optName==null){return  false ;} return options.hasShortOption(optName);   
if(optName==null){return false; ;} return options.hasShortOption(optName);   
if(optName==null){return  false ;} return options.hasShortOption(optName);   
if(optName==null){return  false false;} return options.hasShortOption(optName);   
if(optName==null){return  null;;} return options.hasShortOption(optName);   
if(optName==null){return  false;  ;} return options.hasShortOption(optName);   
if(optName==null){return  false;  };} return options.hasShortOption(optName);   
if(optName==null){return  false; } ;} return options.hasShortOption(optName);   
if(optName==null){return  false;    ;} return options.hasShortOption(optName);   
if(optName==null){return  false; } else;} return options.hasShortOption(optName);   
if(optName==null){return  false;   ;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask3> false;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else{return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;i;} return options.hasShortOption(optName);   
if(optName==null){return  false;  };} return options.hasShortOption(optName);   
if(optName==null){return  false;}else{return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;<mask3> false; };} return options.hasShortOption(optName);   
if(optName==null){return   false;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask1> false;} return options.hasShortOption(optName);   
if(optName==null){return  false;   };} return options.hasShortOption(optName);   
if(optName==null){return  true;  ;} return options.hasShortOption(optName);   
if(optName==null){return  false};;} return options.hasShortOption(optName);   
if(optName==null){return  false;      ;} return options.hasShortOption(optName);   
if(optName==null){return  true; ;} return options.hasShortOption(optName);   
if(optName==null){return  false;} return true;} return options.hasShortOption(optName);   
if(optName==null){return  false; return true;;} return options.hasShortOption(optName);   
if(optName==null){return  false;     ;} return options.hasShortOption(optName);   
if(optName==null){return  false;};} return options.hasShortOption(optName);   
if(optName==null){return  false;} ;} return options.hasShortOption(optName);   
if(optName==null){return  return false;;} return options.hasShortOption(optName);   
if(optName==null){return  false; return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;return true;} return options.hasShortOption(optName);   
if(optName==null){return  falseAST#return_statement#Right;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else{ return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else;} return options.hasShortOption(optName);   
if(optName==null){return  true;} else { return false;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask3> false; };} return options.hasShortOption(optName);   
if(optName==null){return  false;}};} return options.hasShortOption(optName);   
if(optName==null){return  false; } else;} return options.hasShortOption(optName);   
if(optName==null){return  false} return true;} return options.hasShortOption(optName);   
if(optName==null){return  -1;} return options.hasShortOption(optName);   
if(optName==null){return  false;} return true;;} return options.hasShortOption(optName);   
if(optName==null){return  false;..;} return options.hasShortOption(optName);   
if(optName==null){return  true ;;} return options.hasShortOption(optName);   
if(optName==null){return  true;} return false;} return options.hasShortOption(optName);   
if(optName==null){return  true;} else {return false;} return options.hasShortOption(optName);   
if(optName==null){return  false;}  return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else;} return options.hasShortOption(optName);   
if(optName==null){return false;  ;} return options.hasShortOption(optName);   
if(optName==null){return false ;;} return options.hasShortOption(optName);   
if(optName==null){return false; ;} return options.hasShortOption(optName);   
if(optName==null){return  true; };} return options.hasShortOption(optName);   
if(optName==null){return  false;         ;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else return true;} return options.hasShortOption(optName);   
if(optName==null){return false;} return true;} return options.hasShortOption(optName);   
if(optName==null){return  false; } else return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;}else;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask5> false;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else;} return options.hasShortOption(optName);   
if(optName==null){return  false;        ;} return options.hasShortOption(optName);   
if(optName==null){return  false;}else{ return true;} return options.hasShortOption(optName);   
if(optName==null){return  true; };} return options.hasShortOption(optName);   
if(optName==null){return  false;};} return options.hasShortOption(optName);   
if(optName==null){return  false<mask3> true;} return options.hasShortOption(optName);   
if(optName==null){return  false true;} return options.hasShortOption(optName);   
if(optName==null){return  false;s;} return options.hasShortOption(optName);   
if(optName==null){return  return false;} return options.hasShortOption(optName);   
if(optName==null){return  true;AST#return_statement#Right;} return options.hasShortOption(optName);   
if(optName==null){return  false;} return options.hasShortOption(optName);   
if(optName==null){return  false; }else;} return options.hasShortOption(optName);   
if(optName==null){return  optName==null;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else;} return options.hasShortOption(optName);   
if(optName==null){return  false;  ;} return options.hasShortOption(optName);   
if(optName==null){return  false  ;} return options.hasShortOption(optName);   
if(optName==null){return  false;    ;} return options.hasShortOption(optName);   
if(optName==null){return  false  ;} return options.hasShortOption(optName);   
if(optName==null){return  false;AST#then#Right;} return options.hasShortOption(optName);   
if(optName==null){return  false;g;} return options.hasShortOption(optName);   
if(optName==null){return  false; }  ;} return options.hasShortOption(optName);   
if(optName==null){return  falsefalse;} return options.hasShortOption(optName);   
if(optName==null){return  0;} return options.hasShortOption(optName);   
if(optName==null){return  false;	;} return options.hasShortOption(optName);   
if(optName==null){return  true;} else{return false;} return options.hasShortOption(optName);   
if(optName==null){return  false; i;} return options.hasShortOption(optName);   
if(optName==null){return   false;;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask2> false;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask1> true;} return options.hasShortOption(optName);   
if(optName==null){return  0;;} return options.hasShortOption(optName);   
if(optName==null){return false; } return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;  } ;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else return true;} return options.hasShortOption(optName);   
if(optName==null){return  false; ;} return options.hasShortOption(optName);   
if(optName==null){return  false;};;} return options.hasShortOption(optName);   
if(optName==null){return  false;default;} return options.hasShortOption(optName);   
if(optName==null){return false;} else { return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;} return true;} return options.hasShortOption(optName);   
if(optName==null){return  true; } return false;} return options.hasShortOption(optName);   
if(optName==null){return false;AST#return_statement#Right;} return options.hasShortOption(optName);   
if(optName==null){return  false;},;} return options.hasShortOption(optName);   
if(optName==null){return  false;;;} return options.hasShortOption(optName);   
if(optName==null){return false;} return true;} return options.hasShortOption(optName);   
if(optName==null){return  true;} else { return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;                ;} return options.hasShortOption(optName);   
if(optName==null){return  false;}   return true;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask5> false;;} return options.hasShortOption(optName);   
if(optName==null){return  this;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask3>false;} return options.hasShortOption(optName);   
if(optName==null){return  default;} return options.hasShortOption(optName);   
if(optName==null){return  options==null;} return options.hasShortOption(optName);   
if(optName==null){return  false;} ;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask5>false;;} return options.hasShortOption(optName);   
if(optName==null){return  false} else { return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;}return true;} return options.hasShortOption(optName);   
if(optName==null){return  false};} return options.hasShortOption(optName);   
if(optName==null){return  isShortOption(token);;} return options.hasShortOption(optName);   
if(optName==null){return  false; default;} return options.hasShortOption(optName);   
if(optName==null){return  true;}else{return false;} return options.hasShortOption(optName);   
if(optName==null){return  false;<mask3> false;};} return options.hasShortOption(optName);   
if(optName==null){return  false;++optName;} return options.hasShortOption(optName);   
if(optName==null){return  false;}else;} return options.hasShortOption(optName);   
if(optName==null){return  false;l;} return options.hasShortOption(optName);   
if(optName==null){return  true ;} return options.hasShortOption(optName);   
if(optName==null){return  false;} //return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;   ;} return options.hasShortOption(optName);   
if(optName==null){return  "";;} return options.hasShortOption(optName);   
if(optName==null){return  false;*/;} return options.hasShortOption(optName);   
if(optName==null){return  true;  };} return options.hasShortOption(optName);   
if(optName==null){return  false;  } else;} return options.hasShortOption(optName);   
if(optName==null){return  optName==null;;} return options.hasShortOption(optName);   
if(optName==null){return  false;       ;} return options.hasShortOption(optName);   
if(optName==null){return  false} else {return true;} return options.hasShortOption(optName);   
if(optName==null){return  !shortOptions;} return options.hasShortOption(optName);   
if(optName==null){return  false.;} return options.hasShortOption(optName);   
if(optName==null){return null;} return options.hasShortOption(optName);   
if(optName==null){return false; };} return options.hasShortOption(optName);   
if(optName==null){return  false<mask5>false;} return options.hasShortOption(optName);   
if(optName==null){return  false; } return false;} return options.hasShortOption(optName);   
if(optName==null){return  (false);;} return options.hasShortOption(optName);   
if(optName==null){return  false;*/ return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;*/ return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;?;} return options.hasShortOption(optName);   
if(optName==null){return  false;return;} return options.hasShortOption(optName);   
if(optName==null){return  false;   } ;} return options.hasShortOption(optName);   
if(optName==null){return  options;} return options.hasShortOption(optName);   
if(optName==null){return false; };} return options.hasShortOption(optName);   
if(optName==null){return false ;} return options.hasShortOption(optName);   
if(optName==null){return  -1;;} return options.hasShortOption(optName);   
if(optName==null){return false false;} return options.hasShortOption(optName);   
if(optName==null){return  false;   } else;} return options.hasShortOption(optName);   
if(optName==null){return  false; }   ;} return options.hasShortOption(optName);   
if(optName==null){return  true;} else{ return false;} return options.hasShortOption(optName);   
if(optName==null){return  false; } return true;} return options.hasShortOption(optName);   
if(optName==null){return true; ;} return options.hasShortOption(optName);   
if(optName==null){return false ;} return options.hasShortOption(optName);   
if(optName==null){return  false; //};} return options.hasShortOption(optName);   
if(optName==null){return false;} else {return true;} return options.hasShortOption(optName);   
if(optName==null){return  true false;} return options.hasShortOption(optName);   
if(optName==null){return  boolean;} return options.hasShortOption(optName);   
if(optName==null){return  false; true;} return options.hasShortOption(optName);   
if(optName==null){return  true;} else {return true;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask5>};} return options.hasShortOption(optName);   
if(optName==null){return  false;//;} return options.hasShortOption(optName);   
if(optName==null){return  true;} return false;} return options.hasShortOption(optName);   
if(optName==null){return  true;  ;} return options.hasShortOption(optName);   
if(optName==null){return  false;      ;} return options.hasShortOption(optName);   
if(optName==null){return  --;} return options.hasShortOption(optName);   
if(optName==null){return  true;} return true;} return options.hasShortOption(optName);   
if(optName==null){return  defaultValue;} return options.hasShortOption(optName);   
if(optName==null){return  false;reporting;} return options.hasShortOption(optName);   
if(optName==null){return  false;}};} return options.hasShortOption(optName);   
if(optName==null){return  true;   };} return options.hasShortOption(optName);   
if(optName==null){return  true;    ;} return options.hasShortOption(optName);   
if(optName==null){return  false;}else { return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;return true;;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask5> true;} return options.hasShortOption(optName);   
if(optName==null){return  false;} return false;} return options.hasShortOption(optName);   
if(optName==null){return  false;            ;} return options.hasShortOption(optName);   
if(optName==null){return  false;                                                     ;} return options.hasShortOption(optName);   
if(optName==null){return  false ; ;} return options.hasShortOption(optName);   
if(optName==null){return  false; this;} return options.hasShortOption(optName);   
if(optName==null){return  false}else{return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;}   ;} return options.hasShortOption(optName);   
if(optName==null){return  false;<mask3>false; };} return options.hasShortOption(optName);   
if(optName==null){return  false;<mask1> false; };} return options.hasShortOption(optName);   
if(optName==null){return  false;p;} return options.hasShortOption(optName);   
if(optName==null){return  false;}else {return true;} return options.hasShortOption(optName);   
if(optName==null){return  false;          ;} return options.hasShortOption(optName);   
if(optName==null){return  false;true;} return options.hasShortOption(optName);   
if(optName==null){return  ;;} return options.hasShortOption(optName);   
if(optName==null){return falseAST#return_statement#Right;} return options.hasShortOption(optName);   
if(optName==null){return  false;<mask3> false; ;} return options.hasShortOption(optName);   
if(optName==null){return  false; }     ;} return options.hasShortOption(optName);   
if(optName==null){return  return true;;} return options.hasShortOption(optName);   
if(optName==null){return  false;<mask3> true; };} return options.hasShortOption(optName);   
if(optName==null){return  false<mask5> true;;} return options.hasShortOption(optName);   
if(optName==null){return  false;...;} return options.hasShortOption(optName);   
if(optName==null){return  false ;} return options.hasShortOption(optName);   
if(optName==null){return  false; default: return true;} return options.hasShortOption(optName);   
if(optName==null){return (false);;} return options.hasShortOption(optName);   
if(optName==null){return  falseAST#assignment_expression#Right;} return options.hasShortOption(optName);   
if(optName==null){return  false!;} return options.hasShortOption(optName);   
if(optName==null){return  false; ...;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask5>true;;} return options.hasShortOption(optName);   
if(optName==null){return  true};;} return options.hasShortOption(optName);   
if(optName==null){return  false false;;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask2> true;} return options.hasShortOption(optName);   
if(optName==null){return  false;} else return true;} return options.hasShortOption(optName);   
if(optName==null){return  true; } else;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask3> true; };} return options.hasShortOption(optName);   
if(optName==null){return  false;} return false;} return options.hasShortOption(optName);   
if(optName==null){return  false;}return true;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask3>false; };} return options.hasShortOption(optName);   
if(optName==null){return  false; ..;} return options.hasShortOption(optName);   
if(optName==null){return  !optName;} return options.hasShortOption(optName);   
if(optName==null){return  false;}.;} return options.hasShortOption(optName);   
if(optName==null){return  false;";} return options.hasShortOption(optName);   
if(optName==null){return  Boolean.FALSE;} return options.hasShortOption(optName);   
if(optName==null){return  FALSE;} return options.hasShortOption(optName);   
if(optName==null){return  optName;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask14> false;} return options.hasShortOption(optName);   
if(optName==null){return  false;                  ;} return options.hasShortOption(optName);   
if(optName==null){return  false;this;} return options.hasShortOption(optName);   
if(optName==null){return  false;return false;} return options.hasShortOption(optName);   
if(optName==null){return  false<mask3>true;} return options.hasShortOption(optName);   
if(optName==null){return  false instead;} return options.hasShortOption(optName);   
if(optName==null){return  false;   ;} return options.hasShortOption(optName);   
if(optName==null){return  false   ;} return options.hasShortOption(optName);   
if(optName==null){ optName=token; } return options.hasShortOption(optName);   
if(optName==null){ optName=null; } return options.hasShortOption(optName);   
if(optName==null){ optName=""; } return options.hasShortOption(optName);   
if(optName==null){ optName= ""; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortName; } return options.hasShortOption(optName);   
if(optName==null){ optName= token; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt; } return options.hasShortOption(optName);   
if(optName==null){ optName=optionName; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=DEFAULT_OPTION; } return options.hasShortOption(optName);   
if(optName==null){ optName=optName; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=name; } return options.hasShortOption(optName);   
if(optName==null){ optName= null; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultOptName; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultShortOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=false; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultValue; } return options.hasShortOption(optName);   
if(optName==null){ optName= ""; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName=option; } return options.hasShortOption(optName);   
if(optName==null){ optName=value; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortOptName; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortOptions; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.shortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultName; } return options.hasShortOption(optName);   
if(optName==null){ optName=longName; } return options.hasShortOption(optName);   
if(optName==null){ optName=true; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "";}; } return options.hasShortOption(optName);   
if(optName==null){ optName=null; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=word; } return options.hasShortOption(optName);   
if(optName==null){ optName=optDefault; } return options.hasShortOption(optName);   
if(optName==null){ optName=token; }; } return options.hasShortOption(optName);   
if(optName==null){ optName= optionName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "default" }; } return options.hasShortOption(optName);   
if(optName==null){ optName=LongOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=0; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.name; } return options.hasShortOption(optName);   
if(optName==null){ optName=options; } return options.hasShortOption(optName);   
if(optName==null){ optName=short; } return options.hasShortOption(optName);   
if(optName==null){ optName=this.name; } return options.hasShortOption(optName);   
if(optName==null){ optName= ""; return true; } return options.hasShortOption(optName);   
if(optName==null){ optName=TOKEN; } return options.hasShortOption(optName);   
if(optName==null){ optName=undefined; } return options.hasShortOption(optName);   
if(optName==null){ optName= "" }; } return options.hasShortOption(optName);   
if(optName==null){ optName=input; } return options.hasShortOption(optName);   
if(optName==null){ optName=longOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=getShortOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=optValue; } return options.hasShortOption(optName);   
if(optName==null){ optName= ""); }; } return options.hasShortOption(optName);   
if(optName==null){ optName= "-"; } return options.hasShortOption(optName);   
if(optName==null){ optName=Long; } return options.hasShortOption(optName);   
if(optName==null){ optName=""+token; } return options.hasShortOption(optName);   
if(optName==null){ optName=label; } return options.hasShortOption(optName);   
if(optName==null){ optName=this.shortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=getLongOptName; } return options.hasShortOption(optName);   
if(optName==null){ optName=key; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.getShortOption; } return options.hasShortOption(optName);   
if(optName==null){ optName= "help"; } return options.hasShortOption(optName);   
if(optName==null){ optName=default; } return options.hasShortOption(optName);   
if(optName==null){ optName=EMPTY; } return options.hasShortOption(optName);   
if(optName==null){ optName=optShortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=getDefaultOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName=optType; } return options.hasShortOption(optName);   
if(optName==null){ optName= "help"; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=getOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName=DEFAULT; } return options.hasShortOption(optName);   
if(optName==null){ optName= "default"; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=getLongOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=UNKNOWN; } return options.hasShortOption(optName);   
if(optName==null){ optName=index; } return options.hasShortOption(optName);   
if(optName==null){ optName=SHORT_OPTION; } return options.hasShortOption(optName);   
if(optName==null){ optName= "help" }; } return options.hasShortOption(optName);   
if(optName==null){ optName=""; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt1; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultShortOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "-"; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultShortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=optLong; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.getShortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultLongOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=id; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt.toLowerCase(); } return options.hasShortOption(optName);   
if(optName==null){ optName=shortOpts; } return options.hasShortOption(optName);   
if(optName==null){ optName=StringUtils.EMPTY; } return options.hasShortOption(optName);   
if(optName==null){ optName=longOptName; } return options.hasShortOption(optName);   
if(optName==null){ optName=featureName; } return options.hasShortOption(optName);   
if(optName==null){ optName=getDefaultOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultShortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=prefix; } return options.hasShortOption(optName);   
if(optName==null){ optName=property; } return options.hasShortOption(optName);   
if(optName==null){ optName= ""; return false; } return options.hasShortOption(optName);   
if(optName==null){ optName=NULL; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultShortOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName= "default"; } return options.hasShortOption(optName);   
if(optName==null){ optName=cmdName; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.getName; } return options.hasShortOption(optName);   
if(optName==null){ optName=getDefaultOptName; } return options.hasShortOption(optName);   
if(optName==null){ optName=NO_OPTION; } return options.hasShortOption(optName);   
if(optName==null){ optName=title; } return options.hasShortOption(optName);   
if(optName==null){ optName=getLongOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName=option; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=t; } return options.hasShortOption(optName);   
if(optName==null){ optName=optPrefix; } return options.hasShortOption(optName);   
if(optName==null){ optName= option; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt; return false; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.shortOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=commandName; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultLongOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=text; } return options.hasShortOption(optName);   
if(optName==null){ optName=HIDDEN; } return options.hasShortOption(optName);   
if(optName==null){ optName=tag; } return options.hasShortOption(optName);   
if(optName==null){ optName=description; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultShort; } return options.hasShortOption(optName);   
if(optName==null){ optName=optname; } return options.hasShortOption(optName);   
if(optName==null){ optName= -1; } return options.hasShortOption(optName);   
if(optName==null){ optName=tok; } return options.hasShortOption(optName);   
if(optName==null){ optName=command; } return options.hasShortOption(optName);   
if(optName==null){ optName=getShortOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName=getShortOption(); }; } return options.hasShortOption(optName);   
if(optName==null){ optName=getLongOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=longOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortToken; } return options.hasShortOption(optName);   
if(optName==null){ optName=field; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.longName; } return options.hasShortOption(optName);   
if(optName==null){ optName=keyword; } return options.hasShortOption(optName);   
if(optName==null){ optName=optShort; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultString; } return options.hasShortOption(optName);   
if(optName==null){ optName=term; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortDefault; } return options.hasShortOption(optName);   
if(optName==null){ optName=optNameShort; } return options.hasShortOption(optName);   
if(optName==null){ optName=DefaultOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=cmd; } return options.hasShortOption(optName);   
if(optName==null){ optName=optString; } return options.hasShortOption(optName);   
if(optName==null){ optName=getLongName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "null" }; } return options.hasShortOption(optName);   
if(optName==null){ optName=argName; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaults; } return options.hasShortOption(optName);   
if(optName==null){ optName=getOptName; } return options.hasShortOption(optName);   
if(optName==null){ optName=fieldName; } return options.hasShortOption(optName);   
if(optName==null){ optName= defaultToken; } return options.hasShortOption(optName);   
if(optName==null){ optName=optNameDefault; } return options.hasShortOption(optName);   
if(optName==null){ optName=optLabel; } return options.hasShortOption(optName);   
if(optName==null){ optName=getDefaultName; } return options.hasShortOption(optName);   
if(optName==null){ optName=parameter; } return options.hasShortOption(optName);   
if(optName==null){ optName=taskName; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.getDefaultOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultOptions; } return options.hasShortOption(optName);   
if(optName==null){ optName= DEFAULT_OPTION; } return options.hasShortOption(optName);   
if(optName==null){ optName= "";; } return options.hasShortOption(optName);   
if(optName==null){ optName= "options"; } return options.hasShortOption(optName);   
if(optName==null){ optName=feature; } return options.hasShortOption(optName);   
if(optName==null){ optName=optId; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortopt; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.shortOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=void; } return options.hasShortOption(optName);   
if(optName==null){ optName=LONG; } return options.hasShortOption(optName);   
if(optName==null){ optName=string; } return options.hasShortOption(optName);   
if(optName==null){ optName=optVal; } return options.hasShortOption(optName);   
if(optName==null){ optName=getDefaultOption(); }; } return options.hasShortOption(optName);   
if(optName==null){ optName=getShortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=Long.class; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.defaultOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=symbol; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.getOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.getLongOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName="" }; } return options.hasShortOption(optName);   
if(optName==null){ optName= optName; } return options.hasShortOption(optName);   
if(optName==null){ optName=Default; } return options.hasShortOption(optName);   
if(optName==null){ optName=getName; } return options.hasShortOption(optName);   
if(optName==null){ optName=file; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.getDefaultName; } return options.hasShortOption(optName);   
if(optName==null){ optName=LongName; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt; return true; } return options.hasShortOption(optName);   
if(optName==null){ optName=UNKNOWN_OPTION; } return options.hasShortOption(optName);   
if(optName==null){ optName=SHORT; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortLabel; } return options.hasShortOption(optName);   
if(optName==null){ optName=LongOptName; } return options.hasShortOption(optName);   
if(optName==null){ optName= ""; } ; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.getLongName; } return options.hasShortOption(optName);   
if(optName==null){ optName=next; } return options.hasShortOption(optName);   
if(optName==null){ optName= "/"; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=TOKEN_NAME; } return options.hasShortOption(optName);   
if(optName==null){ optName=1; } return options.hasShortOption(optName);   
if(optName==null){ optName=help; } return options.hasShortOption(optName);   
if(optName==null){ optName= shortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=String.valueOf; } return options.hasShortOption(optName);   
if(optName==null){ optName=this; } return options.hasShortOption(optName);   
if(optName==null){ optName=inputName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "--" + token; } return options.hasShortOption(optName);   
if(optName==null){ optName=this.optionName; } return options.hasShortOption(optName);   
if(optName==null){ optName=getDefaultOptionName(); } return options.hasShortOption(optName);   
if(optName==null){ optName=optOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName= "true" }; } return options.hasShortOption(optName);   
if(optName==null){ optName= opt; } return options.hasShortOption(optName);   
if(optName==null){ optName= "default; } return options.hasShortOption(optName);   
if(optName==null){ optName=pos; } return options.hasShortOption(optName);   
if(optName==null){ optName= "none" }; } return options.hasShortOption(optName);   
if(optName==null){ optName=this.longName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "--"; } return options.hasShortOption(optName);   
if(optName==null){ optName=pt; } return options.hasShortOption(optName);   
if(optName==null){ optName=LongOpt.DEFAULT; } return options.hasShortOption(optName);   
if(optName==null){ optName= "DEFAULT" }; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt.trim(); } return options.hasShortOption(optName);   
if(optName==null){ optName=empty; } return options.hasShortOption(optName);   
if(optName==null){ optName=defaultShortOptName; } return options.hasShortOption(optName);   
if(optName==null){ optName=long; } return options.hasShortOption(optName);   
if(optName==null){ optName= "."; } return options.hasShortOption(optName);   
if(optName==null){ optName= name; } return options.hasShortOption(optName);   
if(optName==null){ optName=optShortName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "--; } return options.hasShortOption(optName);   
if(optName==null){ optName=optLongName; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt.name; } return options.hasShortOption(optName);   
if(optName==null){ optName=type; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortFlag; } return options.hasShortOption(optName);   
if(optName==null){ optName=DefaultOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName= "options"; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=this.shortOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=line; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.optionName; } return options.hasShortOption(optName);   
if(optName==null){ optName="-"; } return options.hasShortOption(optName);   
if(optName==null){ optName=EMPTY_OPTION; } return options.hasShortOption(optName);   
if(optName==null){ optName=DEFAULT_SHORTOPTION; } return options.hasShortOption(optName);   
if(optName==null){ optName=optNo; } return options.hasShortOption(optName);   
if(optName==null){ optName=longOptionName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "";  }; } return options.hasShortOption(optName);   
if(optName==null){ optName=DefaultShortOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=OPT_NAME; } return options.hasShortOption(optName);   
if(optName==null){ optName=noOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=Boolean.FALSE; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortOptions.length; } return options.hasShortOption(optName);   
if(optName==null){ optName= defaultOption; } return options.hasShortOption(optName);   
if(optName==null){ optName=DEFAULT_OPT; } return options.hasShortOption(optName);   
if(optName==null){ optName=DEFAULT_SHORT; } return options.hasShortOption(optName);   
if(optName==null){ optName=getDefaultShortName; } return options.hasShortOption(optName);   
if(optName==null){ optName=nextOpt; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortNames; } return options.hasShortOption(optName);   
if(optName==null){ optName=getOptionName(); } return options.hasShortOption(optName);   
if(optName==null){ optName= "true"; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=shortOptionsName; } return options.hasShortOption(optName);   
if(optName==null){ optName= "main"; }; } return options.hasShortOption(optName);   
if(optName==null){ optName=EMPTY_STRING; } return options.hasShortOption(optName);   
if(optName==null){ optName=opt(); }; } return options.hasShortOption(optName);   
if(optName==null){ optName=TOKEN_SHORT; } return options.hasShortOption(optName);   
if(optName==null){ optName= "index"; } return options.hasShortOption(optName);   
if(optName==null){ optName=options.short; } return options.hasShortOption(optName);   
if(options!=null){ return options.hasShortOption(optName); }  
if(options != null){ return options.hasShortOption(optName); }  
if(options.hasShortOption(optName)){ return options.hasShortOption(optName); }  
if(options.hasShortOption(optName){ return options.hasShortOption(optName); }  
if(options){ return options.hasShortOption(optName); }  
if(optName != null){ return options.hasShortOption(optName); }  
if(options!= null){ return options.hasShortOption(optName); }  
if(options.hasOption(optName){ return options.hasShortOption(optName); }  
if(optName!=null){ return options.hasShortOption(optName); }  
if( options.hasShortOption(optName)){ return options.hasShortOption(optName); }  
if(options.hasLongOption(optName){ return options.hasShortOption(optName); }  
if(options.hasOption(optName)){ return options.hasShortOption(optName); }  
if( options != null){ return options.hasShortOption(optName); }  
if(options.hasLongOption(optName)){ return options.hasShortOption(optName); }  
if(hasShortOption){ return options.hasShortOption(optName); }  
if(optName.length() > 0){ return options.hasShortOption(optName); }  
if( options){ return options.hasShortOption(optName); }  
if(optName){ return options.hasShortOption(optName); }  
if(hasShortOption(optName){ return options.hasShortOption(optName); }  
if(options.hasShortOptions){ return options.hasShortOption(optName); }  
if(options==null){ return options.hasShortOption(optName); }  
if(options.containsKey(optName){ return options.hasShortOption(optName); }  
if(debug){ return options.hasShortOption(optName); }  
if(null != options){ return options.hasShortOption(optName); }  
if(options.hasShortOptions(optName)){ return options.hasShortOption(optName); }  
if(options == null){ return options.hasShortOption(optName); }  
if(hasShortOption(optName)){ return options.hasShortOption(optName); }  
if( options.hasOption(optName)){ return options.hasShortOption(optName); }  
if(hasOption){ return options.hasShortOption(optName); }  
if(hasOption(optName){ return options.hasShortOption(optName); }  
if(options != null && options.hasShortOption){ return options.hasShortOption(optName); }  
if(options.has(optName){ return options.hasShortOption(optName); }  
if(hasShortOptions){ return options.hasShortOption(optName); }  
if( options!=null){ return options.hasShortOption(optName); }  
if( !options.hasShortOption(optName){ return options.hasShortOption(optName); }  
if(options!=null && options.hasShortOption){ return options.hasShortOption(optName); }  
if( optName != null){ return options.hasShortOption(optName); }  
if(options.hasShortOptions(optName){ return options.hasShortOption(optName); }  
if(options.hasShortOption){ return options.hasShortOption(optName); }  
if(verbose){ return options.hasShortOption(optName); }  
if(optName.length()>0){ return options.hasShortOption(optName); }  
if(options.contains(optName){ return options.hasShortOption(optName); }  
if(pos != -1){ return options.hasShortOption(optName); }  
if(options.hasKey(optName){ return options.hasShortOption(optName); }  
if(true){ return options.hasShortOption(optName); }  
if(hasOptions){ return options.hasShortOption(optName); }  
if( options.hasLongOption(optName)){ return options.hasShortOption(optName); }  
if(optName.startsWith("-")){ return options.hasShortOption(optName); }  
if(options.hasOption(optName)!=null){ return options.hasShortOption(optName); }  
if(options.containsKey(optName)){ return options.hasShortOption(optName); }  
if(options.hasValue(optName){ return options.hasShortOption(optName); }  
if(DEBUG){ return options.hasShortOption(optName); }  
if(options.options){ return options.hasShortOption(optName); }  
if(options.hasOptions){ return options.hasShortOption(optName); }  
if(false){ return options.hasShortOption(optName); }  
if(null!=options){ return options.hasShortOption(optName); }  
if(options.hasArg){ return options.hasShortOption(optName); }  
if(isShortOption(optName){ return options.hasShortOption(optName); }  
if(optName.length() > 1){ return options.hasShortOption(optName); }  
if(options.hasLongOpt(optName){ return options.hasShortOption(optName); }  
if(options.hasOwnProperty(optName){ return options.hasShortOption(optName); }  
if(options.has(optName)){ return options.hasShortOption(optName); }  
if(options.containsOption(optName){ return options.hasShortOption(optName); }  
if(options.isLongOption(optName){ return options.hasShortOption(optName); }  
if(optName!= null){ return options.hasShortOption(optName); }  
if(pos > 0){ return options.hasShortOption(optName); }  
if(options != null && optName != null){ return options.hasShortOption(optName); }  
if(options.hasOption){ return options.hasShortOption(optName); }  
if(hasOption(optName)){ return options.hasShortOption(optName); }  
if(StringUtils.isNotBlank(optName){ return options.hasShortOption(optName); }  
if(options instanceof Options){ return options.hasShortOption(optName); }  
if(options.useShortOptions){ return options.hasShortOption(optName); }  
if(options.containsShortOption(optName){ return options.hasShortOption(optName); }  
if(opts!=null){ return options.hasShortOption(optName); }  
if(opts != null){ return options.hasShortOption(optName); }  
if(options.hasOpt(optName){ return options.hasShortOption(optName); }  
if(options.hasShortOptions()){ return options.hasShortOption(optName); }  
if( options.hasShortOption(optName){ return options.hasShortOption(optName); }  
if(isLongOption(optName){ return options.hasShortOption(optName); }  
if(options.isSet(optName){ return options.hasShortOption(optName); }  
if(hasLongOption){ return options.hasShortOption(optName); }  
if(options.isLongOption(optName)){ return options.hasShortOption(optName); }  
if(options.contains(optName)){ return options.hasShortOption(optName); }  
if(options.hasShortName(optName)){ return options.hasShortOption(optName); }  
if(options !=null){ return options.hasShortOption(optName); }  
if(options.hasLongOpt(optName)){ return options.hasShortOption(optName); }  
if(options.hasKey(optName)){ return options.hasShortOption(optName); }  
if(isShortOption){ return options.hasShortOption(optName); }  
if(hasLongOption(optName){ return options.hasShortOption(optName); }  
if(optName.startsWith("--")){ return options.hasShortOption(optName); }  
if(optName.length()==1){ return options.hasShortOption(optName); }  
if(options.hasOption(optName)==true){ return options.hasShortOption(optName); }  
if(options.hasShortName(optName){ return options.hasShortOption(optName); }  
if(optName.length() != 0){ return options.hasShortOption(optName); }  
if(options.getOptions().containsKey(optName){ return options.hasShortOption(optName); }  
if(StringUtils.hasText(optName){ return options.hasShortOption(optName); }  
if(optionNames.contains(optName){ return options.hasShortOption(optName); }  
if(options.options != null){ return options.hasShortOption(optName); }  
if(options.containsShortOption(optName)){ return options.hasShortOption(optName); }  
if(logger.isDebugEnabled()){ return options.hasShortOption(optName); }  
if(options!=null && optName!=null){ return options.hasShortOption(optName); }  
if(options.hasOpt(optName)){ return options.hasShortOption(optName); }  
if(options.hasValue(optName)){ return options.hasShortOption(optName); }  
if( !options.hasOption(optName)){ return options.hasShortOption(optName); }  
if(options.hasLongOptions){ return options.hasShortOption(optName); }  
if(shortOptions != null){ return options.hasShortOption(optName); }  
if(options.containsOption(optName)){ return options.hasShortOption(optName); }  
if(options.hasOptions(optName){ return options.hasShortOption(optName); }  
if(options.hasShortName){ return options.hasShortOption(optName); }  
if( ! options.hasShortOption(optName){ return options.hasShortOption(optName); }  
if( options!= null){ return options.hasShortOption(optName); }  
if(options instanceof Option){ return options.hasShortOption(optName); }  
if(pos >= 0){ return options.hasShortOption(optName); }  
if(options.hasOption(optName)==false){ return options.hasShortOption(optName); }  
if(optName == null){ return options.hasShortOption(optName); }  
if(isShortOption(optName)){ return options.hasShortOption(optName); }  
if(StringUtils.isNotEmpty(optName){ return options.hasShortOption(optName); }  
if(optName != null && options != null){ return options.hasShortOption(optName); }  
if(optName.length() == 1){ return options.hasShortOption(optName); }  
if(isLongOption){ return options.hasShortOption(optName); }  
if(enabled){ return options.hasShortOption(optName); }  
if(options.hasShortOpt(optName)){ return options.hasShortOption(optName); }  
if(options.options.containsKey(optName){ return options.hasShortOption(optName); }  
if(options.isShortOption(optName){ return options.hasShortOption(optName); }  
if(options.getShortOptions()!=null){ return options.hasShortOption(optName); }  
if(optionName != null){ return options.hasShortOption(optName); }  
if(options.hasOptions(optName)){ return options.hasShortOption(optName); }  
if(validOptions){ return options.hasShortOption(optName); }  
if(options.isShortOption(optName)){ return options.hasShortOption(optName); }  
if(trace){ return options.hasShortOption(optName); }  
if(options.hasOption(optName)>=0){ return options.hasShortOption(optName); }  
if(options.verbose){ return options.hasShortOption(optName); }  
if(options.shortOptions != null){ return options.hasShortOption(optName); }  
if(optName.length()==0){ return options.hasShortOption(optName); }  
if(options.hasShortOpt(optName){ return options.hasShortOption(optName); }  
if(this.options != null){ return options.hasShortOption(optName); }  
if(options.hasOwnProperty(optName)){ return options.hasShortOption(optName); }  
if(options.hasArg()){ return options.hasShortOption(optName); }  
if(optionNames.containsKey(optName){ return options.hasShortOption(optName); }  
if(pos > -1){ return options.hasShortOption(optName); }  
if(optName.startsWith("-"))){ return options.hasShortOption(optName); }  
if(options.useShortOption){ return options.hasShortOption(optName); }  
if(options.options.containsKey(optName)){ return options.hasShortOption(optName); }  
if(options != null && options.hasOption){ return options.hasShortOption(optName); }  
if(options.options!=null){ return options.hasShortOption(optName); }  
if(options!=null&&options.hasShortOption){ return options.hasShortOption(optName); }  
if(options.getOptions()!=null){ return options.hasShortOption(optName); }  
if(options.isOption(optName){ return options.hasShortOption(optName); }  
if(options.hasLongOpt){ return options.hasShortOption(optName); }  
if(isLongOption(optName)){ return options.hasShortOption(optName); }  
if(options.hasLongOption){ return options.hasShortOption(optName); }  
if(isValidOption(optName){ return options.hasShortOption(optName); }  
if(this.options!=null){ return options.hasShortOption(optName); }  
if(isValidShortOption(optName){ return options.hasShortOption(optName); }  
if(optName.startsWith("-")) ){ return options.hasShortOption(optName); }  
if(hasShortOpt){ return options.hasShortOption(optName); }  
if(OPTIONS){ return options.hasShortOption(optName); }  
if(optName.contains("-")){ return options.hasShortOption(optName); }  
if(optionNames != null){ return options.hasShortOption(optName); }  
if(options.hasAttribute(optName){ return options.hasShortOption(optName); }  
if(required){ return options.hasShortOption(optName); }  
if(options.shortOptions){ return options.hasShortOption(optName); }  
if(prefix){ return options.hasShortOption(optName); }  
if(options.isSet(optName)){ return options.hasShortOption(optName); }  
if(useShortOptions){ return options.hasShortOption(optName); }  
if(isOption(optName){ return options.hasShortOption(optName); }  
if(options.addOption){ return options.hasShortOption(optName); }  
if(optional){ return options.hasShortOption(optName); }  
if(validShortOptions){ return options.hasShortOption(optName); }  
if(shortOptions){ return options.hasShortOption(optName); }  
if(options.containsLongOption(optName){ return options.hasShortOption(optName); }  
if(opts){ return options.hasShortOption(optName); }  
if(options.getOptions().containsKey(optName)){ return options.hasShortOption(optName); }  
if(options!= null && options.hasShortOption){ return options.hasShortOption(optName); }  
if(options.getOption(optName)!=null){ return options.hasShortOption(optName); }  
if(options.getOptions()==null){ return options.hasShortOption(optName); }  
if(flags){ return options.hasShortOption(optName); }  
if(options.isOption(optName)){ return options.hasShortOption(optName); }  
if(validShortOption){ return options.hasShortOption(optName); }  
if(options.hasValue){ return options.hasShortOption(optName); }  
if( optName.length() > 0){ return options.hasShortOption(optName); }  
if(optName != ""){ return options.hasShortOption(optName); }  
if(LOGGER.isDebugEnabled()){ return options.hasShortOption(optName); }  
if(options.haveShortOptions){ return options.hasShortOption(optName); }  
if(options.hasShortOption(optName))){ return options.hasShortOption(optName); }  
if( options == null){ return options.hasShortOption(optName); }  
if(options.isSetOption(optName){ return options.hasShortOption(optName); }  
if(optionsEnabled){ return options.hasShortOption(optName); }  
if(logger.isDebugEnabled){ return options.hasShortOption(optName); }  
if(optName.length()==2){ return options.hasShortOption(optName); }  
if(options.hasClassOption(optName){ return options.hasShortOption(optName); }  
if(this.options){ return options.hasShortOption(optName); }  
if(options!=null && options.hasOption){ return options.hasShortOption(optName); }  
if(shortOptions!=null){ return options.hasShortOption(optName); }  
if( options.hasOption(optName){ return options.hasShortOption(optName); }  
if(optName!=""){ return options.hasShortOption(optName); }  
if(useShortOption){ return options.hasShortOption(optName); }  
if(hasOpt){ return options.hasShortOption(optName); }  
if( !options.hasLongOption(optName){ return options.hasShortOption(optName); }  
if(isValidOption(optName)){ return options.hasShortOption(optName); }  
if(exists(optName){ return options.hasShortOption(optName); }  
if(options.getOptions() != null){ return options.hasShortOption(optName); }  
if(optionExists(optName){ return options.hasShortOption(optName); }  
if(hasArg){ return options.hasShortOption(optName); }  
if( isShortOption(optName)){ return options.hasShortOption(optName); }  
if(options.hasLongOptions(optName){ return options.hasShortOption(optName); }  
if(options!=null && options.hasLongOption){ return options.hasShortOption(optName); }  
if(longOptions){ return options.hasShortOption(optName); }  
if(options== null){ return options.hasShortOption(optName); }  
if(options != null && options.hasLongOption){ return options.hasShortOption(optName); }  
if(options.isLongOption){ return options.hasShortOption(optName); }  
if(token.startsWith("-")){ return options.hasShortOption(optName); }  
if(supportsShortOptions){ return options.hasShortOption(optName); }  
if(pos != token.length()-1){ return options.hasShortOption(optName); }  
if(options.getOption(optName) != null){ return options.hasShortOption(optName); }  
if(optionNames){ return options.hasShortOption(optName); }  
if(token.length() > 1){ return options.hasShortOption(optName); }  
if(strict){ return options.hasShortOption(optName); }  
if(options.hasOption(optName)>0){ return options.hasShortOption(optName); }  
if(isOption){ return options.hasShortOption(optName); }  
if(options.isLongOptions){ return options.hasShortOption(optName); }  
if(options.isSet){ return options.hasShortOption(optName); }  
if(optName.equals("-")){ return options.hasShortOption(optName); }  
if(options.hasName(optName){ return options.hasShortOption(optName); }  
if( hasShortOption(optName)){ return options.hasShortOption(optName); }  
if(options.getShortOption(optName)!=null){ return options.hasShortOption(optName); }  
if("".equals(optName){ return options.hasShortOption(optName); }  
if(options.hasName(optName)){ return options.hasShortOption(optName); }  
if(isOption(optName)){ return options.hasShortOption(optName); }  
if(options.hasArg(optName){ return options.hasShortOption(optName); }  
if(hasShortName){ return options.hasShortOption(optName); }  
if(options.isFlagSet(optName){ return options.hasShortOption(optName); }  
if(optName.contains("--")){ return options.hasShortOption(optName); }  
if(optionOptions != null){ return options.hasShortOption(optName); }  
if(StringUtils.isBlank(optName){ return options.hasShortOption(optName); }  
if( options.has(optName)){ return options.hasShortOption(optName); }  
if(hasLongOption(optName)){ return options.hasShortOption(optName); }  
if(isValidShortOption){ return options.hasShortOption(optName); }  
if(getOptions().containsKey(optName){ return options.hasShortOption(optName); }  
if(options.hasIntOption(optName){ return options.hasShortOption(optName); }  
if( options.containsKey(optName)){ return options.hasShortOption(optName); }  
if(options.hasShortOption(optName);){ return options.hasShortOption(optName); }  
if(options.exists(optName){ return options.hasShortOption(optName); }  
if(options.getShortOptions() != null){ return options.hasShortOption(optName); }  
if(optionMap != null){ return options.hasShortOption(optName); }  
if(option){ return options.hasShortOption(optName); }  
if(options!=null&&optName!=null){ return options.hasShortOption(optName); }  
if(options.hasLongOptions(optName)){ return options.hasShortOption(optName); }  
if(options.hasShort(optName){ return options.hasShortOption(optName); }  
if(optionMap!=null){ return options.hasShortOption(optName); }  
