 return null;  
 else return null;  
 else  return null;  
 else  return null;  
 _inputStart = 0;  
 else return null;  
 else return null;  
 else return null;  
 else { return null;  
 _resultString = null;  
 else     return null;  
 return _currentSegment;  
 _hasSegments = true;  
 else   return null;  
 return _resultArray = null;  
 else return _resultArray = null;  
 else      return null;  
  return null;  
 else  return _resultArray;  
 else  return _resultArray = null;  
 else  return _resultArray;  
  _inputStart = 0;  
 else    return null;  
 return _resultArray;  
 else   return null;  
 return _resultString;  
 else          return null;  
 else  return _currentSegment;  
 else return _resultString;  
 else { return null;  
 else     return null;  
 else  return _resultString;  
 return _inputBuffer;  
 else  return _resultString;  
 else return _resultArray;  
 else return _currentSegment;  
 else;  
 else    return null;  
 _resultArray = null;  
 else       return null;  
 return _currentSegment = null;  
 else  return _currentSegment;  
 else return _resultArray = null;  
 else return _resultArray;  
 else return _resultString;  
 else      return null;  
  _hasSegments = true;  
 else { return _currentSegment;  
 else return _resultArray = null;  
 else { return _resultArray;  
 else _resultArray = null;  
 _hasSegments = false;  
 else return _currentSegment;  
 else  return _inputBuffer;  
 else { return _resultArray;  
 _currentSegment = null;  
 else         return null;  
  _resultString = null;  
 else          return null;  
 else return _inputBuffer;  
 _resultStart = 0;  
 else return _resultArray;  
  return _currentSegment;  
 else { _resultArray = null;  
 else { _inputStart = 0;  
 else return _resultString;  
 else     return _resultArray;  
 else { return _resultString;  
 else return _currentSegment;  
 _inputStart = -1;  
 else   return _resultArray;  
 else _resultArray = null;  
 return _resultBuffer;  
 else return _resultString;  
   };  
 else     return _currentSegment;  
 else return _resultArray;  
 else      return _resultArray;  
 else   return _currentSegment;  
 else { return _currentSegment;  
 else  return _inputBuffer;  
 else _resultArray = null;  
 _resultArray = _currentSegment;  
 else    return _resultArray;  
 else return _currentSegment;  
 else   return _resultArray;  
 else  return _resultArray = EMPTY;  
 else  _resultArray = null;  
 else      return _currentSegment;  
 else  { return null;  
 else   return _resultArray = null;  
  return _resultArray = null;  
 else throw new IllegalStateException;  
else;  
 else     return _resultString;  
 else  return _resultBuffer;  
 else { _resultString = null;  
 return _resultBuffer = null;  
 else { return _inputBuffer;  
 else  { return null;  
 return EMPTY_STRING;  
 return _buffer;  
 else    return _currentSegment;  
 else          return _resultArray;  
 else     return _resultArray = null;  
 else   return _resultString;  
else return null;  
 else  return _resultBuffer;  
 else          return _currentSegment;  
  return _resultArray;  
 _resultString = _currentSegment;  
 return EMPTY;  
else return null;  
 throw new IllegalStateException;  
 else      return _resultString;  
 else return _resultBuffer;  
 else return _inputBuffer;  
 else        return null;  
 else     return _resultArray;  
 else _inputStart = 0;  
 else { _hasSegments = true;  
 else return _resultArray = EMPTY;  
 else                  return null;  
 else   return _resultString;  
 else throw new IllegalStateException;  
 return null;  
 else  { return _resultArray;  
 return _resultArray = EMPTY;  
  return _inputBuffer;  
 else _resultString = null;  
 else    return _resultArray;  
 else    return _resultArray = null;  
 return _inputBuffer = null;  
  _resultArray = null;  
 else return contentsAsArray();  
 else _resultString = null;  
 else       return null;  
 else    return _resultString;  
 else          return _resultString;  
 else return _inputBuffer;  
 else   return _currentSegment;  
 else      return _resultArray = null;  
 _resultBuffer = null;  
 _resultArray = _inputBuffer;  
 return _outputBuffer;  
 else { return _resultString;  
 else _resultArray = null;  
 else      return _resultArray;  
  return _currentSegment = null;  
 else             return null;  
  return _resultString;  
  _currentSegment = null;  
 else              return null;  
  _hasSegments = false;  
 else     return _resultString;  
 else _resultArray = _currentSegment;  
 else       return _currentSegment;  
 };  
;  
 if (!_hasSegments) return null;  
 else   return _inputBuffer;  
 else     return _inputBuffer;  
 else       return _resultArray;  
 _outputStart = 0;  
else  return null;  
 Return null;  
 else return _currentSegment = null;  
 else  return contentsAsArray();  
 else return _resultBuffer;  
 //return null;  
 else         return null;  
 return "";  
 else return _inputBuffer;  
 return contentsAsArray();  
 return false;  
 else;  
 _buffer = null;  
 else { return null;  
 _currentSegment = _inputStart;  
 return EMPTY_ARRAY;  
 else      return _inputBuffer;  
 else return _resultBuffer = null;  
 else           return null;  
 else     return _currentSegment;  
else { return null;  
 else _inputStart = 0;  
 _resultArray = new char[];  
 return contentsAsString();  
 return _resultArray = new char;  
 else { return _resultBuffer;  
  _resultStart = 0;  
 else return EMPTY_STRING;  
 _inputStart = 0;  
 _currentSegment = 0;  
 else  _resultArray = null;  
 else    return _resultString;  
 else return _resultArray = EMPTY;  
 else    return _inputBuffer;  
 return _resultString = null;  
  _inputStart = -1;  
 else _inputStart = 0;  
 else            return null;  
 else _resultString = null;  
 else { return _inputBuffer;  
 else      return _resultString;  
 else       return _resultString;  
 //else return null;  
 else        return null;  
 _hasSegment = true;  
         _inputStart = 0;  
 else          return _resultArray;  
 return _resultString != null;  
 else  return _buffer;  
  return null;  
 else  return EMPTY;  
 return new char[0];  
 _inputStart = _currentSegment;  
 @return;  
 else return EMPTY;  
 else          return _resultArray = null;  
 else  return null;  
 else    return _currentSegment;  
 return new char[0;  
 else          return _inputBuffer;  
 _result = null;  
 else  return EMPTY;  
 _currentSegment = -1;  
 return _resultString == null;  
 else  return null;  
 _resultArray = _buffer;  
 else                   return null;  
 else  return EMPTY_STRING;  
 return contents;  
 else return _resultBuffer;  
 return EMPTY_CHARACTERS;  
 _inputString = null;  
 return EMPTY_BUFFER;  
 else return "";  
 else                  return null;  
 return _resultCharArray;  
          _inputStart = 0;  
 return _resultArray = _buffer;  
 else         return _currentSegment;  
 else         return _resultArray;  
 else  return contentsAsArray();  
 try;  
 else      return _currentSegment;  
 else { _currentSegment = null;  
 this._inputStart = 0;  
 else {;  
 return null; if (!_hasSegments)  return _currentSegment;   
 else return null; if (!_hasSegments)  return _currentSegment;   
 else; if (!_hasSegments)  return _currentSegment;   
 else; if (!_hasSegments)  return _currentSegment;   
 ; if (!_hasSegments)  return _currentSegment;   
 else  return null; if (!_hasSegments)  return _currentSegment;   
else; if (!_hasSegments)  return _currentSegment;   
 else return null; if (!_hasSegments)  return _currentSegment;   
 return _currentSegment; if (!_hasSegments)  return _currentSegment;   
; if (!_hasSegments)  return _currentSegment;   
 ; if (!_hasSegments)  return _currentSegment;   
 else  return null; if (!_hasSegments)  return _currentSegment;   
 return _resultArray; if (!_hasSegments)  return _currentSegment;   
 return null; if (!_hasSegments)  return _currentSegment;   
 return _resultString; if (!_hasSegments)  return _currentSegment;   
 else return _resultString; if (!_hasSegments)  return _currentSegment;   
 return _inputBuffer; if (!_hasSegments)  return _currentSegment;   
 else return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 else   return null; if (!_hasSegments)  return _currentSegment;   
 else return null; if (!_hasSegments)  return _currentSegment;   
  return null; if (!_hasSegments)  return _currentSegment;   
 else {; if (!_hasSegments)  return _currentSegment;   
 _inputStart = 0; if (!_hasSegments)  return _currentSegment;   
  ; if (!_hasSegments)  return _currentSegment;   
 else return _resultArray; if (!_hasSegments)  return _currentSegment;   
  ; if (!_hasSegments)  return _currentSegment;   
 else  return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 else     return null; if (!_hasSegments)  return _currentSegment;   
 else  return _resultString; if (!_hasSegments)  return _currentSegment;   
 return; if (!_hasSegments)  return _currentSegment;   
 else return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 else  return _resultArray; if (!_hasSegments)  return _currentSegment;   
 else    return null; if (!_hasSegments)  return _currentSegment;   
 return _resultBuffer; if (!_hasSegments)  return _currentSegment;   
 else return null; if (!_hasSegments)  return _currentSegment;   
 //else; if (!_hasSegments)  return _currentSegment;   
 _hasSegments = true; if (!_hasSegments)  return _currentSegment;   
 else return _resultString; if (!_hasSegments)  return _currentSegment;   
 else return; if (!_hasSegments)  return _currentSegment;   
 this; if (!_hasSegments)  return _currentSegment;   
else return null; if (!_hasSegments)  return _currentSegment;   
 try; if (!_hasSegments)  return _currentSegment;   
  return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 else   return null; if (!_hasSegments)  return _currentSegment;   
 else return _inputBuffer; if (!_hasSegments)  return _currentSegment;   
 }; if (!_hasSegments)  return _currentSegment;   
 else  return; if (!_hasSegments)  return _currentSegment;   
 else { return null; if (!_hasSegments)  return _currentSegment;   
 else          return null; if (!_hasSegments)  return _currentSegment;   
 else return _resultArray; if (!_hasSegments)  return _currentSegment;   
 else     return null; if (!_hasSegments)  return _currentSegment;   
 return ""; if (!_hasSegments)  return _currentSegment;   
 else      return null; if (!_hasSegments)  return _currentSegment;   
 return _buffer; if (!_hasSegments)  return _currentSegment;   
 else  return _inputBuffer; if (!_hasSegments)  return _currentSegment;   
 else { return null; if (!_hasSegments)  return _currentSegment;   
return null; if (!_hasSegments)  return _currentSegment;   
 _resultString = null; if (!_hasSegments)  return _currentSegment;   
 else return _resultBuffer; if (!_hasSegments)  return _currentSegment;   
 else return _inputBuffer; if (!_hasSegments)  return _currentSegment;   
 return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 else    return null; if (!_hasSegments)  return _currentSegment;   
  return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 finally; if (!_hasSegments)  return _currentSegment;   
   ; if (!_hasSegments)  return _currentSegment;   
else  return null; if (!_hasSegments)  return _currentSegment;   
 else { ; if (!_hasSegments)  return _currentSegment;   
 //return null; if (!_hasSegments)  return _currentSegment;   
 return EMPTY; if (!_hasSegments)  return _currentSegment;   
  ; if (!_hasSegments)  return _currentSegment;   
 else return; if (!_hasSegments)  return _currentSegment;   
 else          return null; if (!_hasSegments)  return _currentSegment;   
 return _outputBuffer; if (!_hasSegments)  return _currentSegment;   
 return _resultArray; if (!_hasSegments)  return _currentSegment;   
  else; if (!_hasSegments)  return _currentSegment;   
 else   return _currentSegment; if (!_hasSegments)  return _currentSegment;   
  return null; if (!_hasSegments)  return _currentSegment;   
  return null; if (!_hasSegments)  return _currentSegment;   
 else {; if (!_hasSegments)  return _currentSegment;   
 Otherwise; if (!_hasSegments)  return _currentSegment;   
 return _currentBuffer; if (!_hasSegments)  return _currentSegment;   
 else  return _resultBuffer; if (!_hasSegments)  return _currentSegment;   
 return contentsAsArray(); if (!_hasSegments)  return _currentSegment;   
 else   return _resultString; if (!_hasSegments)  return _currentSegment;   
 return _resultString; if (!_hasSegments)  return _currentSegment;   
 else                  return null; if (!_hasSegments)  return _currentSegment;   
 else return ""; if (!_hasSegments)  return _currentSegment;   
 else      return null; if (!_hasSegments)  return _currentSegment;   
 finally; if (!_hasSegments)  return _currentSegment;   
  return null; if (!_hasSegments)  return _currentSegment;   
 return EMPTY_STRING; if (!_hasSegments)  return _currentSegment;   
 returns null; if (!_hasSegments)  return _currentSegment;   
 _resultArray = null; if (!_hasSegments)  return _currentSegment;   
 else  return; if (!_hasSegments)  return _currentSegment;   
 return _result; if (!_hasSegments)  return _currentSegment;   
 return false; if (!_hasSegments)  return _currentSegment;   
else return null; if (!_hasSegments)  return _currentSegment;   
 for; if (!_hasSegments)  return _currentSegment;   
 Return null; if (!_hasSegments)  return _currentSegment;   
  return _resultArray; if (!_hasSegments)  return _currentSegment;   
 else return _currentSegment; if (!_hasSegments)  return _currentSegment;   
  return _inputBuffer; if (!_hasSegments)  return _currentSegment;   
 _currentSegment = null; if (!_hasSegments)  return _currentSegment;   
     ; if (!_hasSegments)  return _currentSegment;   
 return ''; if (!_hasSegments)  return _currentSegment;   
 else ; if (!_hasSegments)  return _currentSegment;   
  	; if (!_hasSegments)  return _currentSegment;   
 else   return _resultArray; if (!_hasSegments)  return _currentSegment;   
   ; if (!_hasSegments)  return _currentSegment;   
    ; if (!_hasSegments)  return _currentSegment;   
 else         return null; if (!_hasSegments)  return _currentSegment;   
  return _resultString; if (!_hasSegments)  return _currentSegment;   
 else       return null; if (!_hasSegments)  return _currentSegment;   
 else {}; if (!_hasSegments)  return _currentSegment;   
 else return _resultString; if (!_hasSegments)  return _currentSegment;   
 return textBuffer; if (!_hasSegments)  return _currentSegment;   
 else     return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 else ; if (!_hasSegments)  return _currentSegment;   
 //return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 else       return null; if (!_hasSegments)  return _currentSegment;   
     else; if (!_hasSegments)  return _currentSegment;   
 else     return _resultString; if (!_hasSegments)  return _currentSegment;   
 else return EMPTY; if (!_hasSegments)  return _currentSegment;   
 else { return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 otherwise; if (!_hasSegments)  return _currentSegment;   
 init; if (!_hasSegments)  return _currentSegment;   
else{; if (!_hasSegments)  return _currentSegment;   
 return new char[]; if (!_hasSegments)  return _currentSegment;   
 else  {; if (!_hasSegments)  return _currentSegment;   
 ;; if (!_hasSegments)  return _currentSegment;   
 else return false; if (!_hasSegments)  return _currentSegment;   
 internal; if (!_hasSegments)  return _currentSegment;   
 else return _resultBuffer; if (!_hasSegments)  return _currentSegment;   
 else return _resultArray; if (!_hasSegments)  return _currentSegment;   
@Override; if (!_hasSegments)  return _currentSegment;   
  return; if (!_hasSegments)  return _currentSegment;   
   ; if (!_hasSegments)  return _currentSegment;   
 _inputStart += 1; if (!_hasSegments)  return _currentSegment;   
      ; if (!_hasSegments)  return _currentSegment;   
 return this; if (!_hasSegments)  return _currentSegment;   
  }; if (!_hasSegments)  return _currentSegment;   
   ; if (!_hasSegments)  return _currentSegment;   
 return _inputBuffer; if (!_hasSegments)  return _currentSegment;   
 }; if (!_hasSegments)  return _currentSegment;   
 	; if (!_hasSegments)  return _currentSegment;   
 return contents; if (!_hasSegments)  return _currentSegment;   
 return _currentText; if (!_hasSegments)  return _currentSegment;   
 else              return null; if (!_hasSegments)  return _currentSegment;   
 else     return _resultArray; if (!_hasSegments)  return _currentSegment;   
 return _currentString; if (!_hasSegments)  return _currentSegment;   
 else         return null; if (!_hasSegments)  return _currentSegment;   
 --; if (!_hasSegments)  return _currentSegment;   
 else    return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 //else return null; if (!_hasSegments)  return _currentSegment;   
 else _resultArray = null; if (!_hasSegments)  return _currentSegment;   
 return contentsAsString(); if (!_hasSegments)  return _currentSegment;   
else {; if (!_hasSegments)  return _currentSegment;   
 return _stringBuffer; if (!_hasSegments)  return _currentSegment;   
 else return EMPTY_STRING; if (!_hasSegments)  return _currentSegment;   
    ; if (!_hasSegments)  return _currentSegment;   
 else return _buffer; if (!_hasSegments)  return _currentSegment;   
 ; if (!_hasSegments)  return _currentSegment;   
 then; if (!_hasSegments)  return _currentSegment;   
 return 0; if (!_hasSegments)  return _currentSegment;   
 else throw new IllegalStateException; if (!_hasSegments)  return _currentSegment;   
 return _currentTextBuffer; if (!_hasSegments)  return _currentSegment;   
    else; if (!_hasSegments)  return _currentSegment;   
 _hasSegments = false; if (!_hasSegments)  return _currentSegment;   
 return EMPTY_ARRAY; if (!_hasSegments)  return _currentSegment;   
 else        return null; if (!_hasSegments)  return _currentSegment;   
 ret; if (!_hasSegments)  return _currentSegment;   
 throw new IllegalStateException; if (!_hasSegments)  return _currentSegment;   
 _resultStart = 0; if (!_hasSegments)  return _currentSegment;   
 else    return _resultString; if (!_hasSegments)  return _currentSegment;   
 else             return null; if (!_hasSegments)  return _currentSegment;   
    ; if (!_hasSegments)  return _currentSegment;   
 read; if (!_hasSegments)  return _currentSegment;   
 next; if (!_hasSegments)  return _currentSegment;   
 end; if (!_hasSegments)  return _currentSegment;   
 else                  return null; if (!_hasSegments)  return _currentSegment;   
 return undefined; if (!_hasSegments)  return _currentSegment;   
      else; if (!_hasSegments)  return _currentSegment;   
 else  return EMPTY; if (!_hasSegments)  return _currentSegment;   
 internally; if (!_hasSegments)  return _currentSegment;   
 return _resultStringArray; if (!_hasSegments)  return _currentSegment;   
 else return null; if (!_hasSegments)  return _currentSegment;   
 return EMPTY_BUFFER; if (!_hasSegments)  return _currentSegment;   
 impl; if (!_hasSegments)  return _currentSegment;   
 return _inputString; if (!_hasSegments)  return _currentSegment;   
 or; if (!_hasSegments)  return _currentSegment;   
  return _resultArray; if (!_hasSegments)  return _currentSegment;   
 else    return _resultArray; if (!_hasSegments)  return _currentSegment;   
 // else; if (!_hasSegments)  return _currentSegment;   
 else  return ""; if (!_hasSegments)  return _currentSegment;   
 _buffer = null; if (!_hasSegments)  return _currentSegment;   
 @return; if (!_hasSegments)  return _currentSegment;   
 else returns null; if (!_hasSegments)  return _currentSegment;   
else return _resultArray; if (!_hasSegments)  return _currentSegment;   
  return _inputBuffer; if (!_hasSegments)  return _currentSegment;   
 return _textBuffer; if (!_hasSegments)  return _currentSegment;   
          ; if (!_hasSegments)  return _currentSegment;   
  ; if (!_hasSegments)  return _currentSegment;   
 null; if (!_hasSegments)  return _currentSegment;   
  return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 return []; if (!_hasSegments)  return _currentSegment;   
 //else; if (!_hasSegments)  return _currentSegment;   
 else return contentsAsArray(); if (!_hasSegments)  return _currentSegment;   
 else return _outputBuffer; if (!_hasSegments)  return _currentSegment;   
   }; if (!_hasSegments)  return _currentSegment;   
 else   return _inputBuffer; if (!_hasSegments)  return _currentSegment;   
else return _resultString; if (!_hasSegments)  return _currentSegment;   
 else return null;; if (!_hasSegments)  return _currentSegment;   
 else {  return null; if (!_hasSegments)  return _currentSegment;   
    return null; if (!_hasSegments)  return _currentSegment;   
 return StringUtil; if (!_hasSegments)  return _currentSegment;   
 else return _result; if (!_hasSegments)  return _currentSegment;   
       else; if (!_hasSegments)  return _currentSegment;   
 else                    return null; if (!_hasSegments)  return _currentSegment;   
 else  return _buffer; if (!_hasSegments)  return _currentSegment;   
 else { return null; if (!_hasSegments)  return _currentSegment;   
 else { return _resultString; if (!_hasSegments)  return _currentSegment;   
          else; if (!_hasSegments)  return _currentSegment;   
 return _currentValue; if (!_hasSegments)  return _currentSegment;   
 return String; if (!_hasSegments)  return _currentSegment;   
 Return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 return NULL; if (!_hasSegments)  return _currentSegment;   
   	; if (!_hasSegments)  return _currentSegment;   
 //; if (!_hasSegments)  return _currentSegment;   
 else          return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 else return EMPTY_ARRAY; if (!_hasSegments)  return _currentSegment;   
 it; if (!_hasSegments)  return _currentSegment;   
 ...; if (!_hasSegments)  return _currentSegment;   
 return _string; if (!_hasSegments)  return _currentSegment;   
 else return 0; if (!_hasSegments)  return _currentSegment;   
 else return; if (!_hasSegments)  return _currentSegment;   
  returns _currentSegment; if (!_hasSegments)  return _currentSegment;   
 /*else; if (!_hasSegments)  return _currentSegment;   
   return null; if (!_hasSegments)  return _currentSegment;   
  return _resultBuffer; if (!_hasSegments)  return _currentSegment;   
 */; if (!_hasSegments)  return _currentSegment;   
     return null; if (!_hasSegments)  return _currentSegment;   
else return _currentSegment; if (!_hasSegments)  return _currentSegment;   
 _resultBuffer = null; if (!_hasSegments)  return _currentSegment;   
 else            return null; if (!_hasSegments)  return _currentSegment;   
 else  return false; if (!_hasSegments)  return _currentSegment;   
  returns null; if (!_hasSegments)  return _currentSegment;   
 else  return _result; if (!_hasSegments)  return _currentSegment;   
 return _nullBuffer; if (!_hasSegments)  return _currentSegment;   
 _inputStart = 0; if (!_hasSegments)  return _currentSegment;   
 else   return; if (!_hasSegments)  return _currentSegment;   
if (!_hasSegments)  return _currentSegment;   
if (! _hasSegments)  return _currentSegment;   
if (!hasSegments)  return _currentSegment;   
if (!_hasSegment)  return _currentSegment;   
if (! _hasSegment)  return _currentSegment;   
if (!hasSegment)  return _currentSegment;   
if (!_currentSegment)  return _currentSegment;   
if (!(_hasSegments)  return _currentSegment;   
if (!isEmpty)  return _currentSegment;   
if (! !_hasSegments)  return _currentSegment;   
if (!isClosed)  return _currentSegment;   
if (!_hasText)  return _currentSegment;   
if (! _currentSegment)  return _currentSegment;   
if (!hasText)  return _currentSegment;   
if (!_hasNext)  return _currentSegment;   
if (!contains)  return _currentSegment;   
if (!_hasNextSegment)  return _currentSegment;   
if (!_inputStart)  return _currentSegment;   
if (!_segments)  return _currentSegment;   
if (!closed)  return _currentSegment;   
if (!hasNext)  return _currentSegment;   
if (!hasNextSegment)  return _currentSegment;   
if (!_inputBuffer)  return _currentSegment;   
if (!segments)  return _currentSegment;   
if (!hasInput)  return _currentSegment;   
if (!_hasBuffer)  return _currentSegment;   
if (!_hasResults)  return _currentSegment;   
if (!_hasInput)  return _currentSegment;   
if (!_hasChars)  return _currentSegment;   
if (!_hasMoreSegments)  return _currentSegment;   
if (!_closed)  return _currentSegment;   
if (!(!_hasSegments)  return _currentSegment;   
if (!containsSegment)  return _currentSegment;   
if (!empty)  return _currentSegment;   
if (! _hasNextSegment)  return _currentSegment;   
if (!containsCurrentSegment)  return _currentSegment;   
if (! _inputStart)  return _currentSegment;   
if (!_hasError)  return _currentSegment;   
if (!hasNoSegments)  return _currentSegment;   
if (!containsAll)  return _currentSegment;   
if (!_resultArray)  return _currentSegment;   
if (!open)  return _currentSegment;   
if (!_firstSegment)  return _currentSegment;   
if (! _hasNext)  return _currentSegment;   
if (! hasSegments)  return _currentSegment;   
if (!textBuffer)  return _currentSegment;   
if (!_isClosed)  return _currentSegment;   
if (!_hasInputs)  return _currentSegment;   
if (!_done)  return _currentSegment;   
if (! _hasText)  return _currentSegment;   
if (! _segments)  return _currentSegment;   
if (!containsText)  return _currentSegment;   
if (!_hasContent)  return _currentSegment;   
if (!_hasContent)  return _currentSegment;   
if (!_start)  return _currentSegment;   
if (!_inText)  return _currentSegment;   
if (!_isEmpty)  return _currentSegment;   
if (!contentsAsArray)  return _currentSegment;   
if (!exists)  return _currentSegment;   
if (!_buffer)  return _currentSegment;   
if (!_hasLines)  return _currentSegment;   
if (!chunks)  return _currentSegment;   
if (!hasCurrentSegment)  return _currentSegment;   
if (!hasBuffer)  return _currentSegment;   
if (!_hasTokens)  return _currentSegment;   
if (!_complete)  return _currentSegment;   
if (!hasContent)  return _currentSegment;   
if (!_hasSplits)  return _currentSegment;   
if (!_hasContents)  return _currentSegment;   
if (!_isDone)  return _currentSegment;   
if (!_hasChunks)  return _currentSegment;   
if (!_hasStrings)  return _currentSegment;   
if (!_lastSegment)  return _currentSegment;   
if (!_hasParts)  return _currentSegment;   
if (! _inputBuffer)  return _currentSegment;   
if (!_caseSensitive)  return _currentSegment;   
if (!_open)  return _currentSegment;   
if (!_haveSegments)  return _currentSegment;   
if (! _hasMoreSegments)  return _currentSegment;   
if (!_inputEnd)  return _currentSegment;   
if (!_hasString)  return _currentSegment;   
if (!hasData)  return _currentSegment;   
if (!_hasEmpty)  return _currentSegment;   
if (!_hasSections)  return _currentSegment;   
if (!_finished)  return _currentSegment;   
if (!_empty)  return _currentSegment;   
if (!isValid)  return _currentSegment;   
if (!_end)  return _currentSegment;   
if (!containsAnySegments)  return _currentSegment;   
if (!isActive)  return _currentSegment;   
if (!isLastSegment)  return _currentSegment;   
if (! _closed)  return _currentSegment;   
if (!hasKey)  return _currentSegment;   
if (!_eof)  return _currentSegment;   
if (!_isFirstSegment)  return _currentSegment;   
if (!hasContent)  return _currentSegment;   
if (!hasChars)  return _currentSegment;   
if (! (_hasSegments)  return _currentSegment;   
if (!_hasElements)  return _currentSegment;   
if (!currentSegment)  return _currentSegment;   
if (!_hasData)  return _currentSegment;   
if (! _hasInput)  return _currentSegment;   
if (!_inQuotes)  return _currentSegment;   
if (!_completed)  return _currentSegment;   
if (!hasAnySegments)  return _currentSegment;   
if (!(_hasSegment)  return _currentSegment;   
if (!containsAnySegment)  return _currentSegment;   
if (! (!_hasSegments)  return _currentSegment;   
if (!_isActive)  return _currentSegment;   
if (!_hasBytes)  return _currentSegment;   
if (!_resultString)  return _currentSegment;   
if (!_inputDone)  return _currentSegment;   
if (!isDone)  return _currentSegment;   
if (!done)  return _currentSegment;   
if (!_buffered)  return _currentSegment;   
if (!hasResults)  return _currentSegment;   
if (!_hasItems)  return _currentSegment;   
if (! _buffer)  return _currentSegment;   
if (! _resultArray)  return _currentSegment;   
if (! _hasError)  return _currentSegment;   
if (!containsAny)  return _currentSegment;   
if (! _hasContent)  return _currentSegment;   
if (!hasEmptySegments)  return _currentSegment;   
if (!_hasData)  return _currentSegment;   
if (! _hasChars)  return _currentSegment;   
if (!_hasValue)  return _currentSegment;   
if (!_hasOutput)  return _currentSegment;   
if (!Lazy)  return _currentSegment;   
if (!containsString)  return _currentSegment;   
if (!HasSegments)  return _currentSegment;   
if (! _hasResults)  return _currentSegment;   
if (!_hasStarted)  return _currentSegment;   
if (! !_hasSegment)  return _currentSegment;   
if (! isEmpty)  return _currentSegment;   
if (!_hasMore)  return _currentSegment;   
if (!_hasDelimiter)  return _currentSegment;   
if (! _hasBuffer)  return _currentSegment;   
if (!_segment)  return _currentSegment;   
if (!_hasSeparator)  return _currentSegment;   
if (!isFirstSegment)  return _currentSegment;   
if (!_first)  return _currentSegment;   
if (!hasMoreSegments)  return _currentSegment;   
if (!_hasChildren)  return _currentSegment;   
if (!_isValid)  return _currentSegment;   
if (!containsSeparator)  return _currentSegment;   
if (!_hasSeg)  return _currentSegment;   
if (!hasOutput)  return _currentSegment;   
if (!StringUtil.isEmpty)  return _currentSegment;   
if (! _inText)  return _currentSegment;   
if (!IsEmpty)  return _currentSegment;   
if (! _isClosed)  return _currentSegment;   
if (!_hasFiles)  return _currentSegment;   
if (!containsSegments)  return _currentSegment;   
if (!this.isClosed)  return _currentSegment;   
if (!isEnd)  return _currentSegment;   
if (!_hasCharacters)  return _currentSegment;   
if (!hasNext)  return _currentSegment;   
if (!_hasMoreSegment)  return _currentSegment;   
if (!_inSegment)  return _currentSegment;   
if (!_hasNext)  return _currentSegment;   
if (!(_currentSegment)  return _currentSegment;   
if (!_ignoreCase)  return _currentSegment;   
if (!containsBuffer)  return _currentSegment;   
if (! _firstSegment)  return _currentSegment;   
if (!_hasComponents)  return _currentSegment;   
if (!tail)  return _currentSegment;   
if (!_singleSegment)  return _currentSegment;   
if (! _isEmpty)  return _currentSegment;   
if (!containsLastSegment)  return _currentSegment;   
if (!hasRemaining)  return _currentSegment;   
if (!has_segments)  return _currentSegment;   
if (!init)  return _currentSegment;   
if (!_isEnd)  return _currentSegment;   
if (!_hasMerged)  return _currentSegment;   
if (! _start)  return _currentSegment;   
if (!hasValue)  return _currentSegment;   
if (!_haveSegment)  return _currentSegment;   
if (!hasNoSegment)  return _currentSegment;   
if (!_hasSubstring)  return _currentSegment;   
if (!_active)  return _currentSegment;   
if (!_HasSegments)  return _currentSegment;   
if (!found)  return _currentSegment;   
if (!hasMoreSegments)  return _currentSegment;   
if (! _hasContent)  return _currentSegment;   
if (! _done)  return _currentSegment;   
if (!containsEnd)  return _currentSegment;   
if (!_nextSegment)  return _currentSegment;   
if (!lenient)  return _currentSegment;   
if (! _hasInputs)  return _currentSegment;   
if (!nextSegment)  return _currentSegment;   
if (! _hasData)  return _currentSegment;   
if (!_inputStarted)  return _currentSegment;   
if (!hasAllSegments)  return _currentSegment;   
if (!null)  return _currentSegment;   
if (!hasEmptySegment)  return _currentSegment;   
if (!containsCharacter)  return _currentSegment;   
if (!eof)  return _currentSegment;   
if (!_textBuffer)  return _currentSegment;   
if (!_last)  return _currentSegment;   
if (!hasInputs)  return _currentSegment;   
if (!._hasSegments)  return _currentSegment;   
if (!noSegment)  return _currentSegment;   
if (!_hasSyntax)  return _currentSegment;   
if (!_read)  return _currentSegment;   
if (!firstSegment)  return _currentSegment;   
if (!_hasEscaped)  return _currentSegment;   
if (!_parts)  return _currentSegment;   
if (!_hasToken)  return _currentSegment;   
if (!reset)  return _currentSegment;   
if (!_noSegment)  return _currentSegment;   
if (! _inputEnd)  return _currentSegment;   
if (! _hasTokens)  return _currentSegment;   
if (!parts)  return _currentSegment;   
if (!isAtEnd)  return _currentSegment;   
if (!isDirty)  return _currentSegment;   
if (! _resultString)  return _currentSegment;   
if (!lazy)  return _currentSegment;   
if (!_chars)  return _currentSegment;   
if (!isDirectory)  return _currentSegment;   
if (! _complete)  return _currentSegment;   
if (!_hasGroups)  return _currentSegment;   
if (! _finished)  return _currentSegment;   
if (! _hasLines)  return _currentSegment;   
if (!this)  return _currentSegment;   
if (!_hasResult)  return _currentSegment;   
if (! _open)  return _currentSegment;   
if (!isPresent)  return _currentSegment;   
if (!_bufferIsEmpty)  return _currentSegment;   
if (!_state)  return _currentSegment;   
if (!active)  return _currentSegment;   
if (!isEOF)  return _currentSegment;   
if (!hasStarted)  return _currentSegment;   
if (!start)  return _currentSegment;   
if (!_parsed)  return _currentSegment;   
if (!collapse)  return _currentSegment;   
if (!read)  return _currentSegment;   
if (!_partial)  return _currentSegment;   
if (!_isLast)  return _currentSegment;   
if (!contents)  return _currentSegment;   
if (!_initialized)  return _currentSegment;   
if (!_local)  return _currentSegment;   
if (!length)  return _currentSegment;   
if (! _hasParts)  return _currentSegment;   
if (!hasSeparator)  return _currentSegment;   
if (! _lastSegment)  return _currentSegment;   
if (!_hasLocal)  return _currentSegment;   
if (!_hasRemaining)  return _currentSegment;   
if (!_hasPath)  return _currentSegment;   
if (!_inputString)  return _currentSegment;   
if (!_hasMore)  return _currentSegment;   
if (!_hasSegments)  return  null;   
if (!_hasSegments)  return  _currentSegment;   
if (!_hasSegments)  return  _resultArray;   
if (!_hasSegments)  return  _resultString;   
if (!_hasSegments)  return  _inputBuffer;   
if (!_hasSegments)  return  contentsAsArray();   
if (!_hasSegments)  return  contentsAsArray;   
if (!_hasSegments)  return  _resultBuffer;   
if (!_hasSegments)  return  _buffer;   
if (!_hasSegments)  return  EMPTY_STRING;   
if (!_hasSegments)  return  "";   
if (!_hasSegments)  return  false;   
if (!_hasSegments)  return  EMPTY;   
if (!_hasSegments)  return  _outputBuffer;   
if (!_hasSegments)  return  _result;   
if (!_hasSegments)  return  EMPTY_ARRAY;   
if (!_hasSegments)  return  _currentText;   
if (!_hasSegments)  return  _resultSegment;   
if (!_hasSegments)  return  -1;   
if (!_hasSegments)  return  0;   
if (!_hasSegments)  return  [];   
if (!_hasSegments)  return  _defaultSegment;   
if (!_hasSegments)  return  _inputString;   
if (!_hasSegments)  return  contentsAsString();   
if (!_hasSegments)  return  contents;   
if (!_hasSegments)  return  _content;   
if (!_hasSegments)  return  _segments;   
if (!_hasSegments)  return  _currentValue;   
if (!_hasSegments)  return  _currentElement;   
if (!_hasSegments)  return  "";;   
if (!_hasSegments)  return  _lastSegment;   
if (!_hasSegments)  return  textBuffer;   
if (!_hasSegments)  return  _emptyBuffer;   
if (!_hasSegments)  return  EMPTY_BUFFER;   
if (!_hasSegments)  return  contentAsArray();   
if (!_hasSegments)  return  '';   
if (!_hasSegments)  return  _stringBuffer;   
if (!_hasSegments)  return  contentsAsString;   
if (!_hasSegments)  return  nil;   
if (!_hasSegments)  return  NULL;   
if (!_hasSegments)  return  new char[];   
if (!_hasSegments)  return  empty;   
if (!_hasSegments)  return  undefined;   
if (!_hasSegments)  return  _nullSegment;   
if (!_hasSegments)  return  _textBuffer;   
if (!_hasSegments)  return  _currentSegments;   
if (!_hasSegments)  return  _string;   
if (!_hasSegments)  return  _currentIndex;   
if (!_hasSegments)  return  _inputSegment;   
if (!_hasSegments)  return  _initialSegment;   
if (!_hasSegments)  return  _nullBuffer;   
if (!_hasSegments)  return  _emptySegment;   
if (!_hasSegments)  return  null;;   
if (!_hasSegments)  return  _delimiter;   
if (!_hasSegments)  return  _currentToken;   
if (!_hasSegments)  return  _remainingSegments;   
if (!_hasSegments)  return  _chars;   
if (!_hasSegments)  return  _currentPosition;   
if (!_hasSegments)  return  _currentPath;   
if (!_hasSegments)  return  this;   
if (!_hasSegments)  return  _currentTextBuffer;   
if (!_hasSegments)  return  _tempBuffer;   
if (!_hasSegments)  return  _curSegment;   
if (!_hasSegments)  return  contentAsArray;   
if (!_hasSegments)  return  _resultStringArray;   
if (!_hasSegments)  return  _segment;   
if (!_hasSegments)  return  buffer;   
if (!_hasSegments)  return  _inputStart;   
if (!_hasSegments)  return  _input;   
if (!_hasSegments)  return  _data;   
if (!_hasSegments)  return  array;   
if (!_hasSegments)  return  _results;   
if (!_hasSegments)  return  _currentChunk;   
if (!_hasSegments)  return  _currSegment;   
if (!_hasSegments)  return  _endSegment;   
if (!_hasSegments)  return  _previousSegment;   
if (!_hasSegments)  return  currentSegment;   
if (!_hasSegments)  return  _eof;   
if (!_hasSegments)  return  _output;   
if (!_hasSegments)  return  _segmentBuffer;   
if (!_hasSegments)  return  chars;   
if (!_hasSegments)  return  _contentBuffer;   
if (!_hasSegments)  return  _remainingSegment;   
if (!_hasSegments)  return  StringUtil;   
if (!_hasSegments)  return  String;   
if (!_hasSegments)  return  _outputSegment;   
if (!_hasSegments)  return  _currentBuffer;   
if (!_hasSegments)  return  _nextSegment;   
if (!_hasSegments)  return  [];;   
if (!_hasSegments)  return  _resultStrings;   
if (!_hasSegments)  return  true;   
if (!_hasSegments)  return  _currentString;   
if (!_hasSegments)  return  _resultCharArray;   
if (!_hasSegments)  return  [_currentSegment;   
if (!_hasSegments)  return  contentsAsCharArray;   
if (!_hasSegments)  return  '';;   
if (!_hasSegments)  return  emptyBuffer;   
if (!_hasSegments)  return  super;   
if (!_hasSegments)  return  _segmentArray;   
if (!_hasSegments)  return  _resultObject;   
if (!_hasSegments)  return  _strings;   
if (!_hasSegments)  return  EMPTYSTRING;   
if (!_hasSegments)  return  _finalSegment;   
if (!_hasSegments)  return  _inputArray;   
if (!_hasSegments)  return  contentsArray;   
if (!_hasSegments)  return  _buf;   
if (!_hasSegments)  return  _completedSegment;   
if (!_hasSegments)  return  _arrayBuffer;   
if (!_hasSegments)  return  _resultResult;   
if (!_hasSegments)  return  _currentElement;   
if (!_hasSegments)  return  _chunks;   
if (!_hasSegments)  return  _defaultBuffer;   
if (!_hasSegments)  return  _currentSection;   
if (!_hasSegments)  return  void;   
if (!_hasSegments)  return  bytes;   
if (!_hasSegments)  return  _contents;   
if (!_hasSegments)  return  _currentToken;   
if (!_hasSegments)  return  _dataBuffer;   
if (!_hasSegments)  return  _parts;   
if (!_hasSegments)  return  _currentRow;   
if (!_hasSegments)  return  _originalSegment;   
if (!_hasSegments)  return  _currentCharacter;   
if (!_hasSegments)  return  characters;   
if (!_hasSegments)  return  _currentObject;   
if (!_hasSegments)  return  _currentLine;   
if (!_hasSegments)  return  _currentItem;   
if (!_hasSegments)  return  _"";   
if (!_hasSegments)  return  _firstSegment;   
if (!_hasSegments)  return  _resultBytes;   
if (!_hasSegments)  return  ContentsAsArray;   
if (!_hasSegments)  return  _inputEnd;   
if (!_hasSegments)  return  _initialValue;   
if (!_hasSegments)  return  _emptyString;   
if (!_hasSegments)  return  _charBuffer;   
if (!_hasSegments)  return  _resultData;   
if (!_hasSegments)  return  _separator;   
if (!_hasSegments)  return  []byte;   
if (!_hasSegments)  return  _lines;   
if (!_hasSegments)  return  _completeSegment;   
if (!_hasSegments)  return  EMPTY_STR;   
if (!_hasSegments)  return  _array;   
if (!_hasSegments)  return  EMPTY_CHARS;   
if (!_hasSegments)  return  this.buffer;   
if (!_hasSegments)  return  _allSegments;   
if (!_hasSegments)  return  _startSegment;   
if (!_hasSegments)  return  _newSegment;   
if (!_hasSegments)  return  emptyString;   
if (!_hasSegments)  return  string;   
if (!_hasSegments)  return  _contentsAsArray;   
if (!_hasSegments)  return  _start;   
if (!_hasSegments)  return  _resultChunk;   
if (!_hasSegments)  return  _partialResult;   
if (!_hasSegments)  return  emptyArray;   
if (!_hasSegments)  return  _cursor;   
if (!_hasSegments)  return  _collection;   
if (!_hasSegments)  return  _currentText;   
if (!_hasSegments)  return  _inputData;   
if (!_hasSegments)  return  _rawBuffer;   
if (!_hasSegments)  return  _remaining;   
if (!_hasSegments)  return  _resultAsArray;   
if (!_hasSegments)  return  _values;   
if (!_hasSegments)  return  _empty;   
if (!_hasSegments)  return  empty string;   
if (!_hasSegments)  return  _emptyResult;   
if (!_hasSegments)  return  _partialBuffer;   
if (!_hasSegments)  return  buf;   
if (!_hasSegments)  return  tail;   
if (!_hasSegments)  return  parts;   
if (!_hasSegments)  return  _elements;   
if (!_hasSegments)  return _currentSegment;   
if (!_hasSegments)  return  _strBuffer;   
if (!_hasSegments)  return  _targetSegment;   
if (!_hasSegments)  return  _selectedSegment;   
if (!_hasSegments)  return  _thisSegment;   
if (!_hasSegments)  return  Buffer;   
if (!_hasSegments)  return  _partialInput;   
if (!_hasSegments)  return  _resultCache;   
if (!_hasSegments)  return  _chunk;   
if (!_hasSegments)  return  _params;   
if (!_hasSegments)  return  empty array;   
if (!_hasSegments)  return  Array;   
if (!_hasSegments)  return  _activeSegment;   
if (!_hasSegments)  return  EMPTY_DATA;   
if (!_hasSegments)  return  StringUtil.EMPTY;   
if (!_hasSegments)  return  _defaultResult;   
if (!_hasSegments)  return  _resultEnd;   
if (!_hasSegments)  return  NONE;   
if (!_hasSegments)  return  empty_buffer;   
if (!_hasSegments)  return  _sourceBuffer;   
if (!_hasSegments)  return  _remainder;   
if (!_hasSegments)  return  _readBuffer;   
if (!_hasSegments)  return  CharBuffer;   
if (!_hasSegments)  return  content;   
if (!_hasSegments)  return  contentsAsArray();;   
if (!_hasSegments)  return  charBuffer;   
if (!_hasSegments)  return  _resultNull;   
if (!_hasSegments)  return  _resultEmpty;   
if (!_hasSegments)  return  data;   
if (!_hasSegments)  return  _defaultSegments;   
if (!_hasSegments)  return  results;   
if (!_hasSegments)  return  _resultStringBuilder;   
if (!_hasSegments)  return  None;   
if (!_hasSegments)  return  _currentContent;   
if (!_hasSegments)  return  _context;   
if (!_hasSegments)  return  _fallbackSegment;   
if (!_hasSegments)  return  _end;   
if (!_hasSegments)  return  _value;   
if (!_hasSegments)  return  TEXT_BUFFER;   
if (!_hasSegments)  return  stringBuffer;   
if (!_hasSegments)  return  _resultText;   
if (!_hasSegments)  return  _resultTail;   
if (!_hasSegments)  return  contentsAsBytes;   
if (!_hasSegments)  return  length;   
if (!_hasSegments)  return  contentsString;   
if (!_hasSegments)  return  !_currentSegment;   
if (!_hasSegments)  return  _inputRange;   
if (!_hasSegments)  return  _result[];   
if (!_hasSegments)  return  _resultStream;   
if (!_hasSegments)  return  _partial;   
if (!_hasSegments)  return  _resultCharacter;   
if (!_hasSegments)  return  _searchBuffer;   
if (!_hasSegments)  return  _resultChar;   
if (!_hasSegments)  return  _characterBuffer;   
if (!_hasSegments)  return  _resultChars;   
if (!_hasSegments)  return  EMPTY_TEXT;   
if (!_hasSegments)  return  charsBuffer;   
if (!_hasSegments)  return  StringUtils.EMPTY;   
if (!_hasSegments)  return  _part;   
if (!_hasSegments)  return  _position;   
if (!_hasSegments)  return  _resultSegments;   
if (!_hasSegments)  return  _state;   
if (!_hasSegments)  return  _baseBuffer;   
if (!_hasSegments)  return  _rootSegment;   
if (!_hasSegments)  return  EMPTY_CHAR;   
if (!_hasSegments)  return  _currentLineSegment;   
if (!_hasSegments)  return  _segmentString;   
if (!_hasSegments)  return  NO_SEGMENT;   
if (!_hasSegments)  return  char[].class;   
if (!_hasSegments)  return  _fileName;   
if (!_hasSegments)  return  _currentLine;   
if (!_hasSegments)  return  lines;   
if (!_hasSegments)  return  NO_RESULT;   
if (!_hasSegments)  return  _rawSegment;   
if (!_hasSegments)  return  EMPTY_BLOB;   
if (!_hasSegments)  return  _inSegment;   
if (!_hasSegments)  return  _rawText;   
if (!_hasSegments)  return  _currentChar;   
if (!_hasSegments)  return  _currentSeg;   
if (!_hasSegments)  return  _result;;   
if (!_hasSegments)  return  _getCurrentSegment;   
if (!_hasSegments)  return  null;   
if (!_hasSegments)  return  _currentSegment;   
if (!_hasSegments)  return  _resultArray;   
if (!_hasSegments)  return  _resultString;   
if (!_hasSegments)  return  _inputBuffer;   
if (!_hasSegments)  return  contentsAsArray();   
if (!_hasSegments)  return  contentsAsArray;   
if (!_hasSegments)  return  _resultBuffer;   
if (!_hasSegments)  return  _buffer;   
if (!_hasSegments)  return  EMPTY_STRING;   
if (!_hasSegments)  return  "";   
if (!_hasSegments)  return  false;   
if (!_hasSegments)  return  EMPTY;   
if (!_hasSegments)  return  _outputBuffer;   
if (!_hasSegments)  return  _result;   
if (!_hasSegments)  return  EMPTY_ARRAY;   
if (!_hasSegments)  return  _currentText;   
if (!_hasSegments)  return  _resultSegment;   
if (!_hasSegments)  return  -1;   
if (!_hasSegments)  return  0;   
if (!_hasSegments)  return  [];   
if (!_hasSegments)  return  _defaultSegment;   
if (!_hasSegments)  return  _inputString;   
if (!_hasSegments)  return  contentsAsString();   
if (!_hasSegments)  return  contents;   
if (!_hasSegments)  return  _content;   
if (!_hasSegments)  return  _segments;   
if (!_hasSegments)  return  _currentValue;   
if (!_hasSegments)  return  _currentElement;   
if (!_hasSegments)  return  "";;   
if (!_hasSegments)  return  _lastSegment;   
if (!_hasSegments)  return  textBuffer;   
if (!_hasSegments)  return  _emptyBuffer;   
if (!_hasSegments)  return  EMPTY_BUFFER;   
if (!_hasSegments)  return  contentAsArray();   
if (!_hasSegments)  return  '';   
if (!_hasSegments)  return  _stringBuffer;   
if (!_hasSegments)  return  contentsAsString;   
if (!_hasSegments)  return  nil;   
if (!_hasSegments)  return  NULL;   
if (!_hasSegments)  return  new char[];   
if (!_hasSegments)  return  empty;   
if (!_hasSegments)  return  undefined;   
if (!_hasSegments)  return  _nullSegment;   
if (!_hasSegments)  return  _textBuffer;   
if (!_hasSegments)  return  _currentSegments;   
if (!_hasSegments)  return  _string;   
if (!_hasSegments)  return  _currentIndex;   
if (!_hasSegments)  return  _inputSegment;   
if (!_hasSegments)  return  _initialSegment;   
if (!_hasSegments)  return  _nullBuffer;   
if (!_hasSegments)  return  _emptySegment;   
if (!_hasSegments)  return  null;;   
if (!_hasSegments)  return  _delimiter;   
if (!_hasSegments)  return  _currentToken;   
if (!_hasSegments)  return  _remainingSegments;   
if (!_hasSegments)  return  _chars;   
if (!_hasSegments)  return  _currentPosition;   
if (!_hasSegments)  return  _currentPath;   
if (!_hasSegments)  return  this;   
if (!_hasSegments)  return  _currentTextBuffer;   
if (!_hasSegments)  return  _tempBuffer;   
if (!_hasSegments)  return  _curSegment;   
if (!_hasSegments)  return  contentAsArray;   
if (!_hasSegments)  return  _resultStringArray;   
if (!_hasSegments)  return  _segment;   
if (!_hasSegments)  return  buffer;   
if (!_hasSegments)  return  _inputStart;   
if (!_hasSegments)  return  _input;   
if (!_hasSegments)  return  _data;   
if (!_hasSegments)  return  array;   
if (!_hasSegments)  return  _results;   
if (!_hasSegments)  return  _currentChunk;   
if (!_hasSegments)  return  _currSegment;   
if (!_hasSegments)  return  _endSegment;   
if (!_hasSegments)  return  _previousSegment;   
if (!_hasSegments)  return  currentSegment;   
if (!_hasSegments)  return  _eof;   
if (!_hasSegments)  return  _output;   
if (!_hasSegments)  return  _segmentBuffer;   
if (!_hasSegments)  return  chars;   
if (!_hasSegments)  return  _contentBuffer;   
if (!_hasSegments)  return  _remainingSegment;   
if (!_hasSegments)  return  StringUtil;   
if (!_hasSegments)  return  String;   
if (!_hasSegments)  return  _outputSegment;   
if (!_hasSegments)  return  _currentBuffer;   
if (!_hasSegments)  return  _nextSegment;   
if (!_hasSegments)  return  [];;   
if (!_hasSegments)  return  _resultStrings;   
if (!_hasSegments)  return  true;   
if (!_hasSegments)  return  _currentString;   
if (!_hasSegments)  return  _resultCharArray;   
if (!_hasSegments)  return  [_currentSegment;   
if (!_hasSegments)  return  contentsAsCharArray;   
if (!_hasSegments)  return  '';;   
if (!_hasSegments)  return  emptyBuffer;   
if (!_hasSegments)  return  super;   
if (!_hasSegments)  return  _segmentArray;   
if (!_hasSegments)  return  _resultObject;   
if (!_hasSegments)  return  _strings;   
if (!_hasSegments)  return  EMPTYSTRING;   
if (!_hasSegments)  return  _finalSegment;   
if (!_hasSegments)  return  _inputArray;   
if (!_hasSegments)  return  contentsArray;   
if (!_hasSegments)  return  _buf;   
if (!_hasSegments)  return  _completedSegment;   
if (!_hasSegments)  return  _arrayBuffer;   
if (!_hasSegments)  return  _resultResult;   
if (!_hasSegments)  return  _currentElement;   
if (!_hasSegments)  return  _chunks;   
if (!_hasSegments)  return  _defaultBuffer;   
if (!_hasSegments)  return  _currentSection;   
if (!_hasSegments)  return  void;   
if (!_hasSegments)  return  bytes;   
if (!_hasSegments)  return  _contents;   
if (!_hasSegments)  return  _currentToken;   
if (!_hasSegments)  return  _dataBuffer;   
if (!_hasSegments)  return  _parts;   
if (!_hasSegments)  return  _currentRow;   
if (!_hasSegments)  return  _originalSegment;   
if (!_hasSegments)  return  _currentCharacter;   
if (!_hasSegments)  return  characters;   
if (!_hasSegments)  return  _currentObject;   
if (!_hasSegments)  return  _currentLine;   
if (!_hasSegments)  return  _currentItem;   
if (!_hasSegments)  return  _"";   
if (!_hasSegments)  return  _firstSegment;   
if (!_hasSegments)  return  _resultBytes;   
if (!_hasSegments)  return  ContentsAsArray;   
if (!_hasSegments)  return  _inputEnd;   
if (!_hasSegments)  return  _initialValue;   
if (!_hasSegments)  return  _emptyString;   
if (!_hasSegments)  return  _charBuffer;   
if (!_hasSegments)  return  _resultData;   
if (!_hasSegments)  return  _separator;   
if (!_hasSegments)  return  []byte;   
if (!_hasSegments)  return  _lines;   
if (!_hasSegments)  return  _completeSegment;   
if (!_hasSegments)  return  EMPTY_STR;   
if (!_hasSegments)  return  _array;   
if (!_hasSegments)  return  EMPTY_CHARS;   
if (!_hasSegments)  return  this.buffer;   
if (!_hasSegments)  return  _allSegments;   
if (!_hasSegments)  return  _startSegment;   
if (!_hasSegments)  return  _newSegment;   
if (!_hasSegments)  return  emptyString;   
if (!_hasSegments)  return  string;   
if (!_hasSegments)  return  _contentsAsArray;   
if (!_hasSegments)  return  _start;   
if (!_hasSegments)  return  _resultChunk;   
if (!_hasSegments)  return  _partialResult;   
if (!_hasSegments)  return  emptyArray;   
if (!_hasSegments)  return  _cursor;   
if (!_hasSegments)  return  _collection;   
if (!_hasSegments)  return  _currentText;   
if (!_hasSegments)  return  _inputData;   
if (!_hasSegments)  return  _rawBuffer;   
if (!_hasSegments)  return  _remaining;   
if (!_hasSegments)  return  _resultAsArray;   
if (!_hasSegments)  return  _values;   
if (!_hasSegments)  return  _empty;   
if (!_hasSegments)  return  empty string;   
if (!_hasSegments)  return  _emptyResult;   
if (!_hasSegments)  return  _partialBuffer;   
if (!_hasSegments)  return  buf;   
if (!_hasSegments)  return  tail;   
if (!_hasSegments)  return  parts;   
if (!_hasSegments)  return  _elements;   
if (!_hasSegments)  return _currentSegment;   
if (!_hasSegments)  return  _strBuffer;   
if (!_hasSegments)  return  _targetSegment;   
if (!_hasSegments)  return  _selectedSegment;   
if (!_hasSegments)  return  _thisSegment;   
if (!_hasSegments)  return  Buffer;   
if (!_hasSegments)  return  _partialInput;   
if (!_hasSegments)  return  _resultCache;   
if (!_hasSegments)  return  _chunk;   
if (!_hasSegments)  return  _params;   
if (!_hasSegments)  return  empty array;   
if (!_hasSegments)  return  Array;   
if (!_hasSegments)  return  _activeSegment;   
if (!_hasSegments)  return  EMPTY_DATA;   
if (!_hasSegments)  return  StringUtil.EMPTY;   
if (!_hasSegments)  return  _defaultResult;   
if (!_hasSegments)  return  _resultEnd;   
if (!_hasSegments)  return  NONE;   
if (!_hasSegments)  return  empty_buffer;   
if (!_hasSegments)  return  _sourceBuffer;   
if (!_hasSegments)  return  _remainder;   
if (!_hasSegments)  return  _readBuffer;   
if (!_hasSegments)  return  CharBuffer;   
if (!_hasSegments)  return  content;   
if (!_hasSegments)  return  contentsAsArray();;   
if (!_hasSegments)  return  charBuffer;   
if (!_hasSegments)  return  _resultNull;   
if (!_hasSegments)  return  _resultEmpty;   
if (!_hasSegments)  return  data;   
if (!_hasSegments)  return  _defaultSegments;   
if (!_hasSegments)  return  results;   
if (!_hasSegments)  return  _resultStringBuilder;   
if (!_hasSegments)  return  None;   
if (!_hasSegments)  return  _currentContent;   
if (!_hasSegments)  return  _context;   
if (!_hasSegments)  return  _fallbackSegment;   
if (!_hasSegments)  return  _end;   
if (!_hasSegments)  return  _value;   
if (!_hasSegments)  return  TEXT_BUFFER;   
if (!_hasSegments)  return  stringBuffer;   
if (!_hasSegments)  return  _resultText;   
if (!_hasSegments)  return  _resultTail;   
if (!_hasSegments)  return  contentsAsBytes;   
if (!_hasSegments)  return  length;   
if (!_hasSegments)  return  contentsString;   
if (!_hasSegments)  return  !_currentSegment;   
if (!_hasSegments)  return  _inputRange;   
if (!_hasSegments)  return  _result[];   
if (!_hasSegments)  return  _resultStream;   
if (!_hasSegments)  return  _partial;   
if (!_hasSegments)  return  _resultCharacter;   
if (!_hasSegments)  return  _searchBuffer;   
if (!_hasSegments)  return  _resultChar;   
if (!_hasSegments)  return  _characterBuffer;   
if (!_hasSegments)  return  _resultChars;   
if (!_hasSegments)  return  EMPTY_TEXT;   
if (!_hasSegments)  return  charsBuffer;   
if (!_hasSegments)  return  StringUtils.EMPTY;   
if (!_hasSegments)  return  _part;   
if (!_hasSegments)  return  _position;   
if (!_hasSegments)  return  _resultSegments;   
if (!_hasSegments)  return  _state;   
if (!_hasSegments)  return  _baseBuffer;   
if (!_hasSegments)  return  _rootSegment;   
if (!_hasSegments)  return  EMPTY_CHAR;   
if (!_hasSegments)  return  _currentLineSegment;   
if (!_hasSegments)  return  _segmentString;   
if (!_hasSegments)  return  NO_SEGMENT;   
if (!_hasSegments)  return  char[].class;   
if (!_hasSegments)  return  _fileName;   
if (!_hasSegments)  return  _currentLine;   
if (!_hasSegments)  return  lines;   
if (!_hasSegments)  return  NO_RESULT;   
if (!_hasSegments)  return  _rawSegment;   
if (!_hasSegments)  return  EMPTY_BLOB;   
if (!_hasSegments)  return  _inSegment;   
if (!_hasSegments)  return  _rawText;   
if (!_hasSegments)  return  _currentChar;   
if (!_hasSegments)  return  _currentSeg;   
if (!_hasSegments)  return  _result;;   
if (!_hasSegments)  return  _getCurrentSegment;   
if(_hasSegments==null){return  null;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentsAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultString;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  "";;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_STRING;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return [];;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_ARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  textBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  false;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  [];} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  [];;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  "";} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_BUFFER;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null; };} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  this;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return ;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  new char[];} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  empty;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  false;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _buffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _result;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  '';;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTYSTRING;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return null;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  NULL;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  buffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  undefined;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  -1;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  array;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  0;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return [];} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return _currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  getTextBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _inputString;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  char[]{};} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_CHARS;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return _resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _outputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  array();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultStringArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  TEXT_BUFFER;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  string;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  getTextBuffer();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return   null;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  super;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  nil;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  getTextBuffer();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  char[];} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentsAsString();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  chars;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  emptyString;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _segments;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  true;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null; ;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _content;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  StringUtil;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentText;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _nullBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  TEXT;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  results;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _stringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  NO_SEGMENT;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _chars;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentsAsCharArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  emptyBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  charsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _string;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _textBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return "";;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_STR;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  emptyArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  getContentAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_TEXT;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_DATA;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentsAsString();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  characters;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  '';} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  charactersAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return _resultString;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _defaultSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _emptyBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  charsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  String;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null ;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _result;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  parts;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return ContentsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_CHAR;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  {};;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _nullSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _data;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  StringUtil.EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  ContentsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null;};} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  StringUtils.EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  textBuffer();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  charactersAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  CONTENT;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  segmentsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  textBuffer();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentElement;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  segmentsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentTextBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  empty;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  true;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultCharArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  void;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  new char;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  buf;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _contentAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _results;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_BUFF;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentToken;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _contentsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null;};} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return _inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _array;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  "";};} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  CharBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  charArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  Buffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null ;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  empty array;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  bytes;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  char[].class;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  this.buffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  empty string;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  resultsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_BLOB;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _initialSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  charsAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  tail;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  [_currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _tempBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  0;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  StringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  NONE;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return ContentsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _strings;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contents;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  new String[];} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  concat;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _lastSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  empty_buffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _buf;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _input;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultStrings;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  charactersAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return   null;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  "");;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return ; };} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _arrayBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contents();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _inputStart;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  emptyCharArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  toString();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  initialSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentsAsArray(){;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  data;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  ArrayList;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentPath;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  Array;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentValue;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  lines;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _"";} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  ContentsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return null;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _null;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultObject;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _emptySegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null ;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return "";} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null; ;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  ;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  dataAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  CONTENTS;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _inputSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  resultsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _segmentBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultCache;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  this;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentElement;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  return null;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _delimiter;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _segmentArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _parts;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _string;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  emptyTextBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  children;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _resultResult;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  String.valueOf;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTYCHAR;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  partsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return ("");;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  dataAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  getContentAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  segments;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null};} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  Collections;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _output;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTYCHARARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _contentBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTYSTRING;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  nextSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  resultsAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentPosition;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _inputArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  getBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentSegments;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  Array.prototype;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  charBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  new char [];} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return contentsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _lines;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  ""; };} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  empty String;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  nil;;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  null;  ;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _currentString;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  readBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  UTF_8;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return ();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  nothing;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  segmentsAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  result;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  Collections.emptyList;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  contentsAsArray()*;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  NO_RESULT;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return ;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  _curSegment;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  &_resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return  EMPTY_CONTENT;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){return ;} if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=1; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=Boolean; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=boolean; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=false; return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=loadSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true; return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true;}; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=trueAST#assignment_expression#Right; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true; }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true;; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=  true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contentsAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true}; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=readSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contentsAsArray()==null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=yes; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true  return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true ; return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=TRUE; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=createSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contentsAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=hasSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=false; }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=findSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= segments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true;  }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=2; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return this; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return ""; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true ;; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=loadSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=beginSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= 1; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=isSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=nextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=bool; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=segments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=this; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=textBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= Boolean; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=length()==0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true} return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=new boolean; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=True; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=countSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=detectSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=getSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=this.hasSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= false; return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=makeSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=fillSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true ; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=addSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=initSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=  false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=size()==0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=parts; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=containsSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=beginSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=Boolean.TRUE; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=trueAST#assignment_expression#Right return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=buildSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return []; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= readSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return 0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=createSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contentsAsArray()==false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=isSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contentsAsArray()!=null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true ; }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true};; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contentsAsArray()==true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= boolean; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= 0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=!!; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return EMPTY; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=containsSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= hasSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=inSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=int; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=3; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=inputStart >= 0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contains; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return ''; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true   return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=addSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=load; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=length()>0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=getBoolean; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= segments != null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true;}; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=false; return; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=length() > 0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=sb!=null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=readSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=size()>0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=findSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=moreSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= createSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true  }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=collectSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= Boolean.TRUE; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=openSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=createSegmentArray; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=parseSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=start; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= loadSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true     return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=loadText; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return String; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=appendSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=1024; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=len()==0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= TRUE; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true  ; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=    true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=hasSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true;;; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= makeSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=inputStart>=0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=new ArrayList; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=falseAST#assignment_expression#Right; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=appendSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=this._hasSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true;return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=getContentsAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true ; return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=size() > 0; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=hasText; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=sb; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=extractSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true;; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true; return; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=value; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=path; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=++; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return chars; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true ; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= getSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=checkSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=processSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=isHasSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=false;; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=Segments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true	; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=textBuffer!=null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=READ; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=startSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return NULL; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true} else; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contents; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=false  return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=12; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=false ; return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true;}; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contents()==null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=   true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true ;}; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; try; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true  return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=keys; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true ;; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=textBuffer != null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= this; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=10; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true, return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=chars; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=4; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= false; }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=file; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= findSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= segments!=null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=getHasSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=ls; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true ; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=sb==null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=length()==1; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true..; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=open; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=b; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= _hasText; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=isText; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=makeSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=size()==1; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; } else; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; segments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= nextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return undefined; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=createSegmentBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true,_currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=fetchSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true    return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return buffer; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true; return false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=trueAST#ternary_expression#Right; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=openSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return array; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=createSegmentList; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=_currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true  return; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true;  }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= textBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=engine.hasSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=nextSegments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true;   }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=textBuffer()==null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true|false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return StringUtil; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return string; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true;  return; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true} else; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=getSegments()==null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=loadTextBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true }; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=false; return false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=this.segments; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return empty; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true; return nil; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= contentsAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=isCurrentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true = true; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= contentsAsArray()==null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true       return null; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= _hasInput; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments= true; return ""; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true  return false; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=contentsAsArray().length; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=loadSegments(); } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=isTextBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=true ; return; } if (!_hasSegments)  return _currentSegment;   
if(_hasSegments==null){ _hasSegments=this.hasMoreSegments; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  "";;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return [];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STRING;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_ARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BUFFER;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  "";} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentsAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultArray;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return ;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultString;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  false;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYSTRING;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  '';;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  false;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NULL;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_CHARARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[] {};;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  -1;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  textBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[]{};;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  char[]{};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STRING;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  undefined;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  0;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  this;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return [];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[]{};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _nullBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  array();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _result;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return _resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_CHAR;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentSegment;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STR;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_CHARS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return   null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  char[0];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return "";;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _inputBuffer;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null ;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultStringArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_DATA;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  nil;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NO_SEGMENT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_TEXT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  array;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BUFF;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  '';} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _outputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _nullSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  TEXT_BUFFER;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;  };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return _resultString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _emptyBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return ; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  chars;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _result;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  (char[])null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _inputString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultBuffer;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  "";};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BLOB;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  StringUtils.EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  StringUtil;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  0;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;  ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  StringUtil.EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  char[];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  {};;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  TEXT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _stringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  true;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return null;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  true;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYCHAR;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultCharArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYSTRING;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  StringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  string;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  super;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  characters;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  void;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  ""; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYCHARARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_ARRAY;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [_resultString];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return   null;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  buf;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;   };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  getTextBuffer();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _textBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  getTextBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _"";} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  CharBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return _currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NONE;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _string;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _defaultSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BUFFER;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return ("");;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _initialValue;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  getTextBuffer();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return   "";} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _data;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NO_SEGMENTS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STR;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _chars;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  "");;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  return null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [_currentSegment];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  -1;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  INITIAL;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[](){};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BYTEARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  initialSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  results;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  scratch;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  char[].class;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_CHAR;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _initialSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty array;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_SEGMENT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return []; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyCharArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  super.getTextBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  Buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_TOKEN;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return "";} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charactersAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  bytes;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultResult;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  CONTENT_EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty string;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  textBuffer();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  textBuffer();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _buf;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STRINGS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _content;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultObject;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  String;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null  ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  String.valueOf("");} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _inputStart;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  nil;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _EMPTY_ARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new String[];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;AST#return_statement#Right;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultStrings;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  this.buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _EMPTY_STRING;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  data;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return _inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[] {};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultStringBuilder;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;} else;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentSegmentArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  []byte;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  return null;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NULL;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyStringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NO_RESULT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charsAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _delimiter;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  CharBuffer.EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [ ];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultCache;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _result[];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  defaultValue;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  INITIAL_SEGMENT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; } ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_TEXT;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  blank;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[]{};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NULL_ARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return [];};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_RESULT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  this.toString();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  DONE;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty_buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  {@code null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  this.textBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return   _resultString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _tempBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;..;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null};;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  Array;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  []; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _nullString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  stringToReturn;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYCHARACTERS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char [];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  initialBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  parts;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  CHARACTERS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new StringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new StringBuilder;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  getContentAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[]();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return ();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=textBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=""; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=nextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=chars; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=createSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new StringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=0; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new String; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=start; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new StringBuilder; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.valueOf; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=text; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0];; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=[]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=startSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=EMPTY; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contents; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=separator; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=true; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=textSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=beginSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=1; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=sb; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=string; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getNextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getTextBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getStringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=index; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=ByteBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= textBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=..; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=next; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=StringBuilder; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=inputStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=_buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=initSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new StringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=initialSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=document; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=begin; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=TextBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=charsBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= nextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=segment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=newchar; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=currentText; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=cbuf; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=initialValue; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=_inputStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=buf; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=makeSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=inputBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=DELIMITER; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=cursor; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=delimiter; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=separatorChar; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=TextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=input; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=StringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=super; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=toString; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=endSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= getTextBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new StringBuilder; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=readSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=content; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[1]; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=str; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=buildSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=TEXT; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return 0; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsString(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=value; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=length; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[1]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=startIndex; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=charBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=char[]{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=position; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0];; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new CharBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=bytes; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= this; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.valueOf(_inputStart); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char []{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.format; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new CharSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Integer.MAX_VALUE; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=key; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.valueOf(""); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= createSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this.buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[] {}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new ArrayList; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=_inputBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=defaultSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray(); return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{};; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=segments; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=tokenize; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.valueOf(_inputStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Contents; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= _inputStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= text; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=EMPTY_STRING; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=name; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new String[]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=end; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=addSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=INITIAL; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=''; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= _buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Array; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=false; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=pos; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=INITIAL_SEGMENT; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=tail; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=STRING; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= contentsAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=SEGMENT; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char []; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=parts; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getContentsAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=generateSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=lastSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {};; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=currentValue; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= start; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=textbuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= getTextBuffer(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=byte; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[1]; return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Segment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[_inputStart]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=_start; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=text(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=loadSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=allocateSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=""; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=c; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=substring; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray() return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; return; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=token; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Bytes; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this._currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=EOF; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getTextBuffer(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsString; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=chunk; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=textStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=[]; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=characters; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= String; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=parent; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.class; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray() return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= 0; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=resultString; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray()  return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=append; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=[]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new int; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=ch; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; return; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=START; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=startOfInput; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this.currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray().length; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getContentsAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=currentToken; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getTextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray() }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=DEFAULT_SEGMENT; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new String; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= "";; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=blob; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getStringSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[1];; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Contents.EMPTY; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=InputBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=firstSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=data; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=ContentsAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Integer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=toString(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=bufferSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new StringSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; return; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=b; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=findSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[]{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=stringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=lengthSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=words; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=1024; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char []{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new Segment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this.textBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=NewStringSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= EMPTY; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray(); }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray()  return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=chr; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new StringBuffer(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= StringUtil; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new TextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=BUFFER; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray(); return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  "";;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return [];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STRING;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_ARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BUFFER;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  "";} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentsAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultArray;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return ;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultString;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  false;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYSTRING;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  '';;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  false;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NULL;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_CHARARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[] {};;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  -1;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  textBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[]{};;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  char[]{};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STRING;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  undefined;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  0;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  this;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return [];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[]{};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _nullBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  array();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _result;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return _resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_CHAR;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentSegment;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STR;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_CHARS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return   null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  char[0];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return "";;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _inputBuffer;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null ;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultStringArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_DATA;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  nil;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NO_SEGMENT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_TEXT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  array;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BUFF;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  '';} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _outputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _nullSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  TEXT_BUFFER;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;  };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return _resultString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _emptyBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return ; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  chars;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _result;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  (char[])null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _inputString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultBuffer;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  "";};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BLOB;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  StringUtils.EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  StringUtil;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  0;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;  ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  StringUtil.EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  char[];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  {};;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  TEXT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _stringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  true;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return null;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  true;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYCHAR;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultCharArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYSTRING;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  StringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  string;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  super;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  characters;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  void;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  ""; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYCHARARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_ARRAY;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [_resultString];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return   null;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  buf;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;   };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  getTextBuffer();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _textBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  getTextBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _"";} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  CharBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return _currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NONE;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _string;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _defaultSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BUFFER;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return ("");;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _initialValue;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  getTextBuffer();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return   "";} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _data;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NO_SEGMENTS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STR;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _chars;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  "");;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  return null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charsAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [_currentSegment];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  -1;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  currentSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  INITIAL;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[](){};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_BYTEARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charsAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  initialSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  contentAsArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  results;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  scratch;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  char[].class;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_CHAR;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _initialSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty array;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_SEGMENT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return []; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyCharArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  super.getTextBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  Buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_TOKEN;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return "";} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charactersAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  bytes;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultResult;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  CONTENT_EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty string;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  textBuffer();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  textBuffer();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _buf;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_STRINGS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _content;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultObject;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  String;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null  ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  String.valueOf("");} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _inputStart;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultSegment;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  nil;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _EMPTY_ARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new String[];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;AST#return_statement#Right;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultStrings;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  this.buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _EMPTY_STRING;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  data;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return _inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[] {};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultStringBuilder;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;} else;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _currentSegmentArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  []byte;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  return null;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NULL;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  emptyStringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NO_RESULT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charsAsArray();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _delimiter;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  CharBuffer.EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  [ ];;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _resultCache;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _result[];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  defaultValue;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  INITIAL_SEGMENT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; } ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  charBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_TEXT;;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  blank;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[]{};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  NULL_ARRAY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return [];};} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  resultArray;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTY_RESULT;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  this.toString();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  DONE;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  empty_buffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  {@code null;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  this.textBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return   _resultString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _tempBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null;..;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  null};;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  Array;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _EMPTY;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  []; };} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  _nullString;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  stringToReturn;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  EMPTYCHARACTERS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char [];} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  initialBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  parts;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  CHARACTERS;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new StringBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new StringBuilder;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  getContentAsArray();} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  new char[]();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  inputBuffer;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return  ;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){return ();;} if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=textBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=""; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=nextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=chars; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=createSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new StringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=0; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new String; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=start; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new StringBuilder; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.valueOf; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=text; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0];; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=[]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=startSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=EMPTY; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contents; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=separator; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=true; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=textSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=beginSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=1; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=sb; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=string; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getNextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getTextBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getStringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=index; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=ByteBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= textBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=..; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=next; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=StringBuilder; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=inputStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=_buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=initSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new StringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=initialSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=document; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=begin; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=TextBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=charsBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= nextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=segment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=newchar; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=currentText; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=cbuf; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=initialValue; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=_inputStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=buf; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=makeSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=inputBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=DELIMITER; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=cursor; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=delimiter; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=separatorChar; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=TextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=input; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=StringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=super; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=toString; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=endSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= getTextBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new StringBuilder; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=readSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=content; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[1]; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=str; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=buildSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=TEXT; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; return 0; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsString(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=value; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=length; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[1]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=startIndex; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=charBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[0]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=char[]{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=position; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0];; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new CharBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=bytes; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= this; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.valueOf(_inputStart); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char []{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.format; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new CharSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Integer.MAX_VALUE; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=key; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.valueOf(""); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= createSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this.buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[] {}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new ArrayList; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=_inputBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=defaultSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray(); return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{};; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=segments; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=tokenize; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.valueOf(_inputStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Contents; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= _inputStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= text; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=EMPTY_STRING; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=name; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new String[]; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=end; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=addSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=INITIAL; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=''; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= _buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Array; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=false; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=pos; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=INITIAL_SEGMENT; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=tail; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=STRING; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= contentsAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=SEGMENT; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char []; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=parts; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getContentsAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=generateSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=lastSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {};; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=currentValue; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= start; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=textbuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= getTextBuffer(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=byte; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[1]; return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Segment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[_inputStart]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=_start; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=text(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=loadSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=allocateSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=""; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=c; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=substring; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray() return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; return; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=token; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Bytes; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this._currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=EOF; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getTextBuffer(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsString; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=chunk; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=textStart; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=[]; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=characters; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= String; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=parent; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=String.class; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray() return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= 0; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=resultString; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray()  return _resultArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=append; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=[]; }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= buffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new int; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[0]; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=ch; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= ""; return; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=START; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=startOfInput; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this.currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray().length; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getContentsAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=currentToken; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getTextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[]{}; return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray() }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=DEFAULT_SEGMENT; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new String; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= "";; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=blob; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=getStringSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[1];; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Contents.EMPTY; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=InputBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=firstSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=data; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=ContentsAsArray; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=Integer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=toString(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=bufferSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new StringSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new char[] {}; return; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentAsArray(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=b; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=findSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char[]{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=stringBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=lengthSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=words; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=1024; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= new char []{}; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new Segment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=this.textBuffer; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=NewStringSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= EMPTY; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray(); }; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray()  return null; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=chr; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new StringBuffer(); } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment= StringUtil; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=new TextSegment; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=BUFFER; } if (!_hasSegments)  return _currentSegment;   
if(_currentSegment==null){ _currentSegment=contentsAsArray(); return _currentSegment; } if (!_hasSegments)  return _currentSegment;   
if(contentsAsArray){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray()){ if (!_hasSegments)  return _currentSegment; {  
if(currentSegment != null){ if (!_hasSegments)  return _currentSegment; {  
if(false){ if (!_hasSegments)  return _currentSegment; {  
if(null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray()==null){ if (!_hasSegments)  return _currentSegment; {  
if(true){ if (!_hasSegments)  return _currentSegment; {  
if(isEmpty){ if (!_hasSegments)  return _currentSegment; {  
if(isClosed){ if (!_hasSegments)  return _currentSegment; {  
if(contentAsArray){ if (!_hasSegments)  return _currentSegment; {  
if(textBuffer == null){ if (!_hasSegments)  return _currentSegment; {  
if(currentSegment == null){ if (!_hasSegments)  return _currentSegment; {  
if(contents != null){ if (!_hasSegments)  return _currentSegment; {  
if(textBuffer != null){ if (!_hasSegments)  return _currentSegment; {  
if( !_currentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray()==false){ if (!_hasSegments)  return _currentSegment; {  
if(DEBUG){ if (!_hasSegments)  return _currentSegment; {  
if(contents == null){ if (!_hasSegments)  return _currentSegment; {  
if(buffer == null){ if (!_hasSegments)  return _currentSegment; {  
if(contents){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray==null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsString){ if (!_hasSegments)  return _currentSegment; {  
if(contents() != null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray()==true){ if (!_hasSegments)  return _currentSegment; {  
if( _hasSegments){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray == null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray != null){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasSegments){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray()!=null){ if (!_hasSegments)  return _currentSegment; {  
if(buffer != null){ if (!_hasSegments)  return _currentSegment; {  
if(this){ if (!_hasSegments)  return _currentSegment; {  
if(empty){ if (!_hasSegments)  return _currentSegment; {  
if(closed){ if (!_hasSegments)  return _currentSegment; {  
if(ContentsAsArray){ if (!_hasSegments)  return _currentSegment; {  
if(textBuffer){ if (!_hasSegments)  return _currentSegment; {  
if(text){ if (!_hasSegments)  return _currentSegment; {  
if(content == null){ if (!_hasSegments)  return _currentSegment; {  
if(hasText){ if (!_hasSegments)  return _currentSegment; {  
if(Contents){ if (!_hasSegments)  return _currentSegment; {  
if( contentsAsArray()){ if (!_hasSegments)  return _currentSegment; {  
if(content != null){ if (!_hasSegments)  return _currentSegment; {  
if(textBuffer==null){ if (!_hasSegments)  return _currentSegment; {  
if( _currentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(buffer){ if (!_hasSegments)  return _currentSegment; {  
if(contents() == null){ if (!_hasSegments)  return _currentSegment; {  
if(0){ if (!_hasSegments)  return _currentSegment; {  
if(this.isClosed){ if (!_hasSegments)  return _currentSegment; {  
if(isActive){ if (!_hasSegments)  return _currentSegment; {  
if( ! _hasSegments){ if (!_hasSegments)  return _currentSegment; {  
if(currentSegment >= 0){ if (!_hasSegments)  return _currentSegment; {  
if( _hasSegment){ if (!_hasSegments)  return _currentSegment; {  
if(parent){ if (!_hasSegments)  return _currentSegment; {  
if( contentsAsArray){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray!=null){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasSegment){ if (!_hasSegments)  return _currentSegment; {  
if(isEmpty()){ if (!_hasSegments)  return _currentSegment; {  
if(currentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(debug){ if (!_hasSegments)  return _currentSegment; {  
if(contents==null){ if (!_hasSegments)  return _currentSegment; {  
if( _buffer != null){ if (!_hasSegments)  return _currentSegment; {  
if(result == null){ if (!_hasSegments)  return _currentSegment; {  
if(contents()==null){ if (!_hasSegments)  return _currentSegment; {  
if( _buffer == null){ if (!_hasSegments)  return _currentSegment; {  
if(active){ if (!_hasSegments)  return _currentSegment; {  
if(collapsed){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsCharArray){ if (!_hasSegments)  return _currentSegment; {  
if(undefined){ if (!_hasSegments)  return _currentSegment; {  
if(hasInput){ if (!_hasSegments)  return _currentSegment; {  
if(EMPTY){ if (!_hasSegments)  return _currentSegment; {  
if(length > 0){ if (!_hasSegments)  return _currentSegment; {  
if(buffer==null){ if (!_hasSegments)  return _currentSegment; {  
if(content){ if (!_hasSegments)  return _currentSegment; {  
if(text==null){ if (!_hasSegments)  return _currentSegment; {  
if(contains){ if (!_hasSegments)  return _currentSegment; {  
if( !_inputStart){ if (!_hasSegments)  return _currentSegment; {  
if(contents!=null){ if (!_hasSegments)  return _currentSegment; {  
if(contentAsArray()){ if (!_hasSegments)  return _currentSegment; {  
if(verbose){ if (!_hasSegments)  return _currentSegment; {  
if(currentSegment > 0){ if (!_hasSegments)  return _currentSegment; {  
if( _hasCurrentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(isActive()){ if (!_hasSegments)  return _currentSegment; {  
if(contents()){ if (!_hasSegments)  return _currentSegment; {  
if(getContentsAsArray){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsText){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsString()==null){ if (!_hasSegments)  return _currentSegment; {  
if(currentSegment!=null){ if (!_hasSegments)  return _currentSegment; {  
if( false){ if (!_hasSegments)  return _currentSegment; {  
if(textBuffer!=null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray){ if (!_hasSegments)  return _currentSegment; {  
if(open){ if (!_hasSegments)  return _currentSegment; {  
if(tc){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsBytes){ if (!_hasSegments)  return _currentSegment; {  
if(VERBOSE){ if (!_hasSegments)  return _currentSegment; {  
if(containsCurrentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(length == 0){ if (!_hasSegments)  return _currentSegment; {  
if( !_resultArray){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasCurrentSegment){ if (!_hasSegments)  return _currentSegment; {  
if( !_resultString){ if (!_hasSegments)  return _currentSegment; {  
if(context){ if (!_hasSegments)  return _currentSegment; {  
if(resultString != null){ if (!_hasSegments)  return _currentSegment; {  
if(length() > 0){ if (!_hasSegments)  return _currentSegment; {  
if(exists){ if (!_hasSegments)  return _currentSegment; {  
if(sourcesContent){ if (!_hasSegments)  return _currentSegment; {  
if(content==null){ if (!_hasSegments)  return _currentSegment; {  
if(hasSegments){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsJSON){ if (!_hasSegments)  return _currentSegment; {  
if(hasCurrentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(parent != null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray==false){ if (!_hasSegments)  return _currentSegment; {  
if(fallback){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsString){ if (!_hasSegments)  return _currentSegment; {  
if(inline){ if (!_hasSegments)  return _currentSegment; {  
if( currentSegment != null){ if (!_hasSegments)  return _currentSegment; {  
if( ! _currentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(text == null){ if (!_hasSegments)  return _currentSegment; {  
if(NULL){ if (!_hasSegments)  return _currentSegment; {  
if( null){ if (!_hasSegments)  return _currentSegment; {  
if( _result == null){ if (!_hasSegments)  return _currentSegment; {  
if(result != null){ if (!_hasSegments)  return _currentSegment; {  
if(done){ if (!_hasSegments)  return _currentSegment; {  
if( _hasText){ if (!_hasSegments)  return _currentSegment; {  
if(separator){ if (!_hasSegments)  return _currentSegment; {  
if(tail){ if (!_hasSegments)  return _currentSegment; {  
if(uncompressed){ if (!_hasSegments)  return _currentSegment; {  
if(initialized){ if (!_hasSegments)  return _currentSegment; {  
if(partial){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsString()){ if (!_hasSegments)  return _currentSegment; {  
if(plain){ if (!_hasSegments)  return _currentSegment; {  
if(not){ if (!_hasSegments)  return _currentSegment; {  
if(containsAll){ if (!_hasSegments)  return _currentSegment; {  
if( true){ if (!_hasSegments)  return _currentSegment; {  
if(value == null){ if (!_hasSegments)  return _currentSegment; {  
if(sourcesContent != null){ if (!_hasSegments)  return _currentSegment; {  
if(length()==0){ if (!_hasSegments)  return _currentSegment; {  
if(containsText){ if (!_hasSegments)  return _currentSegment; {  
if(detached){ if (!_hasSegments)  return _currentSegment; {  
if(children){ if (!_hasSegments)  return _currentSegment; {  
if( !isClosed){ if (!_hasSegments)  return _currentSegment; {  
if(containsNull){ if (!_hasSegments)  return _currentSegment; {  
if(value != null){ if (!_hasSegments)  return _currentSegment; {  
if(cached){ if (!_hasSegments)  return _currentSegment; {  
if(TextBuffer){ if (!_hasSegments)  return _currentSegment; {  
if(length != 0){ if (!_hasSegments)  return _currentSegment; {  
if( ! _hasSegment){ if (!_hasSegments)  return _currentSegment; {  
if(recursive){ if (!_hasSegments)  return _currentSegment; {  
if(contentsArray != null){ if (!_hasSegments)  return _currentSegment; {  
if(segments){ if (!_hasSegments)  return _currentSegment; {  
if(1){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray == false){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsChar){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray==true){ if (!_hasSegments)  return _currentSegment; {  
if(""){ if (!_hasSegments)  return _currentSegment; {  
if(position == 0){ if (!_hasSegments)  return _currentSegment; {  
if(contents()!=null){ if (!_hasSegments)  return _currentSegment; {  
if(keys){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsCharBuffer){ if (!_hasSegments)  return _currentSegment; {  
if(parent!=null){ if (!_hasSegments)  return _currentSegment; {  
if(hasSegment){ if (!_hasSegments)  return _currentSegment; {  
if(lines){ if (!_hasSegments)  return _currentSegment; {  
if(StringUtil.isEmpty){ if (!_hasSegments)  return _currentSegment; {  
if(length() == 0){ if (!_hasSegments)  return _currentSegment; {  
if(none){ if (!_hasSegments)  return _currentSegment; {  
if( _hasInput){ if (!_hasSegments)  return _currentSegment; {  
if(contentsArray == null){ if (!_hasSegments)  return _currentSegment; {  
if(TEXT){ if (!_hasSegments)  return _currentSegment; {  
if(buffer!=null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray == true){ if (!_hasSegments)  return _currentSegment; {  
if(_hasSegments){ if (!_hasSegments)  return _currentSegment; {  
if(isPresent){ if (!_hasSegments)  return _currentSegment; {  
if(inText){ if (!_hasSegments)  return _currentSegment; {  
if(isText){ if (!_hasSegments)  return _currentSegment; {  
if(NONE){ if (!_hasSegments)  return _currentSegment; {  
if(firstSegment){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsString != null){ if (!_hasSegments)  return _currentSegment; {  
if(isClosed()){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsJson){ if (!_hasSegments)  return _currentSegment; {  
if(Lazy){ if (!_hasSegments)  return _currentSegment; {  
if(_currentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(strict){ if (!_hasSegments)  return _currentSegment; {  
if(position >= 0){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsString == null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsString()!=null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsChars){ if (!_hasSegments)  return _currentSegment; {  
if( _buffer){ if (!_hasSegments)  return _currentSegment; {  
if( _isActive){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArrays){ if (!_hasSegments)  return _currentSegment; {  
if(hasOutput){ if (!_hasSegments)  return _currentSegment; {  
if(currentSegment==null){ if (!_hasSegments)  return _currentSegment; {  
if(inputStart >= 0){ if (!_hasSegments)  return _currentSegment; {  
if(containsSegment){ if (!_hasSegments)  return _currentSegment; {  
if(String.class){ if (!_hasSegments)  return _currentSegment; {  
if(hasContent){ if (!_hasSegments)  return _currentSegment; {  
if(null != contentsAsArray){ if (!_hasSegments)  return _currentSegment; {  
if(currentBuffer != null){ if (!_hasSegments)  return _currentSegment; {  
if( _eof){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasBuffer){ if (!_hasSegments)  return _currentSegment; {  
if( _result != null){ if (!_hasSegments)  return _currentSegment; {  
if( !_inputBuffer){ if (!_hasSegments)  return _currentSegment; {  
if( _hasResults){ if (!_hasSegments)  return _currentSegment; {  
if(_hasSegment){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasInput){ if (!_hasSegments)  return _currentSegment; {  
if(noSegment){ if (!_hasSegments)  return _currentSegment; {  
if(nextSegment){ if (!_hasSegments)  return _currentSegment; {  
if(null!=currentSegment){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsCharArray){ if (!_hasSegments)  return _currentSegment; {  
if(hasText()){ if (!_hasSegments)  return _currentSegment; {  
if(this != null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsObject){ if (!_hasSegments)  return _currentSegment; {  
if(getContentsAsArray()==null){ if (!_hasSegments)  return _currentSegment; {  
if(size() > 0){ if (!_hasSegments)  return _currentSegment; {  
if(inTextBuffer){ if (!_hasSegments)  return _currentSegment; {  
if(Contents.isEmpty){ if (!_hasSegments)  return _currentSegment; {  
if(currentBuffer == null){ if (!_hasSegments)  return _currentSegment; {  
if( ! _inputStart){ if (!_hasSegments)  return _currentSegment; {  
if(isEnd){ if (!_hasSegments)  return _currentSegment; {  
if(currentSegment < 0){ if (!_hasSegments)  return _currentSegment; {  
if(isEof){ if (!_hasSegments)  return _currentSegment; {  
if(anySegment){ if (!_hasSegments)  return _currentSegment; {  
if(fullText){ if (!_hasSegments)  return _currentSegment; {  
if(contentAsArray()==null){ if (!_hasSegments)  return _currentSegment; {  
if(text() != null){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasText){ if (!_hasSegments)  return _currentSegment; {  
if(contentAsString){ if (!_hasSegments)  return _currentSegment; {  
if(hasTextBuffer){ if (!_hasSegments)  return _currentSegment; {  
if(defaultText){ if (!_hasSegments)  return _currentSegment; {  
if(isLastSegment){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasTextBuffer){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasString){ if (!_hasSegments)  return _currentSegment; {  
if( _hasBuffer){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsStrings){ if (!_hasSegments)  return _currentSegment; {  
if( _inputStart){ if (!_hasSegments)  return _currentSegment; {  
if( contentAsArray()){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray(false){ if (!_hasSegments)  return _currentSegment; {  
if( _hasResult){ if (!_hasSegments)  return _currentSegment; {  
if( !_hasSegments){ if (!_hasSegments)  return _currentSegment; {  
if(_hasCurrentSegment){ if (!_hasSegments)  return _currentSegment; {  
if( _inText){ if (!_hasSegments)  return _currentSegment; {  
if(contentAsText){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsBuffer){ if (!_hasSegments)  return _currentSegment; {  
if( currentSegment == null){ if (!_hasSegments)  return _currentSegment; {  
if(NO_SEGMENTS){ if (!_hasSegments)  return _currentSegment; {  
if(contentAsArray == null){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsTextBuffer){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsCharArray()){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsArray().length){ if (!_hasSegments)  return _currentSegment; {  
if(contentAsCharBuffer){ if (!_hasSegments)  return _currentSegment; {  
if(null!=_result){ if (!_hasSegments)  return _currentSegment; {  
if(contentsAsText()){ if (!_hasSegments)  return _currentSegment; {  
if( ! _resultString){ if (!_hasSegments)  return _currentSegment; {  
if(null != _result){ if (!_hasSegments)  return _currentSegment; {  
