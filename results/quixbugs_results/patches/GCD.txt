 return a / b;  
 return a % b;  
 return a + b;  
 return a - b;  
 return a/b;  
 return b / a;  
 return b % a;  
 return a * b;  
 return a ^ b;  
 return b;  
 return a & b;  
 return a & ~b;  
 return (a / b) % b;  
 return -a;  
 return (a % b) % b;  
 return b - a;  
 return gcd(a, b);  
 return a >> b;  
 return (a & b) / b;  
 return (a & b) % b;  
 return Math.floor(a / b;  
 return (a + b) % b;  
 return 1;  
 return gcd(a, b) %;  
 return (int)(a / b);  
 return (a % b) / b;  
 return a%b;  
 return -1;  
 return -a % b;  
 return a >>> b;  
 return 0;  
 return b * a;  
 return a | b;  
 return a*b;  
 return a * b / b;  
 return (a ^ b) % b;  
 return (a / b) * b;  
 return a & ~a;  
 return (int) b;  
 return a + b % b;  
 return -b;  
 return (int) a % b;  
 return b + a;  
 return (a * b) % b;  
 return (int)(a % b);  
 return (a - b) % b;  
 return gcd(a, b - 1;  
 return (a & b) >> 1;  
 return b/a;  
 return mod(a, b);  
 return a^b;  
 return a * b % b;  
 return b >> 1;  
 return (int) a / b;  
 return (a % b) + 1;  
 return -a + b;  
 return a+b;  
 return a;  
 return (a - b) / b;  
 return a-b;  
 return (int) (a / b;  
 return (a % b) + b;  
 return a & ~~b;  
 return (a % b) - 1;  
 return (a / b) - 1;  
 return (a >> b) % b;  
 return 1 << b;  
 return (a & b) >>> 1;  
 return a / (b - a);  
 return -a * b;  
 return (int) (a % b;  
 return mod(a, b)+1;  
 return Math.ceil(a / b;  
 return (a % b) * b;  
 return (a / b) % 2;  
 return (a + b) / 2;  
 return a + b - 1;  
 return -a - b;  
 return Math.abs(a % b;  
 return a % b + b;  
 return (a * b) / b;  
 return -a / b;  
 return a / b + 1;  
 return (a/b) % b;  
 return gcd(a % b);  
 return a &^ b;  
 return (a >> b) & b;  
 return ~a;  
 return (a & b) - 1;  
 return a &b;  
 return a % b % b;  
 return gcd(a, b)/b;  
 return gcd(a % b, b;  
 return (a >>> b) % b;  
 return a > b ? a : b;  
 return (a & b) + 1;  
 return (int)(a/b);  
 return b + a % b;  
 return (a % b) ^ b;  
 return a < b ? a : b;  
 return a & 0x7fffffff;  
 return (a & b) * b;  
 return a / (b + a);  
 return gcd(a, b-1;  
 return Math.floor(a/b;  
 return a & 0x7FFFFFFF;  
 return a * b + b;  
 return a & (b - a);  
 return Math.gcd(a, b;  
 return a + b / b;  
 return a & (b - 1);  
 return ((a % b) / b;  
 return a >> 1;  
 return a / (b + 1);  
 return Math.abs(a - b;  
 return a ^= b;  
 return a % b + 1;  
 return Math.mod(a, b;  
 return gcd(a, b) *;  
 return (int)b;  
 return gcd(a / b);  
 return (a >> b) & 1;  
 return a.gcd(b);  
 return 1 - a % b;  
 return a & 1;  
 return ((a & b) / b;  
 return b % a + a;  
 return a > b ? b : a;  
 return (a + b) / b;  
 return a&b;  
 return (int)a % b;  
 return (a / b) & 1;  
 return % b;  
 return b - a % b;  
 return (a % b) - b;  
 return ((a / b) % b;  
 return a << b;  
 return (a % b) + a;  
 return (a % b) >> 1;  
 return (a / b) + 1;  
 return ~~a;  
 return 2 * a + b;  
 return a / b + b;  
 return (a & b) != 0;  
 return (a > b) ? a;  
 return (a ^ b) >> 1;  
 return (a > b) ? b;  
 return gcd(a & b);  
 return 1 - a;  
 return b * a + a;  
 return (b / a) % a;  
 return ((a & b) >> 1;  
 return a < b ? b : a;  
 return -a*b;  
 return a & -b;  
 return gcd(b, a);  
 return ((a & b) >>> 1;  
 return b / (a + b);  
 return ((a + b) / b;  
 return b * a % b;  
 return (int)(a * b);  
 return b % a + 1;  
 return xgcd(a, b);  
 return (a & b) | 0;  
 return (a / b) / b;  
 return (int)(a & b);  
 return b%a;  
 return a & ^b;  
 return (int) a;  
 return a / b * b;  
 return  gcd(a, b);  
 return ((a - b) / b;  
 return mod(a, b) %;  
 return ((a % b) % b;  
 return a == b ? a : b;  
 return (a % b) == 0;  
 return ((a + b) % b;  
 return (a & ~b);  
 return (int)(b / a);  
 return (int) Math.floor;  
 return b ^ a;  
 return a // gcd(a, b;  
 return b / a + a;  
 return b & 1;  
 return a * -b;  
 return a / b - 1;  
 return (b % a) % a;  
 return a >= b ? a : b;  
 return (int)(a + b);  
 return (int)a / b;  
 return -a/b;  
 return (int) (a * b;  
 return 2 * a % b;  
 return a - b + 1;  
 return a & (~b) + b;  
 return a + b + 1;  
 return gcd(a, b);;  
 return a mod b;  
 return --a;  
 return a & 0xFF;  
 return a &~b;  
 return Math.floor(b / a;  
 return (int) a/b;  
 return 1 + a % b;  
 return (1 << b) - a;  
 return a << 1;  
 return a + b * a;  
 return a * b + a % b;  
 return a &;  
 return (int) b / a;  
 return gcd(a, b + 1;  
 return (a / b) % a;  
 return (a & b) == 0;  
 return b-a;  
 return gcd(a - b);  
 return a == b;  
 return (a << b) % b;  
 return (b + a) % b;  
 return 2 * a;  
 return (b - a) / b;  
 return a - b - 1;  
 return b >>> 1;  
 return a / b % b;  
 return a * b - 1;  
 return -1 * a % b;  
 return a + b * b;  
 return 2 * b;  
 return (b / a) * a;  
 return gcd(a, b)/2;  
 return (a >>> b) & b;  
 return b / a + 1;  
 return (a ^ b) / b;  
 return gcd(a ^ b);  
 return -1 * a + b;  
 return (int) b % a;  
 return a > b;  
 return (a + b) >> 1;  
 return (b - a) % b;  
 return a / b + a % b;  
 return Math.log(a / b;  
 return a * b + a;  
 return Math.max(a, b;  
 return (a / b) + a;  
 return (b % a) + a;  
 return a >= b;  
 return b & a;  
 return int(a / b);  
 return (int)(a - b);  
 return  a / b;  
 return b * a / b;  
 a /= b; return gcd(a % b, b);  
 a = a / b; return gcd(a % b, b);  
 a %= b; return gcd(a % b, b);  
 a -= b; return gcd(a % b, b);  
 a *= b; return gcd(a % b, b);  
 a += b; return gcd(a % b, b);  
 a >>= 1; return gcd(a % b, b);  
 b -= a; return gcd(a % b, b);  
 b *= 2; return gcd(a % b, b);  
 a = a % b; return gcd(a % b, b);  
 b = a % b; return gcd(a % b, b);  
 int c = a / b; return gcd(a % b, b);  
 a = a >>> 1; return gcd(a % b, b);  
 a = a - b; return gcd(a % b, b);  
 b /= 2; return gcd(a % b, b);  
 int c = a % b; return gcd(a % b, b);  
 b *= -1; return gcd(a % b, b);  
 a ^= b; return gcd(a % b, b);  
 a = a * b; return gcd(a % b, b);  
 a = b; return gcd(a % b, b);  
 a = a >> 1; return gcd(a % b, b);  
 b >>= 1; return gcd(a % b, b);  
 b -= a % b; return gcd(a % b, b);  
 int a = a / b; return gcd(a % b, b);  
 int gcd = a / b; return gcd(a % b, b);  
 a &= ~b; return gcd(a % b, b);  
 assert a % b == 0; return gcd(a % b, b);  
 a <<= 1; return gcd(a % b, b);  
 int b = a % b; return gcd(a % b, b);  
 assert a != 0; return gcd(a % b, b);  
 a = a + b; return gcd(a % b, b);  
 a >>= b; return gcd(a % b, b);  
 a = (int) a; return gcd(a % b, b);  
 a >>>= 1; return gcd(a % b, b);  
 int n = a / b; return gcd(a % b, b);  
 a *= -1; return gcd(a % b, b);  
 int gcd = a % b; return gcd(a % b, b);  
 b %= a; return gcd(a % b, b);  
 a = a/b; return gcd(a % b, b);  
 b += a; return gcd(a % b, b);  
 b += a % b; return gcd(a % b, b);  
 int c = a - b; return gcd(a % b, b);  
 int x = a / b; return gcd(a % b, b);  
 assert a > b; return gcd(a % b, b);  
 int a = a >>> 1; return gcd(a % b, b);  
 b /= a; return gcd(a % b, b);  
 int n = a % b; return gcd(a % b, b);  
 assert a == b; return gcd(a % b, b);  
 assert a != b; return gcd(a % b, b);  
 int i = a / b; return gcd(a % b, b);  
 a >>= 2; return gcd(a % b, b);  
 return a / b; return gcd(a % b, b);  
 int a = a % b; return gcd(a % b, b);  
 int result = a / b; return gcd(a % b, b);  
 b -= 1; return gcd(a % b, b);  
 a = (int)a; return gcd(a % b, b);  
 b = a / b; return gcd(a % b, b);  
 --b; return gcd(a % b, b);  
 int r = a / b; return gcd(a % b, b);  
 a &= b; return gcd(a % b, b);  
 int x = a % b; return gcd(a % b, b);  
 a = (int) b; return gcd(a % b, b);  
 a *= 2; return gcd(a % b, b);  
 a = 0; return gcd(a % b, b);  
 int b = a / b; return gcd(a % b, b);  
 int gcd = 1; return gcd(a % b, b);  
 a%=b; return gcd(a % b, b);  
 a = 1; return gcd(a % b, b);  
 b = a - b; return gcd(a % b, b);  
 int c = b - a; return gcd(a % b, b);  
 a = -a; return gcd(a % b, b);  
 int c = a + b; return gcd(a % b, b);  
 b--;; return gcd(a % b, b);  
 int c = a >>> b; return gcd(a % b, b);  
 int result = a % b; return gcd(a % b, b);  
 int c = b / a; return gcd(a % b, b);  
 int c = a/b; return gcd(a % b, b);  
 int i = a % b; return gcd(a % b, b);  
 a = b - 1; return gcd(a % b, b);  
 int c = a * b; return gcd(a % b, b);  
 b--; return gcd(a % b, b);  
 a /= 2; return gcd(a % b, b);  
 int c = 0; return gcd(a % b, b);  
 b *= a; return gcd(a % b, b);  
 int c = b; return gcd(a % b, b);  
 int result = 0; return gcd(a % b, b);  
 int r = a % b; return gcd(a % b, b);  
 a &= 0x55555555; return gcd(a % b, b);  
 int d = a / b; return gcd(a % b, b);  
 a = (int)b; return gcd(a % b, b);  
 assert a >= b; return gcd(a % b, b);  
 int a = a >> 1; return gcd(a % b, b);  
 --a; return gcd(a % b, b);  
 int c = a; return gcd(a % b, b);  
 int c = 1; return gcd(a % b, b);  
 int gcd = 0; return gcd(a % b, b);  
 const b = a % b; return gcd(a % b, b);  
 int gcd = b / a; return gcd(a % b, b);  
 int gcd = 1 << b; return gcd(a % b, b);  
 int diff = a - b; return gcd(a % b, b);  
 -- b; return gcd(a % b, b);  
 a--; return gcd(a % b, b);  
 b = 1; return gcd(a % b, b);  
 int m = a / b; return gcd(a % b, b);  
 a = b % b; return gcd(a % b, b);  
 b = a; return gcd(a % b, b);  
 int tmp = a % b; return gcd(a % b, b);  
 int res = a / b; return gcd(a % b, b);  
 assert a < b; return gcd(a % b, b);  
 int v = a / b; return gcd(a % b, b);  
 a--;; return gcd(a % b, b);  
 a -= b * b; return gcd(a % b, b);  
 a >>>= b; return gcd(a % b, b);  
 a = a ^ b; return gcd(a % b, b);  
 int a = a - b; return gcd(a % b, b);  
 int n = a + b; return gcd(a % b, b);  
 int temp = a % b; return gcd(a % b, b);  
 int d = a % b; return gcd(a % b, b);  
 int m = a % b; return gcd(a % b, b);  
 int c = a & b; return gcd(a % b, b);  
 int b = a - b; return gcd(a % b, b);  
 ; return gcd(a % b, b);  
 a--; b--;; return gcd(a % b, b);  
 a/=b; return gcd(a % b, b);  
 a = b - a; return gcd(a % b, b);  
 int c = a >> b; return gcd(a % b, b);  
 assert a > 0; return gcd(a % b, b);  
 a = b / b; return gcd(a % b, b);  
 assert b != 0; return gcd(a % b, b);  
 b += 1; return gcd(a % b, b);  
 assert a >= 0; return gcd(a % b, b);  
 a += 1; return gcd(a % b, b);  
 int c; return gcd(a % b, b);  
 b <<= 1; return gcd(a % b, b);  
 int t = a / b; return gcd(a % b, b);  
 a = a << 1; return gcd(a % b, b);  
 //return a / b; return gcd(a % b, b);  
 b &= 0x55555555; return gcd(a % b, b);  
 int a = a * b; return gcd(a % b, b);  
 assert a <= b; return gcd(a % b, b);  
 b *= 10; return gcd(a % b, b);  
 int a %= b; return gcd(a % b, b);  
 int gcd = a * b; return gcd(a % b, b);  
 int c = 1 << b; return gcd(a % b, b);  
 b = a >> 1; return gcd(a % b, b);  
 int gcd = a - b; return gcd(a % b, b);  
 int n = a - b; return gcd(a % b, b);  
 int a0 = a; return gcd(a % b, b);  
 a &= -b; return gcd(a % b, b);  
 a *= -b; return gcd(a % b, b);  
 a%= b; return gcd(a % b, b);  
 -- a; return gcd(a % b, b);  
 int n = a * b; return gcd(a % b, b);  
 int v = a % b; return gcd(a % b, b);  
 ++a; return gcd(a % b, b);  
 assert b > 0; return gcd(a % b, b);  
 a += b * b; return gcd(a % b, b);  
 int res = a % b; return gcd(a % b, b);  
 a = b / 2; return gcd(a % b, b);  
 const a = a / b; return gcd(a % b, b);  
 int result = b; return gcd(a % b, b);  
 int ret = a / b; return gcd(a % b, b);  
 b >>>= 1; return gcd(a % b, b);  
 int a = a + b; return gcd(a % b, b);  
 double a = a / b; return gcd(a % b, b);  
 b ^= a; return gcd(a % b, b);  
 b--; a--;; return gcd(a % b, b);  
 const b = a / b; return gcd(a % b, b);  
 a = a - 1; return gcd(a % b, b);  
 int sum = 0; return gcd(a % b, b);  
 a = b >> 1; return gcd(a % b, b);  
 assert b == 0; return gcd(a % b, b);  
 b = a >>> 1; return gcd(a % b, b);  
 int tmp = a / b; return gcd(a % b, b);  
 int a = a/b; return gcd(a % b, b);  
 int diff = a % b; return gcd(a % b, b);  
 int a1 = a; return gcd(a % b, b);  
 --; return gcd(a % b, b);  
 int result = 1; return gcd(a % b, b);  
 const a = a >>> 1; return gcd(a % b, b);  
 // a = b; return gcd(a % b, b);  
 int n = a/b; return gcd(a % b, b);  
 a--; b--;; return gcd(a % b, b);  
 int n = b / a; return gcd(a % b, b);  
 int quotient = a / b; return gcd(a % b, b);  
 //a = b; return gcd(a % b, b);  
 int tmp = a; return gcd(a % b, b);  
 b = -b; return gcd(a % b, b);  
 int temp = a / b; return gcd(a % b, b);  
 int b1 = b; return gcd(a % b, b);  
 int k = a / b; return gcd(a % b, b);  
 b *= b; return gcd(a % b, b);  
 int n = b - a; return gcd(a % b, b);  
 int i = a; return gcd(a % b, b);  
 b = a + b; return gcd(a % b, b);  
 b = b - 1; return gcd(a % b, b);  
 a = b >>> 1; return gcd(a % b, b);  
 ++b; return gcd(a % b, b);  
 int b; return gcd(a % b, b);  
 int g = a / b; return gcd(a % b, b);  
 int t = a % b; return gcd(a % b, b);  
 a &= 0x7fffffff; return gcd(a % b, b);  
 assert b == a; return gcd(a % b, b);  
 int ret = a % b; return gcd(a % b, b);  
 b = 0; return gcd(a % b, b);  
 int b = a >>> 1; return gcd(a % b, b);  
 a |= 0; return gcd(a % b, b);  
 int x = a - b; return gcd(a % b, b);  
 int n = b; return gcd(a % b, b);  
 int d = a - b; return gcd(a % b, b);  
 a = b * a; return gcd(a % b, b);  
 int b = a >> 1; return gcd(a % b, b);  
 b %= b; return gcd(a % b, b);  
 int w = a / b; return gcd(a % b, b);  
 int n = a >>> 1; return gcd(a % b, b);  
 int k = a % b; return gcd(a % b, b);  
 b = a.length; return gcd(a % b, b);  
 b /= b; return gcd(a % b, b);  
 int n = a >> 1; return gcd(a % b, b);  
 int b = b - 1; return gcd(a % b, b);  
 int p = a / b; return gcd(a % b, b);  
 a /= b + 1; return gcd(a % b, b);  
 return a % b; return gcd(a % b, b);  
 int b2 = b; return gcd(a % b, b);  
 //a /= b; return gcd(a % b, b);  
 int c = a ^ b; return gcd(a % b, b);  
 b -= a * a; return gcd(a % b, b);  
 return a + b; return gcd(a % b, b);  
 int y = a / b; return gcd(a % b, b);  
 int b = a + b; return gcd(a % b, b);  
 a &= 0x7FFFFFFF; return gcd(a % b, b);  
 int i = a - b; return gcd(a % b, b);  
 int remainder = a % b; return gcd(a % b, b);  
 int b0 = b; return gcd(a % b, b);  
 int gcd = a >>> b; return gcd(a % b, b);  
 a /= b * b; return gcd(a % b, b);  
 a = a * 2; return gcd(a % b, b);  
 int q = a / b; return gcd(a % b, b);  
 int n = a; return gcd(a % b, b);  
 int j = a / b; return gcd(a % b, b);  
 int b = b - a; return gcd(a % b, b);  
 int z = a / b; return gcd(a % b, b);  
 b --; return gcd(a % b, b);  
 int x = a >>> b; return gcd(a % b, b);  
 a += b % b; return gcd(a % b, b);  
 int n = 1 << b; return gcd(a % b, b);  
 int j = a % b; return gcd(a % b, b);  
 int x = a; return gcd(a % b, b);  
 b = b % b; return gcd(a % b, b);  
 int g = a % b; return gcd(a % b, b);  
return  a / b;  
return  a % b;  
return  a - b;  
return  a + b;  
return  b / a;  
return  a ^ b;  
return  a/b;  
return  b % a;  
return  a * b;  
return  a & b;  
return  (a / b) % b;  
return  (a % b) % b;  
return  a & ~b;  
return  (a % b) / b;  
return  (a & b) / b;  
return  Math.floor(a / b);  
return  gcd(a, b) % b;  
return  b - a;  
return  b;  
return  (a + b) % b;  
return  gcd(a, b) / b;  
return  a >> b;  
return  (a & b) >> 1;  
return  (a & b) % b;  
return  -a;  
return  (a + b) / 2;  
return  (a % b) + b;  
return  (a ^ b) % b;  
return  a + b % b;  
return  (a - b) / b;  
return  a * b / b;  
return  a%b;  
return  (a & b) >>> 1;  
return  (a * b) % b;  
return  (a / b) * b;  
return  -a % b;  
return  (a % b) * b;  
return  (a * b) / b;  
return  (int) (a / b);  
return  a * b % b;  
return  (a - b) % b;  
return  gcd(a % b, b);  
return  a >>> b;  
return  a & ~a;  
return  gcd(a, b - 1);  
return  b * a;  
return  (a >> b) % b;  
return  a*b;  
return  a | b;  
return  a & ~~b;  
return  Math.ceil(a / b);  
return  -1;  
return  (a % b) + 1;  
return  0;  
return  b/a;  
return  (a & b) * b;  
return  (int) (a % b);  
return  a > b ? a : b;  
return  (int) a / b;  
return  a^b;  
return  (a % b) - b;  
return  a % b + 1;  
return  (int) a % b;  
return  (a % b) >> 1;  
return  a-b;  
return  a < b ? a : b;  
return  b + a;  
return  (a / b) - 1;  
return  (a >>> b) % b;  
return  a % b + b;  
return  a / b + 1;  
return  gcd(a / b, b);  
return  (a % b) ^ b;  
return  mod(a, b) % b;  
return  (a + b) / b;  
return  a+b;  
return  (a & b) + 1;  
return  a % b % b;  
return  b >> 1;  
return  (a ^ b) >> 1;  
return  a + b / b;  
return  a + b - 1;  
return  1;  
return  (a/b) % b;  
return  -a * b;  
return  -a + b;  
return  Math.abs(a) % b;  
return  Math.floor(b / a);  
return  (int) b;  
return  -a / b;  
return  (a % b) - 1;  
return  gcd(a, b) - 1;  
return  (a & b) != 0;  
return  1 << b;  
return  (a ^ b) / b;  
return  (a % b) == 0;  
return  ((a % b) / b);  
return  (a + b) >> 1;  
return  -b;  
return  Math.log(a / b);  
return  a & 0x7fffffff;  
return  (a % b) >>> 1;  
return  a & 0x7FFFFFFF;  
return  a & (~a & ~b);  
return  a * b + b;  
return  (a << b) % b;  
return  mod(a, b) + 1;  
return  (a & b) - 1;  
return  a + b * a;  
return  (a / b) / b;  
return  (a * b) >> 1;  
return  (a & b) + b;  
return  (a / b) + 1;  
return  Math.gcd(a, b);  
return  -a - b;  
return  a &b;  
return  ((a & b) >> 1);  
return  a&b;  
return  gcd(a, b) + a;  
return  gcd(a, b) * b;  
return  (a & b) == 0;  
return  b - a % b;  
return  Math.abs(a % b);  
return  a & 1;  
return  gcd(a, b-1);  
return  (a & b) | 0;  
return  a * b + a;  
return  (a & b) - b;  
return  gcd(a, b)/b;  
return  a / b * a;  
return  (b % a) % a;  
return  (b % a) + a;  
return  b + a % b;  
return  Math.mod(a, b);  
return  a &^ b;  
return  a / b * b;  
return  a / b % b;  
return  gcd(a - b, b);  
return  gcd(a, b) + 1;  
return  a & (~a & (~b));  
return  (a & b) ^ b;  
return  a - b + 1;  
return  (a ^ b) >>> 1;  
return  (a >> b) & 1;  
return  (b - a) / b;  
return  Math.abs(a) / b;  
return  a >> 1;  
return  (b - a) / a;  
return  1 - a % b;  
return  a / b - 1;  
return  gcd(a, b) + b;  
return  -a*b;  
return  (b / a) % a;  
return  Math.floor(a/b);  
return  (a + b) >>> 1;  
return  Math.round(a / b);  
return  (1 << b) - a;  
return  (int)a % b;  
return  (a / b) % 2;  
return  (b / a) * a;  
return  a;  
return  b * a % b;  
return  (a / b) * a;  
return  ((a & b) / b);  
return  (a / b) >> 1;  
return  mod(a, b)+1;  
return  b / b;  
return  gcd(a, b) % a;  
return  Math.log(a) / b;  
return  a + b * b;  
return  (a / b) >>> 1;  
return  a * b - 1;  
return  (a & (b - 1)));  
return  a ^= b;  
return  gcd(a, b); };  
return  a * b + a % b;  
return  gcd(b, a) % b;  
return  (b + a) % b;  
return  a >= b ? a : b;  
return  a % b * b;  
return  Math.floor(a * b);  
return  (a >> b) & b;  
return  a + a % b;  
return  b % a + a;  
return  b * a / b;  
return  a & -b;  
return  a == b ? a : b;  
return  gcd(a ^ b) % b;  
return  (int)a / b;  
return  a >= b;  
return  ((a % b) % b);  
return  (b + a) / 2;  
return  a << b;  
return  a * b / a;  
return  b%a;  
return  (a / b) + b;  
return  gcd(a * b, b);  
return  (int) (a * b);  
return  a * a % b;  
return  -1 * a % b;  
return  -a/b;  
return  (a % b) != 0;  
return  Math.max(a, b);  
return  mod(a, b) + b;  
return  (a >> b) & 0xff;  
return  a * -b;  
return  a*a + b;  
return  b / a + 1;  
return  a + b / 2;  
return  (a % b) + a;  
return  % b;  
return  (a / b) * 2;  
return  b * a + a;  
return  mod(a, b) + a;  
return  (int)b;  
return  a * a + b;  
return  ((a + b) / b);  
return  a / b + a % b;  
return  a - b - 1;  
return  a ^ b % b;  
return  ((a & b) >>> 1);  
return  (int) b / a;  
return  a > b ? b : a;  
return  a & 0xFF;  
return  a == b;  
return  a + b * a % b;  
return  (a / b) * -1;  
return  gcd(a, b) / 2;  
return  ((a / b) % b);  
return  (a | b) % b;  
return  a > b;  
return  (a - b) * b;  
return  Math.min(a, b);  
return  ~a;  
return  b ^ a;  
return  a && b;  
return  a & (~b) + b;  
return  b-a;  
return  (a / b) % a;  
return  (a & b) + a;  
return  ((a % b) >> 1);  
return  (a / b) & 1;  
return  (int) (b / a);  
return  ((a - b) / b);  
return  pow(a, b) % b;  
return  (a * b) >>> 1;  
return  (a & b) >>> 0;  
return  gcd(a, b + 1);  
return  (int) a;  
return  mod(a, b) * b;  
return  gcd(a % b, b);  
return  Math.gcd(a % b, b);  
return  mod(a % b, b);  
return  a - gcd(a % b, b);  
return  Math.floor(a % b, b);  
return  Math.max(a % b, b);  
return  a / gcd(a % b, b);  
return  Math.mod(a % b, b);  
return  (int) Math.gcd(a % b, b);  
return  Math.min(a % b, b);  
return  a + gcd(a % b, b);  
return  (int)Math.gcd(a % b, b);  
return  a / b - gcd(a % b, b);  
return  -gcd(a % b, b);  
return  a / b * gcd(a % b, b);  
return  div(a % b, b);  
return  Math.abs(a % b, b);  
return  (int) Math.floor(a % b, b);  
return  a * gcd(a % b, b);  
return  cdiv(a % b, b);  
return  Math.pow(a % b, b);  
return  divmod(a % b, b);  
return  a / Math.pow(a % b, b);  
return  b / gcd(a % b, b);  
return  Math.ceil(a % b, b);  
return  (int) gcd(a % b, b);  
return  (int)(Math.gcd(a % b, b);  
return  b - gcd(a % b, b);  
return  (int)Math.floor(a % b, b);  
return  - gcd(a % b, b);  
return  abs(a % b, b);  
return  a / Math.gcd(a % b, b);  
return  (int) Math.mod(a % b, b);  
return  Math.log(a % b, b);  
return  a / b + gcd(a % b, b);  
return  (int)(Math.floor(a % b, b);  
return  Math. gcd(a % b, b);  
return  intdiv(a % b, b);  
return  -Math.gcd(a % b, b);  
return  b * gcd(a % b, b);  
return  a ^ gcd(a % b, b);  
return  sub(a % b, b);  
return  Math.addExact(a % b, b);  
return   gcd(a % b, b);  
return  math.gcd(a % b, b);  
return  Math.multiplyExact(a % b, b);  
return  (int)Math.mod(a % b, b);  
return  Math.div(a % b, b);  
return  xgcd(a % b, b);  
return  round(a % b, b);  
return  Math.add(a % b, b);  
return  GCD(a % b, b);  
return  divide(a % b, b);  
return  Math.sqrt(a % b, b);  
return  a % b - gcd(a % b, b);  
return  (int)(gcd(a % b, b);  
return  a/b - gcd(a % b, b);  
return  lcm(a % b, b);  
return  (int)(Math.log(a % b, b);  
return  greatestCommon(a % b, b);  
return  a + Math.gcd(a % b, b);  
return  signum(a % b, b);  
return  Math.rint(a % b, b);  
return  modInverse(a % b, b);  
return  gdiv(a % b, b);  
return  add(a % b, b);  
return  a % b + gcd(a % b, b);  
return  pow(a % b, b);  
return  multiply(a % b, b);  
return  Math.round(a % b, b);  
return  -Math.log(a % b, b);  
return  a / Math.max(a % b, b);  
return  floor(a % b, b);  
return  -1 * gcd(a % b, b);  
return  -1 * Math.gcd(a % b, b);  
return  gcd(a % b, b);  
return  greatest(a % b, b);  
return  Math.floorMod(a % b, b);  
return  galloff(a % b, b);  
return  _gcd(a % b, b);  
return  0 - gcd(a % b, b);  
return  Integer.gcd(a % b, b);  
return  a / b(a % b, b);  
return  a % b * gcd(a % b, b);  
return  (int)(Math.mod(a % b, b);  
return  int_div(a % b, b);  
return  a / b; }(a % b, b);  
return  greatestCommonSub(a % b, b);  
return  min(a % b, b);  
return  (int) (gcd(a % b, b);  
return  Math.exp(a % b, b);  
return  Math.floorDiv(a % b, b);  
return  (int) Math.pow(a % b, b);  
return  intMath.gcd(a % b, b);  
return  int(a % b, b);  
return  Math.mul(a % b, b);  
return  1 - gcd(a % b, b);  
return  a - Math.gcd(a % b, b);  
return  -Math.floor(a % b, b);  
return  gte(a % b, b);  
return  mul(a % b, b);  
return  a / Math.floor(a % b, b);  
return  max(a % b, b);  
return  Integer.mod(a % b, b);  
return  g_gcd(a % b, b);  
return  a % b / gcd(a % b, b);  
return  ggcd(a % b, b);  
return  cmod(a % b, b);  
return  modulo(a % b, b);  
return  gcd_small(a % b, b);  
return  galloe(a % b, b);  
return  a * Math.gcd(a % b, b);  
return  a * b / gcd(a % b, b);  
return  gsub(a % b, b);  
return  a/Math.gcd(a % b, b);  
return  b * Math.gcd(a % b, b);  
return  ghi(a % b, b);  
return  gcdInt(a % b, b);  
return  Math.divide(a % b, b);  
return  Math.Mod(a % b, b);  
return  cgcd(a % b, b);  
return  (int) Math.ceil(a % b, b);  
return  a / Math.mod(a % b, b);  
return  sqrt(a % b, b);  
return  (int)(Math.ceil(a % b, b);  
return  (int) Math.min(a % b, b);  
return  Math.d(a % b, b);  
return  exp(a % b, b);  
return  b - a - gcd(a % b, b);  
return  Math.subtractExact(a % b, b);  
return  galloven(a % b, b);  
return  a & gcd(a % b, b);  
return  a / b / gcd(a % b, b);  
return  Long.gcd(a % b, b);  
return  greatestCommonDivisor(a % b, b);  
return  g(a % b, b);  
return  b + gcd(a % b, b);  
return  (int) Math. gcd(a % b, b);  
return  diff(a % b, b);  
return  -Math.mod(a % b, b);  
return  Math.element(a % b, b);  
return  Math.multiply(a % b, b);  
return  (int)(Math.abs(a % b, b);  
return  (a + gcd(a % b, b);  
return  log(a % b, b);  
return  a / (int) gcd(a % b, b);  
return  a / Math.log(a % b, b);  
return  a/Math.pow(a % b, b);  
return  (int) Math.max(a % b, b);  
return  subdiv(a % b, b);  
return  a / Math.min(a % b, b);  
return  base(a % b, b);  
return  a/b * gcd(a % b, b);  
return  binomial(a % b, b);  
return  gcd(a % b, b);  
return  ((int) Math.floor(a % b, b);  
return  a/b + gcd(a % b, b);  
return  fmod(a % b, b);  
return  trunc(a % b, b);  
return  (int) mod(a % b, b);  
return  greate(a % b, b);  
return  Math.Min(a % b, b);  
return  Math.GCD(a % b, b);  
return  gmod(a % b, b);  
return  (int) Math.div(a % b, b);  
return  (int)(Math.pow(a % b, b);  
return  b - a + gcd(a % b, b);  
return  -1*Math.gcd(a % b, b);  
return  lcg(a % b, b);  
return  greatestDiv(a % b, b);  
return  (int)(Math.sqrt(a % b, b);  
return  -Math.pow(a % b, b);  
return  ceil(a % b, b);  
return  a/b*gcd(a % b, b);  
return  gcd2(a % b, b);  
return  a - Math.pow(a % b, b);  
return  a % b ^ gcd(a % b, b);  
return  a / Math.abs(a % b, b);  
return  n(a % b, b);  
return  a = gcd(a % b, b);  
return  -Math.min(a % b, b);  
return  gadd(a % b, b);  
return  Math.QG(a % b, b);  
return  (int)Math.ceil(a % b, b);  
return  (int)Math.pow(a % b, b);  
return  Math.Math.gcd(a % b, b);  
return  Math.cdiv(a % b, b);  
return  divMod(a % b, b);  
return  aug(a % b, b);  
return  Math.signum(a % b, b);  
return  gcd0(a % b, b);  
return  d(a % b, b);  
return  (int)gcd(a % b, b);  
return  a - Math.floor(a % b, b);  
return  a / b ^ gcd(a % b, b);  
return  a - b * gcd(a % b, b);  
return  sum(a % b, b);  
return  a-gcd(a % b, b);  
return  Math.trunc(a % b, b);  
return  a &(a % b, b);  
return  a * b - gcd(a % b, b);  
return  a & mod(a % b, b);  
return  int_gcd(a % b, b);  
return  IntegerMath.gcd(a % b, b);  
return  Math.maximum(a % b, b);  
return  reduce(a % b, b);  
return  gallof(a % b, b);  
return  -Math.max(a % b, b);  
return  gallop(a % b, b);  
return  a / Math.sqrt(a % b, b);  
return  result(a % b, b);  
return  c(a % b, b);  
return  IntMath.gcd(a % b, b);  
return  1 + gcd(a % b, b);  
return  gmp_gcd(a % b, b);  
return  Math.QGCD(a % b, b);  
return  a.div(a % b, b);  
return  _Math.gcd(a % b, b);  
return  compare(a % b, b);  
return  ceiling(a % b, b);  
return  a | gcd(a % b, b);  
return  Math.and(a % b, b);  
return  (int)(math.gcd(a % b, b);  
return  BigInteger.gcd(a % b, b);  
return  rational(a % b, b);  
return  (int)( gcd(a % b, b);  
return  b - a * gcd(a % b, b);  
return  random.nextInt(a % b, b);  
return  a / mod(a % b, b);  
return  Math.Max(a % b, b);  
return  Math.lcm(a % b, b);  
return  Math.Pow(a % b, b);  
return  atan2(a % b, b);  
return  FastMath.gcd(a % b, b);  
return  2 * gcd(a % b, b);  
return  sign(a % b, b);  
return  new int(a % b, b);  
return  (int)Math. gcd(a % b, b);  
return  % gcd(a % b, b);  
return  vmod(a % b, b);  
return  Math.lg(a % b, b);  
return  gcm(a % b, b);  
return  isEven(a % b, b);  
return  (int)(mod(a % b, b);  
return  (int) ( gcd(a % b, b);  
return  (int)(log(a % b, b);  
return  inverse(a % b, b);  
return  Math.sub(a % b, b);  
return  (int)Math.min(a % b, b);  
return  a - Math.min(a % b, b);  
return gcd(a, b);  
return gcd(a / b, b);  
return gcd(a % b, b);  
return gcd(a - b, b);  
return gcd(a + b, b);  
return gcd(a * b, b);  
return gcd(a >> 1, b);  
return gcd(a << 1, b);  
return gcd(a + 1, b);  
return gcd(a/b, b);  
return gcd(a >>> 1, b);  
return gcd(a ^ b, b);  
return gcd(a * a, b);  
return gcd(a >> b, b);  
return gcd(a - 1, b);  
return gcd(a >>> b, b);  
return gcd(1, b);  
return gcd(0, b);  
return gcd(b, b);  
return gcd(a & b, b);  
return gcd(a + a, b);  
return gcd(a*a, b);  
return gcd(a / b - 1, b);  
return gcd(a & 1, b);  
return gcd(a, 1, b);  
return gcd(a + b - 1, b);  
return gcd(a-b, b);  
return gcd(a+b, b);  
return gcd(a >> 32, b);  
return gcd(a%b, b);  
return gcd(a / b + 1, b);  
return gcd(a - a, b);  
return gcd(a >> 16, b);  
return gcd(a / b * a, b);  
return gcd(a / a, b);  
return gcd(a % b + 1, b);  
return gcd(a + b * a, b);  
return gcd(a << b, b);  
return gcd(a >>> 32, b);  
return gcd(a * 2, b);  
return gcd(a / 2, b);  
return gcd(a >>> 16, b);  
return gcd(a, a + b, b);  
return gcd(a >> 8, b);  
return gcd(a % b - 1, b);  
return gcd(a + a % b, b);  
return gcd(a & 0xFFFFFFFFL, b);  
return gcd(a.length, b);  
return gcd(a+1, b);  
return gcd(a & 0xffffffffL, b);  
return gcd(a ^ a, b);  
return gcd(a*b, b);  
return gcd(a | 0, b);  
return gcd(a * a + b, b);  
return gcd(a & 0xFFFFFFFF, b);  
return gcd(b * a, b);  
return gcd(a, b - 1, b);  
return gcd(b - a, b);  
return gcd(a^b, b);  
return gcd(a % 2, b);  
return gcd(a % 1, b);  
return gcd(a & 0xffff, b);  
return gcd(a | b, b);  
return gcd(a >> 5, b);  
return gcd(a & 0xFF, b);  
return gcd(a, a + 1, b);  
return gcd(a +, b);  
return gcd(a, a % b, b);  
return gcd(a * a % b, b);  
return gcd(a, 0, b);  
return gcd(a >> i, b);  
return gcd( a, b);  
return gcd(a + b + 1, b);  
return gcd(b % a, b);  
return gcd(a % b * a, b);  
return gcd(a * 0.5, b);  
return gcd(a * a / b, b);  
return gcd(a.x, b);  
return gcd(a >> 2, b);  
return gcd(a, a >>> 1, b);  
return gcd(a >> 25, b);  
return gcd(a << a, b);  
return gcd(a.intValue() % b, b);  
return gcd(a / (double) b, b);  
return gcd(a + b) % b, b);  
return gcd(a ^ 1, b);  
return gcd(a + 2, b);  
return gcd(a > 0, b);  
return gcd(a | 1, b);  
return gcd(a<<1, b);  
return gcd(a & ~b, b);  
return gcd(b, a, b);  
return gcd(a, a / b, b);  
return gcd(b / a, b);  
return gcd(a + b / 2, b);  
return gcd(a * 1, b);  
return gcd(a >> 24, b);  
return gcd(a >> 31, b);  
return gcd(a >> 10, b);  
return gcd(a < 0, b);  
return gcd(a, a >> 1, b);  
return gcd(a>>1, b);  
return gcd(a >> a, b);  
return gcd(a % b, a, b);  
return gcd(a & 0x7FFFFFFF, b);  
return gcd(a & 0xff, b);  
return gcd(a * 10, b);  
return gcd(a >>> 24, b);  
return gcd(a, a, b);  
return gcd(a * b - 1, b);  
return gcd(a / b * b, b);  
return gcd(a >> 3, b);  
return gcd(a * b + 1, b);  
return gcd(a & 255, b);  
return gcd(a-1, b);  
return gcd(a >>> 8, b);  
return gcd(a % a, b);  
return gcd(a / 1, b);  
return gcd(a & a, b);  
return gcd(a - b + 1, b);  
return gcd(a + a / b, b);  
return gcd(a >> 63, b);  
return gcd(a >>> 5, b);  
return gcd(a & 0x7fffffff, b);  
return gcd(a - b - 1, b);  
return gcd(a >> 15, b);  
return gcd(a % b * b, b);  
return gcd(Integer.MIN_VALUE, b);  
return gcd(a & 0xFFFF, b);  
return gcd(a == 0, b);  
return gcd(a & 0xffffffff, b);  
return gcd(BigInteger.ONE, b);  
return gcd(a << 2, b);  
return gcd(a >> 4, b);  
return gcd(a / b, 1, b);  
return gcd(a * b + a, b);  
return gcd(a %= b, b);  
return gcd(0, a, b);  
return gcd(a) / gcd(b, b);  
return gcd(a / 0.5, b);  
return gcd(a / b, a, b);  
return gcd(b + a, b);  
return gcd(a >>> 0, b);  
return gcd(a & 0xffffffffffff, b);  
return gcd(a &b, b);  
return gcd(a % b, 1, b);  
return gcd(a << 3, b);  
return gcd(a // a % b, b);  
return gcd(Integer.MAX_VALUE, b);  
return gcd(a >> 7, b);  
return gcd(1 << a, b);  
return gcd(a >>> 31, b);  
return gcd(a.word, b);  
return gcd(a, -b, b);  
return gcd(a  % b, b);  
return gcd(a != 0, b);  
return gcd(Math.max(a, b);  
return gcd(a mod b, b);  
return gcd(a//b, b);  
return gcd(a >>> 10, b);  
return gcd(a + c, b);  
return gcd(a.0, b);  
return gcd(a * -b, b);  
return gcd(a * 0, b);  
return gcd(a / b + a, b);  
return gcd(1, a, b);  
return gcd(a + b + a, b);  
return gcd(a.abs() % b, b);  
return gcd(a.intValue() / b, b);  
return gcd( a / b, b);  
return gcd(a + a >> 1, b);  
return gcd(a * b / b, b);  
return gcd(a + a * b, b);  
return gcd(a / (double)b, b);  
return gcd(int) (a, b);  
return gcd(int) (a / b, b);  
return gcd(a * b * a, b);  
return gcd(a ** b, b);  
return gcd(a , b);  
return gcd(a &, b);  
return gcd(x, b);  
return gcd(a << 16, b);  
return gcd(a) % gcd(b, b);  
return gcd(a - b, a, b);  
return gcd(a / b - a, b);  
return gcd(a + 0.5, b);  
return gcd(a + b, a, b);  
return gcd(a / (int) b, b);  
return gcd(a.length() - 1, b);  
return gcd(a % b + b, b);  
return gcd(a, a << 1, b);  
return gcd(a, b + 1, b);  
return gcd(a, a - 1, b);  
return gcd(a, (int) b, b);  
return gcd(a, a - b, b);  
return gcd(a & 0xfffffff, b);  
return gcd(a, b-1, b);  
return gcd(a, b) % b, b);  
return gcd(a.byteValue(), b);  
return gcd(int) (a % b, b);  
return gcd(a * a + 1, b);  
return gcd(a & 0xff000000, b);  
return gcd(a, a * b, b);  
return gcd(a + 2 * b, b);  
return gcd(a * b / a, b);  
return gcd(a) / gcd(a, b);  
return gcd(a * b - a, b);  
return gcd(a * b, a, b);  
return gcd(a % b - a, b);  
return gcd(a % b + a, b);  
return gcd(a, -1, b);  
return gcd(a * a * b, b);  
return gcd(intA, b);  
return gcd(a >>, b);  
return gcd(a & 0xffffff, b);  
return gcd(a % b / b, b);  
return gcd(A, b);  
return gcd(a /, b);  
return gcd(a.abs() / b, b);  
return gcd(a--, b);  
return gcd(a & 0xFFFFFFFFFFFFFFFF, b);  
return gcd(a & 0xfffffffe, b);  
return gcd(a / b, 0, b);  
return gcd(a, b - a, b);  
return gcd(a & 0xFFFF0000, b);  
return gcd(c, b);  
return gcd(a, 1 << b, b);  
return gcd(a + b - a, b);  
return gcd(a * 0x100, b);  
return gcd(a + b) / 2, b);  
return gcd(a % b - b, b);  
return gcd(a, 2 * a, b);  
return gcd(a / b / a, b);  
return gcd(a * a + a, b);  
return gcd(a / (int)b, b);  
return gcd(a / b, b, b);  
return gcd(a & 0xFF000000, b);  
return gcd(a / b / 2, b);  
return gcd(a, 2 * b, b);  
return gcd(a / b * 2, b);  
return gcd(a / b + b, b);  
return gcd(a + b * b, b);  
return gcd(a.intValue(), b);  
return gcd(a * 0x100000000, b);  
return gcd(a + 2 * a, b);  
return gcd(a % b / 2, b);  
return gcd(a & 0xff00, b);  
return gcd(256, b);  
return gcd(a ^ 0x7fffffff, b);  
return gcd(ab, b);  
return gcd(a % b,  b);  
return gcd(a % b,  b - 1);  
return gcd(a % b,  b + 1);  
return gcd(a % b,  a + b);  
return gcd(a % b,  1);  
return gcd(a % b,  b - a);  
return gcd(a % b,  a / b);  
return gcd(a % b,  a);  
return gcd(a % b,  b - a % b);  
return gcd(a % b,  0);  
return gcd(a % b,  b % b);  
return gcd(a % b,  b-1);  
return gcd(a % b,  b / a);  
return gcd(a % b,  b / b);  
return gcd(a % b,  a % b);  
return gcd(a % b,  a - b);  
return gcd(a % b,  b - b);  
return gcd(a % b,  b >> 1);  
return gcd(a % b,  -b);  
return gcd(a % b,  b / 2);  
return gcd(a % b,  a % b + b);  
return gcd(a % b,  2);  
return gcd(a % b,  b * b);  
return gcd(a % b,  b + a % b);  
return gcd(a % b,  b -1);  
return gcd(a % b,  b >>> 1);  
return gcd(a % b,  b << 1);  
return gcd(a % b,  a + b - 1);  
return gcd(a % b, b);  
return gcd(a % b,  b+1);  
return gcd(a % b,  a >>> b);  
return gcd(a % b,  a/b);  
return gcd(a % b,  b * a);  
return gcd(a % b,  b + b);  
return gcd(a % b,  a % b + 1);  
return gcd(a % b,  b + a);  
return gcd(a % b,  (int) b);  
return gcd(a % b,  a >> b);  
return gcd(a % b,  b); });  
return gcd(a % b,  (a + b) / b);  
return gcd(a % b,  (int)b);  
return gcd(a % b,  a % b - b);  
return gcd(a % b,  -1);  
return gcd(a % b,  b) % (a + b);  
return gcd(a % b,  b + 2);  
return gcd(a % b,  c);  
return gcd(a % b,  a + b % b);  
return gcd(a % b,  b - 2);  
return gcd(a % b,  a >>> 1);  
return gcd(a % b,  2 * b);  
return gcd(a % b,  b-a);  
return gcd(a % b,  (a + b) % b);  
return gcd(a % b,  1 << b);  
return gcd(a % b,  (a + b) >> 1);  
return gcd(a % b,  a ^ b);  
return gcd(a % b,  b, 0);  
return gcd(a % b,  a * b);  
return gcd(a % b,  a % b - 1);  
return gcd(a % b,  10);  
return gcd(a % b,  (b + 1) % b);  
return gcd(a % b,  b, a % b);  
return gcd(a % b,  b * 2);  
return gcd(a % b,  a + b + 1);  
return gcd(a % b,  b) % b);  
return gcd(a % b,  b, 1);  
return gcd(a % b,  a >> 1);  
return gcd(a % b,  a + 1);  
return gcd(a % b,  % b);  
return gcd(a % b,  b, a);  
return gcd(a % b,  (b - a) / b);  
return gcd(a % b,  b * a % b);  
return gcd(a % b,  b) % (b + 1);  
return gcd(a % b,  b + b % b);  
return gcd(a % b,  Integer.MAX_VALUE);  
return gcd(a % b,  b - b % b);  
return gcd(a % b,  a+b);  
return gcd(a % b,  b/a);  
return gcd(a % b,  n);  
return gcd(a % b,  -a);  
return gcd(a % b,  -1 * b);  
return gcd(a % b,  ~~b);  
return gcd(a % b,  b / 10);  
return gcd(a % b,  (a - b) / b);  
return gcd(a % b,  b) / (b + 1);  
return gcd(a % b,  a + b / b);  
return gcd(a % b,  ~b);  
return gcd(a % b,  1 - b);  
return gcd(a % b,  x);  
return gcd(a % b,  a + b * b);  
return gcd(a % b,  b, 2);  
return gcd(a % b,  b) / (a + b);  
return gcd(a % b,  b / a.length);  
return gcd(a % b,  (a + b) >>> 1);  
return gcd(a % b,  b - a / b);  
return gcd(a % b,  b, b);  
return gcd(a % b,  1 + b);  
return gcd(a % b,  (a + b) / 2);  
return gcd(a % b,  c % b);  
return gcd(a % b,  b * a / b);  
return gcd(a % b,  b) / b);  
return gcd(a % b,   b);  
return gcd(a % b,  b - a * b);  
return gcd(a % b,  a, b);  
return gcd(a % b,  3);  
return gcd(a % b,  b/2);  
return gcd(a % b,  b ^ a);  
return gcd(a % b,  i % b);  
return gcd(a % b,  b) / (b - a);  
return gcd(a % b, 1);  
return gcd(a % b,  (1 << b) - 1);  
return gcd(a % b,  -a % b);  
return gcd(a % b,  b - a % b + 1);  
return gcd(a % b,  a - 1);  
return gcd(a % b,  a + b + b);  
return gcd(a % b,  a + b - b);  
return gcd(a % b,  0xff);  
return gcd(a % b,  b / 3);  
return gcd(a % b,  b - c);  
return gcd(a % b,  b & 1);  
return gcd(a % b,  1 << b - 1);  
return gcd(a % b,  b) % (b - a);  
return gcd(a % b,  256);  
return gcd(a % b,  b / 8);  
return gcd(a % b,  b>>1);  
return gcd(a % b,  b) + (a % b);  
return gcd(a % b,  (b - a) >> 1);  
return gcd(a % b,  --b);  
return gcd(a % b,  b > 0);  
return gcd(a % b,  a / b + 1);  
return gcd(a % b,  b % a);  
return gcd(a % b,  2 * b - 1);  
return gcd(a % b,  b / 4);  
return gcd(a % b,  b + b - 1);  
return gcd(a % b,  (b - a) % b);  
return gcd(a % b,  b - a % b - 1);  
return gcd(a % b,  a << 1);  
return gcd(a % b,  Integer.MIN_VALUE);  
return gcd(a % b,  b +1);  
return gcd(a % b,  b/b);  
return gcd(a % b,  1 / b);  
return gcd(a % b,  b - a%b);  
return gcd(a % b,  b - a - b);  
return gcd(a % b,  b) * (a % b);  
return gcd(a % b,  b, a + b);  
return gcd(a % b,  a % b, b);  
return gcd(a % b,  b - b % a);  
return gcd(a % b,  b - a + b);  
return gcd(a % b,  b + a % b + b);  
return gcd(a % b,  255);  
return gcd(a % b,  2 * a);  
return gcd(a % b,  b) ^ (a % b);  
return gcd(a % b,  b - b - 1);  
return gcd(a % b,  b, -1);  
return gcd(a % b,  b / b.length);  
return gcd(a % b,  b - b + 1);  
return gcd(a % b,  b) + a % b);  
return gcd(a % b,  32);  
return gcd(a % b,  4);  
return gcd(a % b,  int);  
return gcd(a % b,  a / b - 1);  
return gcd(a % b,  b + c);  
return gcd(a % b,  a % b >>> 1);  
return gcd(a % b,  a >>> b - 1);  
return gcd(a % b,  b-b);  
return gcd(a % b,  a & b);  
return gcd(a % b,  b) + 1);  
return gcd(a % b, b - 1);  
return gcd(a % b,  a, b - 1);  
return gcd(a % b,  b * a + b);  
return gcd(a % b,  b / b + 1);  
return gcd(a % b,  a -b);  
return gcd(a % b,  32 - b);  
return gcd(a % b,  b, a / b);  
return gcd(a % b,  b - a + 1);  
return gcd(a % b,  BigInteger.ONE);  
return gcd(a % b,  b), gcd(a, b);  
return gcd(a % b,  a - b - 1);  
return gcd(a % b,  10 * b);  
return gcd(a % b,  +b);  
return gcd(a % b,  b - n);  
return gcd(a % b,  i);  
return gcd(a % b,  b ^ 1);  
return gcd(a % b,  b) / (b + a);  
return gcd(a % b,  b * -1);  
return gcd(a % b,  1<<b);  
return gcd(a % b,  b + a * b);  
return gcd(a % b,  b%b);  
return gcd(a % b,  2 * a + b);  
return gcd(a % b,  b % b + 1);  
return gcd(a % b,  (a / b) % b);  
return gcd(a % b,  8);  
return gcd(a % b,  a%b);  
return gcd(a % b,  int(b) - 1);  
return gcd(a % b,  b + a / b);  
return gcd(a % b,  b / 1);  
return gcd(a % b,  a % b * b);  
return gcd(a % b,  .5);  
return gcd(a % b,  (a - b) >> 1);  
return gcd(a % b,  b) ^ a % b);  
return gcd(a % b,  b).intValue() % b);  
return gcd(a % b, b-1);  
return gcd(a % b, b -1);  
return gcd(a % b,  a % b + b - 1);  
return gcd(a % b,  b * 10);  
return gcd(a % b,  a % b + b % b);  
return gcd(a % b,  2*b);  
return gcd(a % b,  a - b + 1);  
return gcd(a % b,  b + 10);  
return gcd(a % b,  b - 3);  
return gcd(a % b,  a >> b - 1);  
return gcd(a % b,  b // a / b);  
return gcd(a % b,  i%b);  
return gcd(a % b,  b / b - 1);  
return gcd(a % b,  (a - b) % b);  
return gcd(a % b,  b + a % b - 1);  
return gcd(a % b,  b - 1 - b);  
return gcd(a % b,  (a / b) - 1);  
return gcd(a % b,  base);  
return gcd(a % b,  b2);  
return gcd(a % b,  0x7fffffff);  
return gcd(a % b,  (a / b) >> 1);  
return gcd(a % b,  ++b);  
return gcd(a % b,  (b - 1) % b);  
return gcd(a % b,  b - 1 - a % b);  
return gcd(a % b,  a % b >> 1);  
return gcd(a % b,  b + a >> 1);  
return gcd(a % b,  b) % (a - b);  
return gcd(a % b,  a.length() - b);  
return gcd(a % b,  (a + 1) % b);  
return gcd(a % b,  d);  
return gcd(a % b,  a + b, b);  
return gcd(a % b,  b) % (b - 1);  
return gcd(a % b,  b) * (a - b);  
return gcd(a % b,  (b - a) / 2);  
return gcd(a % b,  b * b - 1);  
return gcd(a % b,  b) % (1 << b);  
return gcd(a % b,  (int) a);  
return gcd(a % b,  (a / b) + 1);  
return gcd(a % b,  a + b / 2);  
return gcd(a % b,  b) / (a * b);  
return gcd(a % b,  b - a) % b);  
return gcd(a % b,  b) >> 1);  
return gcd(a % b,  b); } });  
return gcd(a % b,  b) * (a / b);  
return gcd(a % b,  (b + 1) / 2);  
return gcd(a % b,  a + b) % b);  
return gcd(a % b,  int)(b / a);  
return gcd(a % b,  b - a - 1);  
return gcd(a % b,  (a / b) >>> 1);  
return gcd(a % b,  b - a % b - b);  
return gcd(a % b, b, 0);  
return gcd(a % b, b, a % b);  
return gcd(a % b, b, a);  
return gcd(a % b, b, 1);  
return gcd(a % b, b, b);  
return gcd(a % b, b, 2);  
return gcd(a % b, b, a + b);  
return gcd(a % b, b, a / b);  
return gcd(a % b, b, -1);  
return gcd(a % b, b, 10);  
return gcd(a % b, b, true);  
return gcd(a % b, b, 8);  
return gcd(a % b, b, a - b);  
return gcd(a % b, b, c);  
return gcd(a % b, b, false);  
return gcd(a % b, b, 4);  
return gcd(a % b, b, 32);  
return gcd(a % b, b, 64);  
return gcd(a % b, b, a, b);  
return gcd(a % b, b, 3);  
return gcd(a % b, b, b + 1);  
return gcd(a % b, b, 16);  
return gcd(a % b, b, a/b);  
return gcd(a % b, b, a >> 1);  
return gcd(a % b, b, a % b + b);  
return gcd(a % b, b, a % b + 1);  
return gcd(a % b, b, b - 1);  
return gcd(a % b, b, a.length);  
return gcd(a % b, b, a + 1);  
return gcd(a % b, b, a >>> 1);  
return gcd(a % b, b, a + b % b);  
return gcd(a % b, b, a%b);  
return gcd(a % b, b, a * b);  
return gcd(a % b, b, a+b);  
return gcd(a % b, b, a == 0);  
return gcd(a % b, b, 256);  
return gcd(a % b, b, b - a);  
return gcd(a % b, b, a << 1);  
return gcd(a % b, b, b % b);  
return gcd(a % b, b, a % b, b);  
return gcd(a % b, b, -b);  
return gcd(a % b, b, k);  
return gcd(a % b, b, n);  
return gcd(a % b, b, x);  
return gcd(a % b, b, 128);  
return gcd(a % b, b, b >> 1);  
return gcd(a % b, b, 7);  
return gcd(a % b, b, a >> b);  
return gcd(a % b, b, a + b - 1);  
return gcd(a % b, b, a != 0);  
return gcd(a % b, b, b - a % b);  
return gcd(a % b, b, 5);  
return gcd(a % b, b, a < 0);  
return gcd(a % b, b, a == b);  
return gcd(a % b, b, i);  
return gcd(a % b, b, % b);  
return gcd(a % b, b, a - 1);  
return gcd(a % b, b, 9);  
return gcd(a % b, b, a > 0);  
return gcd(a % b, b, --b);  
return gcd(a % b, b, N);  
return gcd(a % b, b, RoundingMode.DOWN);  
return gcd(a % b, b, 6);  
return gcd(a % b, b, a & b);  
return gcd(a % b, b, -a);  
return gcd(a % b, b, 100);  
return gcd(a % b, b, 15);  
return gcd(a % b, b, a % b - b);  
return gcd(a % b, b, 0.5);  
return gcd(a % b, b, a+1);  
return gcd(a % b, b, d);  
return gcd(a % b, b, 1024);  
return gcd(a % b, b, a, b + 1);  
return gcd(a % b, b, a == 1);  
return gcd(a % b, b, b-1);  
return gcd(a % b, b, 0, 1);  
return gcd(a % b, b, a.length - b);  
return gcd(a % b, b, a > b);  
return gcd(a % b, b, a % b - 1);  
return gcd(a % b, b, a% b);  
return gcd(a % b, b, a-b);  
return gcd(a % b, b, 12);  
return gcd(a % b, b, base);  
return gcd(a % b, b, a != b);  
return gcd(a % b, b, 1000);  
return gcd(a % b, b, a); });  
return gcd(a % b, b, a + b * b);  
return gcd(a % b, b, a >> 16);  
return gcd(a % b, b, Integer.MAX_VALUE);  
return gcd(a % b, b, a < b);  
return gcd(a % b, b, l);  
return gcd(a % b, b, b+1);  
return gcd(a % b, b, b * b);  
return gcd(a % b, b, RoundingMode.FLOOR);  
return gcd(a % b, b, 19);  
return gcd(a % b, b, MAX);  
return gcd(a % b, b, b >>> 1);  
return gcd(a % b, b, a ^ b);  
return gcd(a % b, b, radix);  
return gcd(a % b, b, a + b / b);  
return gcd(a % b, b, 0, a);  
return gcd(a % b, b, a + b + b);  
return gcd(a % b, b, a + b >> 1);  
return gcd(a % b, b, a >> 32);  
return gcd(a % b, b, a >> 3);  
return gcd(a % b, b, a >= 0);  
return gcd(a % b, b, m);  
return gcd(a % b, b, 11);  
return gcd(a % b, b, a, 1);  
return gcd(a % b, b, a == a);  
return gcd(a % b, b,0);  
return gcd(a % b, b, MAX_INT);  
return gcd(a % b, b, a + b + 1);  
return gcd(a % b, b, B);  
return gcd(a % b, b, a.length / b);  
return gcd(a % b, b, s);  
return gcd(a % b, b, a >>> b);  
return gcd(a % b, b, b + a);  
return gcd(a % b, b, b - b);  
return gcd(a % b, b, a - b % b);  
return gcd(a % b, b, b, a);  
return gcd(a % b, b, 0, b);  
return gcd(a % b, b,1);  
return gcd(a % b, b, a % b * b);  
return gcd(a % b, b, 30);  
return gcd(a % b, b, Math.MaxInt32);  
return gcd(a % b, b, a >>> 32);  
return gcd(a % b, b, b + a % b);  
return gcd(a % b, b, bitOrder);  
return gcd(a % b, b, 2 * a);  
return gcd(a % b, b, -a % b);  
return gcd(a % b, b, this);  
return gcd(a % b, b, A);  
return gcd(a % b, b, b, b);  
return gcd(a % b, b, a - a);  
return gcd(a % b, b, a >> 8);  
return gcd(a % b, b, a >> i);  
return gcd(a % b, b, M);  
return gcd(a % b, b, null);  
return gcd(a % b, b, a % b % b);  
return gcd(a % b, b, b-a);  
return gcd(a % b, b, S);  
return gcd(a % b, b, 31);  
return gcd(a % b, b, b / a);  
return gcd(a % b, b, gcd(a, b);  
return gcd(a % b, b, 2 * b);  
return gcd(a % b, b, a >> 2);  
return gcd(a % b, b, h);  
return gcd(a % b, b, RANDOM);  
return gcd(a % b, b, MathContext.ONE);  
return gcd(a % b, b, z);  
return gcd(a % b, b, 20);  
return gcd(a % b, b, 0, 0);  
return gcd(a % b, b, r);  
return gcd(a % b, b, 0xff);  
return gcd(a % b, b, a.length - 1);  
return gcd(a % b, b, 10000);  
return gcd(a % b, b, greatestOrder);  
return gcd(a % b, b, Math.max);  
return gcd(a % b, b, a, b - 1);  
return gcd(a % b, b, a >> 31);  
return gcd(a % b, b, q);  
return gcd(a % b, b, 255);  
return gcd(a % b, b, b << 1);  
return gcd(a % b, b, GCD);  
return gcd(a % b, b, a, b - b);  
return gcd(a % b, b, a + b - b);  
return gcd(a % b, b, a - a % b);  
return gcd(a % b, b, Math.MAX_VALUE);  
return gcd(a % b, b, modOrder);  
return gcd(a % b, b, c1);  
return gcd(a % b, b, p);  
return gcd(a % b, b, a <= b);  
return gcd(a % b, b, a >>> 16);  
return gcd(a % b, b, zero);  
return gcd(a % b, b, 24);  
return gcd(a % b, b, b * a);  
return gcd(a % b, b, MAXINT);  
return gcd(a % b, b, a.length % b);  
return gcd(a % b, b, a, 0);  
return gcd(a % b, b, b + b);  
return gcd(a % b, b, b * 2);  
return gcd(a % b, b, Infinity);  
return gcd(a % b, b, c % b);  
return gcd(a % b, b, 36);  
return gcd(a % b, b, a >> 5);  
return gcd(a % b, b, a-1);  
return gcd(a % b, b, j);  
return gcd(a % b, b, a % b >>> 1);  
return gcd(a % b, b, ROUND_FACTOR);  
return gcd(a % b, b, order);  
return gcd(a % b, b, gcd);  
return gcd(a % b, b, b, 0);  
return gcd(a % b, b, a << 3);  
return gcd(a % b, b, TRUE);  
return gcd(a % b, b, a - b - 1);  
return gcd(a % b, b, result);  
return gcd(a % b, b, a -b);  
return gcd(a % b, b, a*b);  
return gcd(a % b, b, a % b+1);  
return gcd(a % b, b, a, b % b);  
return gcd(a % b, b, a - b + 1);  
return gcd(a % b, b, a + a % b);  
return gcd(a % b, b,2);  
return gcd(a % b, b, a & 1);  
return gcd(a % b, b, b + 2);  
return gcd(a % b, b, a>>1);  
return gcd(a % b, b, byteOrder);  
return gcd(a % b, b, a << b);  
return gcd(a % b, b, a, a + b);  
return gcd(a % b, b, 0, a.length);  
return gcd(a % b, b, b, a % b);  
return gcd(a % b, b, -2);  
return gcd(a % b, b, modInverse);  
return gcd(a % b, b, a >> n);  
return gcd(a % b, b, .5);  
return gcd(a % b, b, a >> b - 1);  
return gcd(a % b, b, &a);  
return gcd(a % b, b, a, a);  
return gcd(a % b, b, C);  
return gcd(a % b, b, ROUND_DOWN);  
return gcd(a % b, b, mod);  
return gcd(a % b, b, !b);  
return gcd(a % b, b, ctx);  
return gcd(a % b, b, a.length-b);  
return gcd(a % b, b, ~b);  
return gcd(a % b, b, b); });  
return gcd(a % b, b, b / b);  
return gcd(a % b, b, Math.E);  
return gcd(a % b, b, a, b + b);  
return gcd(a % b, b, --a);  
return gcd(a % b, b, D);  
return gcd(a % b, b, 13);  
return gcd(a % b, b, a >>> 3);  
return gcd(a % b, b, 0xffff);  
return gcd(a % b, b, 32 - b);  
return gcd(a % b, b, a / b + 1);  
return gcd(a % b, b, a, b, b);  
return gcd(a % b, b, H);  
return gcd(a % b, b, a * b % b);  
return gcd(a % b, b, P);  
return gcd(a % b, b, a >> 63);  
return gcd(a % b, b, 64 - a % b);  
return gcd(a % b, b, 62);  
return gcd(a % b, b, MAX_VALUE);  
return gcd(a % b, b, Complex);  
return gcd(a % b, b, b / 2);  
return gcd(a % b, b, a & ~b);  
return gcd(a % b, b, g);  
return gcd(a % b, b, +1);  
return gcd(a,a % b, b);  
return gcd(0,a % b, b);  
return gcd(a % b,a % b, b);  
return gcd(a / b,a % b, b);  
return gcd(1,a % b, b);  
return gcd(b,a % b, b);  
return gcd(a - b,a % b, b);  
return gcd(a * b,a % b, b);  
return gcd(a/b,a % b, b);  
return gcd(a + b,a % b, b);  
return gcd(a + 1,a % b, b);  
return gcd(int,a % b, b);  
return gcd(a << 1,a % b, b);  
return gcd(a >> 1,a % b, b);  
return gcd(a >>> 1,a % b, b);  
return gcd(a%b,a % b, b);  
return gcd(a - 1,a % b, b);  
return gcd(2,a % b, b);  
return gcd(b - a,a % b, b);  
return gcd(a % b + 1,a % b, b);  
return gcd(b % a,a % b, b);  
return gcd(a % b - 1,a % b, b);  
return gcd(a ^ b,a % b, b);  
return gcd(a == 0,a % b, b);  
return gcd(a * a,a % b, b);  
return gcd(a < 0,a % b, b);  
return gcd(b * a,a % b, b);  
return gcd(a-b,a % b, b);  
return gcd(b - 1,a % b, b);  
return gcd(a.length,a % b, b);  
return gcd(Math.max,a % b, b);  
return gcd(a*b,a % b, b);  
return gcd(a > 0,a % b, b);  
return gcd(a / b - 1,a % b, b);  
return gcd(a >> b,a % b, b);  
return gcd(256,a % b, b);  
return gcd( a,a % b, b);  
return gcd(x,a % b, b);  
return gcd(Math.floor,a % b, b);  
return gcd(a+b,a % b, b);  
return gcd(c,a % b, b);  
return gcd(a & b,a % b, b);  
return gcd(b-a,a % b, b);  
return gcd(a >>> b,a % b, b);  
return gcd(a % b * b,a % b, b);  
return gcd(a /b,a % b, b);  
return gcd(a,b,a % b, b);  
return gcd(Integer.MAX_VALUE,a % b, b);  
return gcd(BigInteger.ONE,a % b, b);  
return gcd(a != 0,a % b, b);  
return gcd(b + 1,a % b, b);  
return gcd(a % b+1,a % b, b);  
return gcd(a + b - 1,a % b, b);  
return gcd(a % b-1,a % b, b);  
return gcd(3,a % b, b);  
return gcd(Math.max(0,a % b, b);  
return gcd(a -b,a % b, b);  
return gcd(10,a % b, b);  
return gcd(a*a,a % b, b);  
return gcd(a / b + 1,a % b, b);  
return gcd(a,b-1,a % b, b);  
return gcd(a,0,a % b, b);  
return gcd(255,a % b, b);  
return gcd(A,a % b, b);  
return gcd(a * 0.5,a % b, b);  
return gcd(ab,a % b, b);  
return gcd(Math.max(a,a % b, b);  
return gcd(a & 1,a % b, b);  
return gcd(1000,a % b, b);  
return gcd(i,a % b, b);  
return gcd(a+1,a % b, b);  
return gcd(2 * a,a % b, b);  
return gcd(a % b % b,a % b, b);  
return gcd(a & 0xffff,a % b, b);  
return gcd(long,a % b, b);  
return gcd(a >= 0,a % b, b);  
return gcd(n,a % b, b);  
return gcd(a & 0xFFFFFFFF,a % b, b);  
return gcd(b + a,a % b, b);  
return gcd(base,a % b, b);  
return gcd(a,1,a % b, b);  
return gcd(Integer.MIN_VALUE,a % b, b);  
return gcd(b / a,a % b, b);  
return gcd(a % b / b,a % b, b);  
return gcd(a * 2,a % b, b);  
return gcd( a % b,a % b, b);  
return gcd(a^b,a % b, b);  
return gcd(Math.abs(a,a % b, b);  
return gcd(a % b * a,a % b, b);  
return gcd(a % b - b,a % b, b);  
return gcd(a + a,a % b, b);  
return gcd(true,a % b, b);  
return gcd(Long.MAX_VALUE,a % b, b);  
return gcd(b == 0,a % b, b);  
return gcd(byte,a % b, b);  
return gcd(a + 0.5,a % b, b);  
return gcd(a mod b,a % b, b);  
return gcd(a - a,a % b, b);  
return gcd(a + b + 1,a % b, b);  
return gcd(b % b,a % b, b);  
return gcd(a >>> 16,a % b, b);  
return gcd(a/%b,a % b, b);  
return gcd(b * b,a % b, b);  
return gcd(N,a % b, b);  
return gcd(a<<1,a % b, b);  
return gcd(a % b << 1,a % b, b);  
return gcd(a - b - 1,a % b, b);  
return gcd(100,a % b, b);  
return gcd( a,a % b, b);  
return gcd(8,a % b, b);  
return gcd(32,a % b, b);  
return gcd(a <= 0,a % b, b);  
return gcd(Int,a % b, b);  
return gcd(a * 1,a % b, b);  
return gcd(a, 0,a % b, b);  
return gcd(System.identity,a % b, b);  
return gcd(a &b,a % b, b);  
return gcd(a % b + b,a % b, b);  
return gcd(a % 2,a % b, b);  
return gcd(this,a % b, b);  
return gcd(a - b + 1,a % b, b);  
return gcd(a & 0xffffffffL,a % b, b);  
return gcd(a %= b,a % b, b);  
return gcd(0xff,a % b, b);  
return gcd(a / b * a,a % b, b);  
return gcd(0.5,a % b, b);  
return gcd( 0,a % b, b);  
return gcd(a >>> 0,a % b, b);  
return gcd(a + a % b,a % b, b);  
return gcd(a >> 16,a % b, b);  
return gcd(b-1,a % b, b);  
return gcd(a / a,a % b, b);  
return gcd(MAX,a % b, b);  
return gcd(b - a % b,a % b, b);  
return gcd(a, b,a % b, b);  
return gcd(a == 1,a % b, b);  
return gcd(a * 0,a % b, b);  
return gcd(a % a,a % b, b);  
return gcd(a & 0xFF,a % b, b);  
return gcd(a & 0xFFFFFFFFL,a % b, b);  
return gcd(b*a,a % b, b);  
return gcd( a / b,a % b, b);  
return gcd(a//b,a % b, b);  
return gcd(a | 0,a % b, b);  
return gcd(a / b * b,a % b, b);  
return gcd(a % b >> 1,a % b, b);  
return gcd(a-1,a % b, b);  
return gcd(a + 2,a % b, b);  
return gcd(1 - a,a % b, b);  
return gcd(16,a % b, b);  
return gcd(a / 2,a % b, b);  
return gcd(a * a % b,a % b, b);  
return gcd(4,a % b, b);  
return gcd(a & 0xffffffff,a % b, b);  
return gcd(a% b,a % b, b);  
return gcd(9,a % b, b);  
return gcd(a--,a % b, b);  
return gcd(a * b - 1,a % b, b);  
return gcd(a + 0,a % b, b);  
return gcd(a & ~b,a % b, b);  
return gcd(a %b,a % b, b);  
return gcd(b + a % b,a % b, b);  
return gcd(bigInt,a % b, b);  
return gcd(a & 0xffffff,a % b, b);  
return gcd(a, 1,a % b, b);  
return gcd(1-a,a % b, b);  
return gcd(m,a % b, b);  
return gcd(double,a % b, b);  
return gcd(a + b * a,a % b, b);  
return gcd(a > b,a % b, b);  
return gcd(a <= b,a % b, b);  
return gcd(1024,a % b, b);  
return gcd(a>>1,a % b, b);  
return gcd(b > 0,a % b, b);  
return gcd(false,a % b, b);  
return gcd(a >>> 32,a % b, b);  
return gcd(a,b+1,a % b, b);  
return gcd(a < b,a % b, b);  
return gcd(Math.ceil,a % b, b);  
return gcd(a * b + 1,a % b, b);  
return gcd(d,a % b, b);  
return gcd(a +,a % b, b);  
return gcd(input,a % b, b);  
return gcd(a & 0xff,a % b, b);  
return gcd(a % 1,a % b, b);  
return gcd(gcd(a,a % b, b);  
return gcd(Math.min(a,a % b, b);  
return gcd(a + b % b,a % b, b);  
return gcd(a, b-1,a % b, b);  
return gcd(zero,a % b, b);  
return gcd(Math.min,a % b, b);  
return gcd(s,a % b, b);  
return gcd(2*a,a % b, b);  
return gcd(a % b >>> 1,a % b, b);  
return gcd(c1,a % b, b);  
return gcd(a/% b,a % b, b);  
return gcd(b+1,a % b, b);  
return gcd(max(0,a % b, b);  
return gcd(radix,a % b, b);  
return gcd(a - a % b,a % b, b);  
return gcd(a, b - 1,a % b, b);  
return gcd(a >> 32,a % b, b);  
return gcd(0x7FFFFFFF,a % b, b);  
return gcd(a & 0xFFFF,a % b, b);  
return gcd(data,a % b, b);  
return gcd(Math.abs,a % b, b);  
return gcd( 1,a % b, b);  
return gcd(1 << b,a % b, b);  
return gcd(max,a % b, b);  
return gcd(Math.log(a,a % b, b);  
return gcd(Math.ceil(a,a % b, b);  
return gcd(b >> 1,a % b, b);  
return gcd(null,a % b, b);  
return gcd(Integer,a % b, b);  
return gcd(a * a + b,a % b, b);  
return gcd(a & 0xffffffffffff,a % b, b);  
return gcd(a *b,a % b, b);  
return gcd(a / 0.5,a % b, b);  
return gcd(a % b*b,a % b, b);  
return gcd(i % b,a % b, b);  
return gcd( a % b,a % b, b);  
return gcd(z,a % b, b);  
return gcd(a % b -1,a % b, b);  
return gcd(int1,a % b, b);  
return gcd(128,a % b, b);  
return gcd(Math,a % b, b);  
return gcd(a /,a % b, b);  
return gcd(a.length - 1,a % b, b);  
return gcd(a % b * 2,a % b, b);  
return gcd(int64,a % b, b);  
return gcd(B,a % b, b);  
return gcd(a //,a % b, b);  
return gcd(a.x,a % b, b);  
return gcd(b % 2,a % b, b);  
return gcd(a << b,a % b, b);  
return gcd(7,a % b, b);  
return gcd(0xffff,a % b, b);  
return gcd(a % b*a,a % b, b);  
return gcd(int0,a % b, b);  
return gcd(a +b,a % b, b);  
return gcd(Math.floor(a,a % b, b);  
return gcd(a --,a % b, b);  
return gcd(0x7fffffff,a % b, b);  
return gcd(a * b * b,a % b, b);  
return gcd(a * -b,a % b, b);  
return gcd(a,b - 1,a % b, b);  
return gcd(a &,a % b, b);  
return gcd(a %,a % b, b);  
return gcd(ba,a % b, b);  
return gcd(b+a,a % b, b);  
return gcd(a % b, b);  
return gcd(a. % b, b);  
return gcd(a+b % b, b);  
return gcd(a/b % b, b);  
return gcd(a-b % b, b);  
return gcd(a+ % b, b);  
return gcd(a+1 % b, b);  
return gcd(a + a % b, b);  
return gcd(a*a % b, b);  
return gcd(a - a % b, b);  
return gcd( a % b, b);  
return gcd(a+a % b, b);  
return gcd(1 % b, b);  
return gcd(a + b % b, b);  
return gcd(a/b, a % b, b);  
return gcd(a - b % b, b);  
return gcd(a, a % b, b);  
return gcd(a-a % b, b);  
return gcd(a * a % b, b);  
return gcd(a + 1 % b, b);  
return gcd(a - b, a % b, b);  
return gcd(a / b % b, b);  
return gcd(0 % b, b);  
return gcd(a - 1 % b, b);  
return gcd(b % b, b);  
return gcd(int % b, b);  
return gcd(a % b, a % b, b);  
return gcd(a-1 % b, b);  
return gcd(a / b, a % b, b);  
return gcd(a+b, a % b, b);  
return gcd(a+b-1 % b, b);  
return gcd(Math.abs(a % b, b);  
return gcd(a- % b, b);  
return gcd(a-b, a % b, b);  
return gcd(a+c % b, b);  
return gcd(a ^ a % b, b);  
return gcd(a/a % b, b);  
return gcd(a-- % b, b);  
return gcd(a / b - a % b, b);  
return gcd(a + b, a % b, b);  
return gcd(a^b % b, b);  
return gcd(x % b, b);  
return gcd(a / a % b, b);  
return gcd(c % b, b);  
return gcd(a+b*a % b, b);  
return gcd(a/b)*(a % b, b);  
return gcd(Math.floor(a % b, b);  
return gcd(a*b % b, b);  
return gcd(0, a % b, b);  
return gcd(a  % b, b);  
return gcd(a % b % b, b);  
return gcd(a/b-1 % b, b);  
return gcd(a+1, a % b, b);  
return gcd(A % b, b);  
return gcd(a * b % b, b);  
return gcd(a/b*a % b, b);  
return gcd(a^a % b, b);  
return gcd(a) + gcd(a % b, b);  
return gcd(a+b-a % b, b);  
return gcd(a  % b, b);  
return gcd(Math.abs(a) % b, b);  
return gcd(a+b+1 % b, b);  
return gcd( a % b, b);  
return gcd(a) % b, b);  
return gcd(a + b - 1 % b, b);  
return gcd(a/ % b, b);  
return gcd(a-c % b, b);  
return gcd(a) - gcd(a % b, b);  
return gcd(a/b-a % b, b);  
return gcd(a[0] % b, b);  
return gcd(a* % b, b);  
return gcd(1, a % b, b);  
return gcd(a-b-1 % b, b);  
return gcd(a ^ b % b, b);  
return gcd(a / b + a % b, b);  
return gcd(a + b-1 % b, b);  
return gcd(a-.a % b, b);  
return gcd(Math.ceil(a % b, b);  
return gcd(a / b - 1 % b, b);  
return gcd(a++ % b, b);  
return gcd(a + c % b, b);  
return gcd(a/b+1 % b, b);  
return gcd(a.length % b, b);  
return gcd(a + 1, a % b, b);  
return gcd(int) (a % b, b);  
return gcd(i % b, b);  
return gcd(1+a % b, b);  
return gcd(a+2 % b, b);  
return gcd(a/b)(a % b, b);  
return gcd(a * b, a % b, b);  
return gcd(a + b*a % b, b);  
return gcd(a*b, a % b, b);  
return gcd(a% b, a % b, b);  
return gcd(a*a+b % b, b);  
return gcd(a) / gcd(a % b, b);  
return gcd(a % b - a % b, b);  
return gcd(a%b, a % b, b);  
return gcd(a/b - a % b, b);  
return gcd(a/2 % b, b);  
return gcd(2 % b, b);  
return gcd(a*a, a % b, b);  
return gcd(inta % b, b);  
return gcd(a) * gcd(a % b, b);  
return gcd(a-1, a % b, b);  
return gcd(a<mask1>a % b, b);  
return gcd(a ^ b, a % b, b);  
return gcd(a - 1, a % b, b);  
return gcd(Int % b, b);  
return gcd(a/b)+a % b, b);  
return gcd(a_ % b, b);  
return gcd(a // a % b, b);  
return gcd(int)(a % b, b);  
return gcd(intA % b, b);  
return gcd(a%b % b, b);  
return gcd(a/b)*a % b, b);  
return gcd(1-a % b, b);  
return gcd(a+b+a % b, b);  
return gcd(ab % b, b);  
return gcd(a-b)*(a % b, b);  
return gcd(a2 % b, b);  
return gcd(a,a % b, b);  
return gcd(a + 2 % b, b);  
return gcd(a/b); } % b, b);  
return gcd(a+1.0 % b, b);  
return gcd(n % b, b);  
return gcd(b-a % b, b);  
return gcd(a.x % b, b);  
return gcd(a - b - 1 % b, b);  
return gcd(a + b - a % b, b);  
return gcd(int(a % b, b);  
return gcd(a - b-1 % b, b);  
return gcd(a % b + a % b, b);  
return gcd(a | a % b, b);  
return gcd(s % b, b);  
return gcd(long % b, b);  
return gcd(a -- % b, b);  
return gcd(a._ % b, b);  
return gcd(a + a. % b, b);  
return gcd(a*a+a % b, b);  
return gcd(a/b+a % b, b);  
return gcd(a/b + a % b, b);  
return gcd(a // % b, b);  
return gcd(a.abs() % b, b);  
return gcd(a[-1] % b, b);  
return gcd(d % b, b);  
return gcd(a + b * a % b, b);  
return gcd(a . % b, b);  
return gcd(Math. % b, b);  
return gcd(a % b - 1 % b, b);  
return gcd(a/* % b, b);  
return gcd(a+x % b, b);  
return gcd(a / b-1 % b, b);  
return gcd(a)+gcd(a % b, b);  
return gcd(a * b - a % b, b);  
return gcd(int(a) % b, b);  
return gcd(a/b, 1 % b, b);  
return gcd(a - c % b, b);  
return gcd(a + gcd(a % b, b);  
return gcd(a^b, a % b, b);  
return gcd(a+b)*(a % b, b);  
return gcd(a<<1, a % b, b);  
return gcd(Integer.MAX_VALUE % b, b);  
return gcd(a + b + a % b, b);  
return gcd(255 % b, b);  
return gcd(a / b * a % b, b);  
return gcd(BigInteger.ONE % b, b);  
return gcd(a1 % b, b);  
return gcd(a)-gcd(a % b, b);  
return gcd(a - b)*(a % b, b);  
return gcd(a * a + a % b, b);  
return gcd(a*a + a % b, b);  
return gcd(float64(a) % b, b);  
return gcd(int64(a) % b, b);  
return gcd(a % b-1 % b, b);  
return gcd(a, a + a % b, b);  
return gcd(r % b, b);  
return gcd(a * a, a % b, b);  
return gcd(a/b,a % b, b);  
return gcd(a.0 % b, b);  
return gcd(a*a*a % b, b);  
return gcd(a=a % b, b);  
return gcd(a.intValue() % b, b);  
return gcd(a+b); } % b, b);  
return gcd(a[b-1] % b, b);  
return gcd(a+0.5 % b, b);  
return gcd(a * b + a % b, b);  
return gcd(a / 2 % b, b);  
return gcd(a, a+a % b, b);  
return gcd(256 % b, b);  
return gcd(a+' % b, b);  
return gcd(a - b*a % b, b);  
return gcd(a - b + a % b, b);  
return gcd(a*b-a % b, b);  
return gcd(100 % b, b);  
return gcd(10 % b, b);  
return gcd(a - a, a % b, b);  
return gcd(int1 % b, b);  
return gcd(a << 1, a % b, b);  
return gcd(a, -a % b, b);  
return gcd(l % b, b);  
return gcd(aa % b, b);  
return gcd(a+a*a % b, b);  
return gcd(a, a. % b, b);  
return gcd(a + a*a % b, b);  
return gcd(a/b - 1 % b, b);  
return gcd(a-b+1 % b, b);  
return gcd(a / b + 1 % b, b);  
return gcd(v % b, b);  
return gcd(a() % b, b);  
return gcd(alpha % b, b);  
return gcd(a ^ b ^ a % b, b);  
return gcd(double % b, b);  
return gcd(input % b, b);  
return gcd(a+b)/(a % b, b);  
return gcd(a-b)/(a % b, b);  
return gcd(Math.max(a % b, b);  
return gcd(u % b, b);  
return gcd(a); % b, b);  
return gcd(data % b, b);  
return gcd(a^ % b, b);  
return gcd(3 % b, b);  
return gcd(one % b, b);  
return gcd(0xff % b, b);  
return gcd(a... % b, b);  
return gcd(a.. % b, b);  
return gcd(a + b); } % b, b);  
return gcd(a / b); } % b, b);  
return gcd(base % b, b);  
return gcd(rand % b, b);  
return gcd(Math.abs(a)) % b, b);  
return gcd(a - b); } % b, b);  
return gcd(value % b, b);  
return gcd(m % b, b);  
return gcd(an % b, b);  
return gcd(1000 % b, b);  
return gcd(result % b, b);  
return gcd(p % b, b);  
return gcd(z % b, b);  
return gcd(a) + gcd(b % b, b);  
return gcd( % b, b);  
return gcd(Math.floorDiv(a % b, b);  
return gcd(h % b, b);  
return gcd(4 % b, b);  
return gcd(num % b, b);  
return gcd(array % b, b);  
return gcd(number % b, b);  
return gcd(t % b, b);  
return gcd(Math.floor(a)+ % b, b);  
return gcd(a, a+b) % b, b);  
return gcd(Math.abs(a)+ % b, b);  
return gcd(a %  b, b);  
return gcd(a %  b + 1, b);  
return gcd(a %  b - 1, b);  
return gcd(a %  a, b);  
return gcd(a %  b, a / b, b);  
return gcd(a %  2, b);  
return gcd(a %  b, 1, b);  
return gcd(a %  b * b, b);  
return gcd(a %  b, a, b);  
return gcd(a %  b / b, b);  
return gcd(a %  b + b, b);  
return gcd(a %  b, a % b, b);  
return gcd(a %  b * a, b);  
return gcd(a %  b, b - 1, b);  
return gcd(a %  b - b, b);  
return gcd(a %  1, b);  
return gcd(a %  b, 0, b);  
return gcd(a %  b % b, b);  
return gcd(a %  b << 1, b);  
return gcd(a %  b, b, b);  
return gcd(a %  b + a, b);  
return gcd(a %  b, a + b, b);  
return gcd(a %  b / 2, b);  
return gcd(a %  b * 2, b);  
return gcd(a %  10, b);  
return gcd(a %  b >> 1, b);  
return gcd(a %  b - a, b);  
return gcd(a %  b / a, b);  
return gcd(a %  b + a % b, b);  
return gcd(a %  b, b + 1, b);  
return gcd(a %  b, a + 1, b);  
return gcd(a %  x, b);  
return gcd(a %  b >>> 1, b);  
return gcd(a % b, b);  
return gcd(a %  b+1, b);  
return gcd(a %  b + 2, b);  
return gcd(a %  b, a >> 1, b);  
return gcd(a %  b, 2, b);  
return gcd(a %  -b, b);  
return gcd(a %  c, b);  
return gcd(a %  b, b - a, b);  
return gcd(a %  b-1, b);  
return gcd(a %  3, b);  
return gcd(a %  (int) b, b);  
return gcd(a %  0, b);  
return gcd(a %  b, a >>> 1, b);  
return gcd(a %  32, b);  
return gcd(a %  b * 10, b);  
return gcd(a %  255, b);  
return gcd(a %  n, b);  
return gcd(a %  b ^ a, b);  
return gcd(a %  b * 1, b);  
return gcd(a %  0x100, b);  
return gcd(a %  b, a/b, b);  
return gcd(a %  b, a - b, b);  
return gcd(a %  4, b);  
return gcd(a %  b - a % b, b);  
return gcd(a %  (int)b, b);  
return gcd(a %  b.x, b);  
return gcd(a %  256, b);  
return gcd(a %  b) / gcd(a, b);  
return gcd(a %  b, a - 1, b);  
return gcd(a %  b ^ b, b);  
return gcd(a %  b, b-1, b);  
return gcd(a %  64, b);  
return gcd(a %  b > 0, b);  
return gcd(a %  b, 2 * a, b);  
return gcd(a %  Integer.MAX_VALUE, b);  
return gcd(a %  b == 0, b);  
return gcd(a %  b * a % b, b);  
return gcd(a %  b / 10, b);  
return gcd(a %  b, b % b, b);  
return gcd(a %  b); }, b);  
return gcd(a %  b, -1, b);  
return gcd(a %  b, b / a, b);  
return gcd(a %  b.2, b);  
return gcd(a %  B, b);  
return gcd(a %   b, b);  
return gcd(a %  b, b * a, b);  
return gcd(a %  b, b / 2, b);  
return gcd(a %  b % a, b);  
return gcd(a %  b, 10, b);  
return gcd(a %  b , b);  
return gcd(a %  b - 2, b);  
return gcd(a %  base, b);  
return gcd(a %  b + 10, b);  
return gcd(a %  b ^ a % b, b);  
return gcd(a %  b, 2 * b, b);  
return gcd(a %  b, a * b, b);  
return gcd(a %  (b + 1), a, b);  
return gcd(a %  b + b * a, b);  
return gcd(a %  b -1, b);  
return gcd(a %  BigInteger.ONE, b);  
return gcd(a %  b2, b);  
return gcd(a %  (double) b, b);  
return gcd(a %  b, b); }, b);  
return gcd(a %  b, b * b, b);  
return gcd(a %  b) / gcd(b, b);  
return gcd(a %  b ^ 1, b);  
return gcd(a %  b*a, b);  
return gcd(a %  ~b, b);  
return gcd(a %  1, 1, b);  
return gcd(a %  a + b, b);  
return gcd(a %  b, 0xff, b);  
return gcd(a %  b + a / b, b);  
return gcd(a %  b.length, b);  
return gcd(a %  b, c, b);  
return gcd(a %  b) * gcd(a, b);  
return gcd(a %  b ^ a >> 1, b);  
return gcd(a %  b, -b, b);  
return gcd(a %  b , b);  
return gcd(a %  8, b);  
return gcd(a %  b * 8, b);  
return gcd(a %  b / 100, b);  
return gcd(a %  b * 3, b);  
return gcd(a %  d, b);  
return gcd(a %  b != 0, b);  
return gcd(a %  b, b - b, b);  
return gcd(a %  b & 1, b);  
return gcd(a %  b, b >> 1, b);  
return gcd(a %  b) % gcd(a, b);  
return gcd(a %  b, a / 2, b);  
return gcd(a %  b + b - 1, b);  
return gcd(a %  b, b * 2, b);  
return gcd(a %  5, b);  
return gcd(a %  b * 0.5, b);  
return gcd(a %  b + c, b);  
return gcd(a %  b * a / b, b);  
return gcd(a %  b, -a, b);  
return gcd(a %  b * 256, b);  
return gcd(a %  b % 2, b);  
return gcd(a %  b / 1, b);  
return gcd(a %  b, (int) b, b);  
return gcd(a %  0xff, b);  
return gcd(a %  b.1, b);  
return gcd(a %  100, b);  
return gcd(a %  b/b, b);  
return gcd(a %  b + a * b, b);  
return gcd(a %  two, b);  
return gcd(a %  b*b, b);  
return gcd(a %  a + 1, b);  
return gcd(a %  b_1, b);  
return gcd(a %  m, b);  
return gcd(a %  b) + gcd(a, b);  
return gcd(a %  1000, b);  
return gcd(a %  b, (int) a, b);  
return gcd(a %  0x100000000, b);  
return gcd(a %  b1, b);  
return gcd(a %  128, b);  
return gcd(a %  (b + 1), b, b);  
return gcd(a %  b + 4, b);  
return gcd(a %  b * 4, b);  
return gcd(a %  (double)b, b);  
return gcd(a %  b * -1, b);  
return gcd(a %  (b + 1), 1, b);  
return gcd(a %  b + 0.5, b);  
return gcd(a %  0xFF, b);  
return gcd(a %  b +1, b);  
return gcd(a %  b.chr, b);  
return gcd(a %  b) - gcd(a, b);  
return gcd(a %  b+b, b);  
return gcd(a %  b, ~b, b);  
return gcd(a %  16, b);  
return gcd(a %  b0, b);  
return gcd(a %  b, 32, b);  
return gcd(a %  x, x, b);  
return gcd(a %  0x7fffffff, b);  
return gcd(a %  b) % gcd(b, b);  
return gcd(a %  b % 1, b);  
return gcd(a %  b / 4, b);  
return gcd(a %  b, 1 - b, b);  
return gcd(a %  b/2, b);  
return gcd(a %  0b, b);  
return gcd(a %  b < 0, b);  
return gcd(a %  b, 8, b);  
return gcd(a %  b - 1, 1, b);  
return gcd(a %  b, 4, b);  
return gcd(a %  b) + gcd(b, b);  
return gcd(a %  0.5, b);  
return gcd(a %  b, 3, b);  
return gcd(a %  b * c, b);  
return gcd(a %  b, 256, b);  
return gcd(a %  b || 0, b);  
return gcd(a %  b, b / b, b);  
return gcd(a %  b, 0xffff, b);  
return gcd(a %  b + a >> 1, b);  
return gcd(a %  a / b, b);  
return gcd(a %  b <= 0, b);  
return gcd(a %  s, b);  
return gcd(a %  i, b);  
return gcd(a %  b + 1, 1, b);  
return gcd(a %  b, 1 << b, b);  
return gcd(a %  b) * gcd(b, b);  
return gcd(a %  (b - 1), a, b);  
return gcd(a %  b + 32, b);  
return gcd(a %  b + b % b, b);  
return gcd(a %  b, a << 1, b);  
return gcd(a %  a, 1, b);  
return gcd(a %  k, b);  
return gcd(a %  b, b+1, b);  
return gcd(a %  b / b + 1, b);  
return gcd(a %  b * b + 1, b);  
return gcd(a %  b * a + b, b);  
return gcd(a %  b + b + 1, b);  
return gcd(a %  7, b);  
return gcd(a %  z, b);  
return gcd(a %  b * 0x100, b);  
return gcd(a %  1024, b);  
return gcd(a %  a, a / b, b);  
return gcd(a %  b + 1, a, b);  
return gcd(a %  b, 1 + b, b);  
return gcd(a %  b, b >>> 1, b);  
return gcd(a %  p, b);  
return gcd(a %  b + b, a, b);  
return gcd(a %  b, a / a, b);  
return gcd(a %  b - 1, a, b);  
return gcd(a %  15, b);  
return gcd(a %  w, b);  
return gcd(a %  _b, b);  
return gcd(a %  b * a + 1, b);  
return gcd(a %  mod, b);  
return gcd(a %  b++, b);  
return gcd(a %  b;, b);  
return gcd(a %  b, (int)b, b);  
return gcd(a %  num, b);  
return gcd(a %  N, b);  
return gcd(a %  b, 0xFF, b);  
return gcd(a %  radix, b);  
return gcd(a %  b, -1 * a, b);  
return gcd(a %  bi, b);  
return gcd(a %  y, b);  
return gcd(a %  v, b);  
return gcd(a %  b) - gcd(b, b);  
return gcd(a %  l, b);  
return gcd(a %  11, b);  
return gcd(a %  divisor, b);  
return gcd(a %  r, b);  
return gcd(a %  42, b);  
return gcd(a %  g, b);  
return gcd(a %  12, b);  
return gcd(a %  6, b);  
return gcd(a %  30, b);  
return gcd(a %  31, b);  
return gcd(a %  (b - 1), b, b);  
return gcd(a %  20, b);  
return gcd(a %  62, b);  
return gcd(a %  27, b);  
return gcd(a %  A, b);  
return gcd(a %  result, b);  
return gcd(a %  j, b);  
return gcd(a % b,  b);  
return gcd(a % b,  b - 1);  
return gcd(a % b,  b + 1);  
return gcd(a % b,  a + b);  
return gcd(a % b,  1);  
return gcd(a % b,  b - a);  
return gcd(a % b,  a / b);  
return gcd(a % b,  a);  
return gcd(a % b,  b - a % b);  
return gcd(a % b,  0);  
return gcd(a % b,  b % b);  
return gcd(a % b,  b-1);  
return gcd(a % b,  b / a);  
return gcd(a % b,  b / b);  
return gcd(a % b,  a % b);  
return gcd(a % b,  a - b);  
return gcd(a % b,  b - b);  
return gcd(a % b,  b >> 1);  
return gcd(a % b,  -b);  
return gcd(a % b,  b / 2);  
return gcd(a % b,  a % b + b);  
return gcd(a % b,  2);  
return gcd(a % b,  b * b);  
return gcd(a % b,  b + a % b);  
return gcd(a % b,  b -1);  
return gcd(a % b,  b >>> 1);  
return gcd(a % b,  b << 1);  
return gcd(a % b,  a + b - 1);  
return gcd(a % b, b);  
return gcd(a % b,  b+1);  
return gcd(a % b,  a >>> b);  
return gcd(a % b,  a/b);  
return gcd(a % b,  b * a);  
return gcd(a % b,  b + b);  
return gcd(a % b,  a % b + 1);  
return gcd(a % b,  b + a);  
return gcd(a % b,  (int) b);  
return gcd(a % b,  a >> b);  
return gcd(a % b,  b); });  
return gcd(a % b,  (a + b) / b);  
return gcd(a % b,  (int)b);  
return gcd(a % b,  a % b - b);  
return gcd(a % b,  -1);  
return gcd(a % b,  b) % (a + b);  
return gcd(a % b,  b + 2);  
return gcd(a % b,  c);  
return gcd(a % b,  a + b % b);  
return gcd(a % b,  b - 2);  
return gcd(a % b,  a >>> 1);  
return gcd(a % b,  2 * b);  
return gcd(a % b,  b-a);  
return gcd(a % b,  (a + b) % b);  
return gcd(a % b,  1 << b);  
return gcd(a % b,  (a + b) >> 1);  
return gcd(a % b,  a ^ b);  
return gcd(a % b,  b, 0);  
return gcd(a % b,  a * b);  
return gcd(a % b,  a % b - 1);  
return gcd(a % b,  10);  
return gcd(a % b,  (b + 1) % b);  
return gcd(a % b,  b, a % b);  
return gcd(a % b,  b * 2);  
return gcd(a % b,  a + b + 1);  
return gcd(a % b,  b) % b);  
return gcd(a % b,  b, 1);  
return gcd(a % b,  a >> 1);  
return gcd(a % b,  a + 1);  
return gcd(a % b,  % b);  
return gcd(a % b,  b, a);  
return gcd(a % b,  (b - a) / b);  
return gcd(a % b,  b * a % b);  
return gcd(a % b,  b) % (b + 1);  
return gcd(a % b,  b + b % b);  
return gcd(a % b,  Integer.MAX_VALUE);  
return gcd(a % b,  b - b % b);  
return gcd(a % b,  a+b);  
return gcd(a % b,  b/a);  
return gcd(a % b,  n);  
return gcd(a % b,  -a);  
return gcd(a % b,  -1 * b);  
return gcd(a % b,  ~~b);  
return gcd(a % b,  b / 10);  
return gcd(a % b,  (a - b) / b);  
return gcd(a % b,  b) / (b + 1);  
return gcd(a % b,  a + b / b);  
return gcd(a % b,  ~b);  
return gcd(a % b,  1 - b);  
return gcd(a % b,  x);  
return gcd(a % b,  a + b * b);  
return gcd(a % b,  b, 2);  
return gcd(a % b,  b) / (a + b);  
return gcd(a % b,  b / a.length);  
return gcd(a % b,  (a + b) >>> 1);  
return gcd(a % b,  b - a / b);  
return gcd(a % b,  b, b);  
return gcd(a % b,  1 + b);  
return gcd(a % b,  (a + b) / 2);  
return gcd(a % b,  c % b);  
return gcd(a % b,  b * a / b);  
return gcd(a % b,  b) / b);  
return gcd(a % b,   b);  
return gcd(a % b,  b - a * b);  
return gcd(a % b,  a, b);  
return gcd(a % b,  3);  
return gcd(a % b,  b/2);  
return gcd(a % b,  b ^ a);  
return gcd(a % b,  i % b);  
return gcd(a % b,  b) / (b - a);  
return gcd(a % b, 1);  
return gcd(a % b,  (1 << b) - 1);  
return gcd(a % b,  -a % b);  
return gcd(a % b,  b - a % b + 1);  
return gcd(a % b,  a - 1);  
return gcd(a % b,  a + b + b);  
return gcd(a % b,  a + b - b);  
return gcd(a % b,  0xff);  
return gcd(a % b,  b / 3);  
return gcd(a % b,  b - c);  
return gcd(a % b,  b & 1);  
return gcd(a % b,  1 << b - 1);  
return gcd(a % b,  b) % (b - a);  
return gcd(a % b,  256);  
return gcd(a % b,  b / 8);  
return gcd(a % b,  b>>1);  
return gcd(a % b,  b) + (a % b);  
return gcd(a % b,  (b - a) >> 1);  
return gcd(a % b,  --b);  
return gcd(a % b,  b > 0);  
return gcd(a % b,  a / b + 1);  
return gcd(a % b,  b % a);  
return gcd(a % b,  2 * b - 1);  
return gcd(a % b,  b / 4);  
return gcd(a % b,  b + b - 1);  
return gcd(a % b,  (b - a) % b);  
return gcd(a % b,  b - a % b - 1);  
return gcd(a % b,  a << 1);  
return gcd(a % b,  Integer.MIN_VALUE);  
return gcd(a % b,  b +1);  
return gcd(a % b,  b/b);  
return gcd(a % b,  1 / b);  
return gcd(a % b,  b - a%b);  
return gcd(a % b,  b - a - b);  
return gcd(a % b,  b) * (a % b);  
return gcd(a % b,  b, a + b);  
return gcd(a % b,  a % b, b);  
return gcd(a % b,  b - b % a);  
return gcd(a % b,  b - a + b);  
return gcd(a % b,  b + a % b + b);  
return gcd(a % b,  255);  
return gcd(a % b,  2 * a);  
return gcd(a % b,  b) ^ (a % b);  
return gcd(a % b,  b - b - 1);  
return gcd(a % b,  b, -1);  
return gcd(a % b,  b / b.length);  
return gcd(a % b,  b - b + 1);  
return gcd(a % b,  b) + a % b);  
return gcd(a % b,  32);  
return gcd(a % b,  4);  
return gcd(a % b,  int);  
return gcd(a % b,  a / b - 1);  
return gcd(a % b,  b + c);  
return gcd(a % b,  a % b >>> 1);  
return gcd(a % b,  a >>> b - 1);  
return gcd(a % b,  b-b);  
return gcd(a % b,  a & b);  
return gcd(a % b,  b) + 1);  
return gcd(a % b, b - 1);  
return gcd(a % b,  a, b - 1);  
return gcd(a % b,  b * a + b);  
return gcd(a % b,  b / b + 1);  
return gcd(a % b,  a -b);  
return gcd(a % b,  32 - b);  
return gcd(a % b,  b, a / b);  
return gcd(a % b,  b - a + 1);  
return gcd(a % b,  BigInteger.ONE);  
return gcd(a % b,  b), gcd(a, b);  
return gcd(a % b,  a - b - 1);  
return gcd(a % b,  10 * b);  
return gcd(a % b,  +b);  
return gcd(a % b,  b - n);  
return gcd(a % b,  i);  
return gcd(a % b,  b ^ 1);  
return gcd(a % b,  b) / (b + a);  
return gcd(a % b,  b * -1);  
return gcd(a % b,  1<<b);  
return gcd(a % b,  b + a * b);  
return gcd(a % b,  b%b);  
return gcd(a % b,  2 * a + b);  
return gcd(a % b,  b % b + 1);  
return gcd(a % b,  (a / b) % b);  
return gcd(a % b,  8);  
return gcd(a % b,  a%b);  
return gcd(a % b,  int(b) - 1);  
return gcd(a % b,  b + a / b);  
return gcd(a % b,  b / 1);  
return gcd(a % b,  a % b * b);  
return gcd(a % b,  .5);  
return gcd(a % b,  (a - b) >> 1);  
return gcd(a % b,  b) ^ a % b);  
return gcd(a % b,  b).intValue() % b);  
return gcd(a % b, b-1);  
return gcd(a % b, b -1);  
return gcd(a % b,  a % b + b - 1);  
return gcd(a % b,  b * 10);  
return gcd(a % b,  a % b + b % b);  
return gcd(a % b,  2*b);  
return gcd(a % b,  a - b + 1);  
return gcd(a % b,  b + 10);  
return gcd(a % b,  b - 3);  
return gcd(a % b,  a >> b - 1);  
return gcd(a % b,  b // a / b);  
return gcd(a % b,  i%b);  
return gcd(a % b,  b / b - 1);  
return gcd(a % b,  (a - b) % b);  
return gcd(a % b,  b + a % b - 1);  
return gcd(a % b,  b - 1 - b);  
return gcd(a % b,  (a / b) - 1);  
return gcd(a % b,  base);  
return gcd(a % b,  b2);  
return gcd(a % b,  0x7fffffff);  
return gcd(a % b,  (a / b) >> 1);  
return gcd(a % b,  ++b);  
return gcd(a % b,  (b - 1) % b);  
return gcd(a % b,  b - 1 - a % b);  
return gcd(a % b,  a % b >> 1);  
return gcd(a % b,  b + a >> 1);  
return gcd(a % b,  b) % (a - b);  
return gcd(a % b,  a.length() - b);  
return gcd(a % b,  (a + 1) % b);  
return gcd(a % b,  d);  
return gcd(a % b,  a + b, b);  
return gcd(a % b,  b) % (b - 1);  
return gcd(a % b,  b) * (a - b);  
return gcd(a % b,  (b - a) / 2);  
return gcd(a % b,  b * b - 1);  
return gcd(a % b,  b) % (1 << b);  
return gcd(a % b,  (int) a);  
return gcd(a % b,  (a / b) + 1);  
return gcd(a % b,  a + b / 2);  
return gcd(a % b,  b) / (a * b);  
return gcd(a % b,  b - a) % b);  
return gcd(a % b,  b) >> 1);  
return gcd(a % b,  b); } });  
return gcd(a % b,  b) * (a / b);  
return gcd(a % b,  (b + 1) / 2);  
return gcd(a % b,  a + b) % b);  
return gcd(a % b,  int)(b / a);  
return gcd(a % b,  b - a - 1);  
return gcd(a % b,  (a / b) >>> 1);  
return gcd(a % b,  b - a % b - b);  
return gcd(a % b, a / b, b);  
return gcd(a % b, a, b);  
return gcd(a % b + 1, b);  
return gcd(a % b - 1, b);  
return gcd(a % b, 1, b);  
return gcd(a % b, a % b, b);  
return gcd(a % b / b, b);  
return gcd(a % b, b - 1, b);  
return gcd(a % b * b, b);  
return gcd(a % b, 0, b);  
return gcd(a % b, a + b, b);  
return gcd(a % b + b, b);  
return gcd(a % b << 1, b);  
return gcd(a % b, b, b);  
return gcd(a % b - b, b);  
return gcd(a % b - a, b);  
return gcd(a % b * a, b);  
return gcd(a % b, a >> 1, b);  
return gcd(a % b >>> 1, b);  
return gcd(a % b, a + 1, b);  
return gcd(a % b + a, b);  
return gcd(a % b, b - a % b, b);  
return gcd(a % b) / gcd(a, b);  
return gcd(a % b, a % b + 1, b);  
return gcd(a % b, b - a, b);  
return gcd(a % b, b) / gcd(a, b);  
return gcd(a % b, a >>> 1, b);  
return gcd(a % b >> 1, b);  
return gcd(a % b ^ a, b);  
return gcd(a % b, b + 1, b);  
return gcd(a % b + a % b, b);  
return gcd(a % b) / gcd(a % b, b);  
return gcd(a % b-1, b);  
return gcd(a % b, a - b, b);  
return gcd(a % b % b, b);  
return gcd(a % b, a - 1, b);  
return gcd(a % b / a, b);  
return gcd(a % b, b) % gcd(a, b);  
return gcd(a % b, a/b, b);  
return gcd(a % b+1, b);  
return gcd(a % b, b); }, b);  
return gcd(a % b, a + b - 1, b);  
return gcd(a % b - a % b, b);  
return gcd(a % b * 2, b);  
return gcd(a % b, a % b - 1, b);  
return gcd(a % b, b-1, b);  
return gcd(a % b); }, b);  
return gcd(a % b) / gcd(a / b, b);  
return gcd(a % b) % gcd(a, b);  
return gcd(a % b, b) * gcd(a, b);  
return gcd(a % b) + gcd(a / b, b);  
return gcd(a % b) * gcd(a, b);  
return gcd(a % b) / gcd(b, b);  
return gcd(a % b, 2, b);  
return gcd(a % b, a * b, b);  
return gcd(a % b) * gcd(a % b, b);  
return gcd(a % b ^ a % b, b);  
return gcd(a % b, 2 * a, b);  
return gcd(a % b + 2, b);  
return gcd(a % b ^ b, b);  
return gcd(a % b, b * a, b);  
return gcd(a % b, a / b - 1, b);  
return gcd(a % b * a % b, b);  
return gcd(a % b) / gcd(b % a, b);  
return gcd(a % b, b) - gcd(a, b);  
return gcd(a % b, a / b + 1, b);  
return gcd(a % b / 2, b);  
return gcd(a % b, a % b + b, b);  
return gcd(a % b, b % b, b);  
return gcd(a % b, 1) / gcd(a, b);  
return gcd(a % b, gcd(a / b, b);  
return gcd(a % b, b / a, b);  
return gcd(a % b, b) / gcd(b, b);  
return gcd(a % b) * gcd(a / b, b);  
return gcd(a % b ^ a >> 1, b);  
return gcd(a % b) - gcd(a / b, b);  
return gcd(a % b, -a, b);  
return gcd(a % b) - gcd(a % b, b);  
return gcd(a % b, gcd(a >>> 1, b);  
return gcd(a % b) + gcd(a, b);  
return gcd(a % b, 0) / gcd(a, b);  
return gcd(a % b) - gcd(a, b);  
return gcd(a % b, a / b * b, b);  
return gcd(a % b * 10, b);  
return gcd(a % b + b * a, b);  
return gcd(a % b, a + b + 1, b);  
return gcd(a % b, b * b, b);  
return gcd(a % b) + gcd(a % b, b);  
return gcd(a % b) + gcd(b % a, b);  
return gcd(a % b) % gcd(a % b, b);  
return gcd(a % b, -1, b);  
return gcd(a % b, Integer.MAX_VALUE, b);  
return gcd(a % b, b + a % b, b);  
return gcd(a % b, 1) * gcd(a, b);  
return gcd(a % b, 10, b);  
return gcd(a % b, b) + gcd(a, b);  
return gcd(a % b, (int) a, b);  
return gcd(a % b) % gcd(b, b);  
return gcd(a % b + a / b, b);  
return gcd(a % b) - gcd(b % a, b);  
return gcd(a % b, a << 1, b);  
return gcd(a % b * 1, b);  
return gcd(a % b, a + b * b, b);  
return gcd(a % b, -b, b);  
return gcd(a % b, b >> 1, b);  
return gcd(a % b, b / 2, b);  
return gcd(a % b, a % b * b, b);  
return gcd(a % b ^ 1, b);  
return gcd(a % b) / gcd(a + b, b);  
return gcd(a % b + a * b, b);  
return gcd(a % b, a >> b, b);  
return gcd(a % b, a % b >> 1, b);  
return gcd(a % b, 1) % gcd(a, b);  
return gcd(a % b, b);  
return gcd(a % b, (int) b, b);  
return gcd(a % b, gcd(a + b, b);  
return gcd(a % b, a ^ b, b);  
return gcd(a % b1, b);  
return gcd(a % b + b - 1, b);  
return gcd(a % b2, b);  
return gcd(a % b/b, b);  
return gcd(a % b - 2, b);  
return gcd(a % b == 0, b);  
return gcd(a % b, a + b) % b, b);  
return gcd(a % b) * gcd(b, b);  
return gcd(a % b, a + b % b, b);  
return gcd(a % b > 0, b);  
return gcd(a % b, 0) * gcd(a, b);  
return gcd(a % b * a / b, b);  
return gcd(a % b_1, b);  
return gcd(a % b) % gcd(a / b, b);  
return gcd(a % b, 2 * b, b);  
return gcd(a % b, 0) + gcd(a, b);  
return gcd(a % b, 1 - a % b, b);  
return gcd(a % b & 1, b);  
return gcd(a % b + 10, b);  
return gcd(a % b*a, b);  
return gcd(a % b, 1) - gcd(a, b);  
return gcd(a % b) + gcd(b, b);  
return gcd(a % b, 2 * a % b, b);  
return gcd(a % b, 1) + gcd(a, b);  
return gcd(a % b, a % b >>> 1, b);  
return gcd(a % b, a.length() - 1, b);  
return gcd(a % b, ~b, b);  
return gcd(a % b, 0xff, b);  
return gcd(a % b, a % b - b, b);  
return gcd(a % b) * gcd(b % a, b);  
return gcd(a % b, b+1, b);  
return gcd(a % b, -a % b, b);  
return gcd(a % b, b * 2, b);  
return gcd(a % b, 0) % gcd(a, b);  
return gcd(a % b+b, b);  
return gcd(a % b, a + b); }, b);  
return gcd(a % b + b % b, b);  
return gcd(a % b, 1 << b - 1, b);  
return gcd(a % b, a / b); }, b);  
return gcd(a % b, 0) - gcd(a, b);  
return gcd(a % b, b - b, b);  
return gcd(a % b, a / a, b);  
return gcd(a % b, b-a, b);  
return gcd(a % b, b) % gcd(b, b);  
return gcd(a % b) % gcd(b % a, b);  
return gcd(a % b0, b);  
return gcd(a % b, 1) / gcd(b, b);  
return gcd(a % b, a + b / b, b);  
return gcd(a % b, 1) / gcd(1, b);  
return gcd(a % b, a + a % b, b);  
return gcd(a % b, c, b);  
return gcd(a % b, a + b / 2, b);  
return gcd(a % b, gcd(a >> 1, b);  
return gcd(a % b -1, b);  
return gcd(a % b) ^ gcd(a / b, b);  
return gcd(a % b, ~a, b);  
return gcd(a % b, 1); }, b);  
return gcd(a % b, a%b, b);  
return gcd(a % b, a / 2, b);  
return gcd(a % b, -1 * a, b);  
return gcd(a % b - a / b, b);  
return gcd(a % b, 0xffff, b);  
return gcd(a % b, 0); }, b);  
return gcd(a % b , b);  
return gcd(a % b) ^ gcd(a, b);  
return gcd(a % b, b / b, b);  
return gcd(a % b.x, b);  
return gcd(a % b, % b, b);  
return gcd(a % b + b, a % b, b);  
return gcd(a % b + 0.5, b);  
return gcd(a % b ^ a >> b, b);  
return gcd(a % b, c % b, b);  
return gcd(a % b) + gcd(a >>> 1, b);  
return gcd(a % b, 1) * gcd(1, b);  
return gcd(a % b, a - b - 1, b);  
return gcd(a % b) / gcd(a * b, b);  
return gcd(a % b) ^ gcd(a % b, b);  
return gcd(a % b, 0x7fffffff, b);  
return gcd(a % b, a % b); }, b);  
return gcd(a % b, 0) / gcd(0, b);  
return gcd(a % b << a, b);  
return gcd(a % b, b << 1, b);  
return gcd(a % b, b + a, b);  
return gcd(a % b + a >> 1, b);  
return gcd(a % b, 2*a, b);  
return gcd(a % b / 10, b);  
return gcd(a % b, (int)a, b);  
return gcd(a % b | 0, b);  
return gcd(a % b, a); }, b);  
return gcd(a % b) - gcd(b, b);  
return gcd(a % b << b, b);  
return gcd(a % b, 1 - b, b);  
return gcd(a % b, b >>> 1, b);  
return gcd(a % b, a+b, b);  
return gcd(a % b) * gcd(b % b, b);  
return gcd(a % b, b * a % b, b);  
return gcd(a % b*b, b);  
return gcd(a % b, b) ^ gcd(a, b);  
return gcd(a % b || 0, b);  
return gcd(a % b - b * a, b);  
return gcd(a % b - b % b, b);  
return gcd(a % b & a, b);  
return gcd(a % b - a * b, b);  
return gcd(a % b, 256, b);  
return gcd(a % b, b) * gcd(b, b);  
return gcd(a % b, a % b << 1, b);  
return gcd(a % b, 1) * gcd(b, b);  
return gcd(a % b, gcd(a % b, b);  
return gcd(a % b, a + a, b);  
return gcd(a % b, 0) / gcd(b, b);  
return gcd(a % b - 1, 1, b);  
return gcd(a % b) + gcd(b / a, b);  
return gcd(a % b, Integer.MIN_VALUE, b);  
return gcd(a % b, 0x7FFFFFFF, b);  
return gcd(a % b, 2 * b - 1, b);  
return gcd(a % b, b * a / b, b);  
return gcd(a % b) + gcd(a >>> b, b);  
return gcd(a % b, 2 * a / b, b);  
return gcd(a % b, 3, b);  
return gcd(a % b + c, b);  
return gcd(a % b, 2) * gcd(a, b);  
return gcd(a % b<<1, b);  
return gcd(a % b, Math.max(a, b);  
return gcd(a % b, 4, b);  
return gcd(a % b, a - b + 1, b);  
return gcd(a % b, b - 1); }, b);  
return gcd(a % b, (int)b, b);  
return gcd(a % b,1, b);  
return gcd(a % b, b) * a % b, b);  
return gcd(a % b) % gcd(a + b, b);  
return gcd(a % b, gcd(b % a, b);  
return gcd(a % b-b, b);  
return gcd(a % b, a % b / b, b);  
if(a==null){return  null;} return gcd(a % b, b);  
if(a==null){return  0;} return gcd(a % b, b);  
if(a==null){return  b;} return gcd(a % b, b);  
if(a==null){return  b;;} return gcd(a % b, b);  
if(a==null){return  null;;} return gcd(a % b, b);  
if(a==null){return  -1;} return gcd(a % b, b);  
if(a==null){return  a;;} return gcd(a % b, b);  
if(a==null){return  a;} return gcd(a % b, b);  
if(a==null){return  -1;;} return gcd(a % b, b);  
if(a==null){return  a % b;} return gcd(a % b, b);  
if(a==null){return  a%b;} return gcd(a % b, b);  
if(a==null){return  0;;} return gcd(a % b, b);  
if(a==null){return  1;} return gcd(a % b, b);  
if(a==null){return  a % b;;} return gcd(a % b, b);  
if(a==null){return  a%b;;} return gcd(a % b, b);  
if(a==null){return  b==0;} return gcd(a % b, b);  
if(a==null){return  a/b;} return gcd(a % b, b);  
if(a==null){return  a*b;} return gcd(a % b, b);  
if(a==null){return  b == 0;} return gcd(a % b, b);  
if(a==null){return  Integer.MAX_VALUE;} return gcd(a % b, b);  
if(a==null){return  1;;} return gcd(a % b, b);  
if(a==null){return  a - b;} return gcd(a % b, b);  
if(a==null){return  a + b;} return gcd(a % b, b);  
if(a==null){return  a==null;} return gcd(a % b, b);  
if(a==null){return  a+b;} return gcd(a % b, b);  
if(a==null){return  a * b;} return gcd(a % b, b);  
if(a==null){return  a==0;} return gcd(a % b, b);  
if(a==null){return  Integer.MIN_VALUE;} return gcd(a % b, b);  
if(a==null){return  false;;} return gcd(a % b, b);  
if(a==null){return  a==b;} return gcd(a % b, b);  
if(a==null){return  -a;} return gcd(a % b, b);  
if(a==null){return 0;} return gcd(a % b, b);  
if(a==null){return  NaN;} return gcd(a % b, b);  
if(a==null){return  zero;} return gcd(a % b, b);  
if(a==null){return  b==null;} return gcd(a % b, b);  
if(a==null){return -1;} return gcd(a % b, b);  
if(a==null){return ;;} return gcd(a % b, b);  
if(a==null){return  false;} return gcd(a % b, b);  
if(a==null){return  a-b;} return gcd(a % b, b);  
if(a==null){return  b; ;} return gcd(a % b, b);  
if(a==null){return  a / b;} return gcd(a % b, b);  
if(a==null){return  a & b;} return gcd(a % b, b);  
if(a==null){return b;} return gcd(a % b, b);  
if(a==null){return  NULL;} return gcd(a % b, b);  
if(a==null){return  a == 0;} return gcd(a % b, b);  
if(a==null){return null;} return gcd(a % b, b);  
if(a==null){return  b+1;} return gcd(a % b, b);  
if(a==null){return  BigInteger.ONE;} return gcd(a % b, b);  
if(a==null){return  b*a;} return gcd(a % b, b);  
if(a==null){return  -1*b;} return gcd(a % b, b);  
if(a==null){return  -a;;} return gcd(a % b, b);  
if(a==null){return  a &b;} return gcd(a % b, b);  
if(a==null){return  b == null;} return gcd(a % b, b);  
if(a==null){return  a == b;} return gcd(a % b, b);  
if(a==null){return  +a;} return gcd(a % b, b);  
if(a==null){return  a == null;} return gcd(a % b, b);  
if(a==null){return  a; ;} return gcd(a % b, b);  
if(a==null){return  a^b;} return gcd(a % b, b);  
if(a==null){return  a*a;} return gcd(a % b, b);  
if(a==null){return  a!=null;} return gcd(a % b, b);  
if(a==null){return  a ^ b;} return gcd(a % b, b);  
if(a==null){return  a*b;;} return gcd(a % b, b);  
if(a==null){return 1;} return gcd(a % b, b);  
if(a==null){return b;;} return gcd(a % b, b);  
if(a==null){return  b==0;;} return gcd(a % b, b);  
if(a==null){return   0;} return gcd(a % b, b);  
if(a==null){return  b != 0;} return gcd(a % b, b);  
if(a==null){return  c;;} return gcd(a % b, b);  
if(a==null){return  null; ;} return gcd(a % b, b);  
if(a==null){return  a != null;} return gcd(a % b, b);  
if(a==null){return  int;} return gcd(a % b, b);  
if(a==null){return -1;;} return gcd(a % b, b);  
if(a==null){return  b+a;} return gcd(a % b, b);  
if(a==null){return  b + 1;} return gcd(a % b, b);  
if(a==null){return  b!=0;} return gcd(a % b, b);  
if(a==null){return  +1;} return gcd(a % b, b);  
if(a==null){return  a % b; ;} return gcd(a % b, b);  
if(a==null){return  b==1;} return gcd(a % b, b);  
if(a==null){return  a % b == 0;} return gcd(a % b, b);  
if(a==null){return  a==0;;} return gcd(a % b, b);  
if(a==null){return  a%b==0;} return gcd(a % b, b);  
if(a==null){return  -Infinity;} return gcd(a % b, b);  
if(a==null){return  b > 0;} return gcd(a % b, b);  
if(a==null){return  a&b;} return gcd(a % b, b);  
if(a==null){return  a/b;;} return gcd(a % b, b);  
if(a==null){return  null; };} return gcd(a % b, b);  
if(a==null){return   null;} return gcd(a % b, b);  
if(a==null){return  a %b;} return gcd(a % b, b);  
if(a==null){return  2;} return gcd(a % b, b);  
if(a==null){return  Long.MAX_VALUE;} return gcd(a % b, b);  
if(a==null){return  b + a;} return gcd(a % b, b);  
if(a==null){return  b - a;} return gcd(a % b, b);  
if(a==null){return  b-1;} return gcd(a % b, b);  
if(a==null){return  b - 1;} return gcd(a % b, b);  
if(a==null){return  a+b;;} return gcd(a % b, b);  
if(a==null){return  b * a;} return gcd(a % b, b);  
if(a==null){return  a + b;;} return gcd(a % b, b);  
if(a==null){return  +b;} return gcd(a % b, b);  
if(a==null){return  b == 0;;} return gcd(a % b, b);  
if(a==null){return  a.length;;} return gcd(a % b, b);  
if(a==null){return  a==null;;} return gcd(a % b, b);  
if(a==null){return a;} return gcd(a % b, b);  
if(a==null){return  b ;;} return gcd(a % b, b);  
if(a==null){return  -b;} return gcd(a % b, b);  
if(a==null){return  a==1;} return gcd(a % b, b);  
if(a==null){return  a & ~b;} return gcd(a % b, b);  
if(a==null){return  -1 ;;} return gcd(a % b, b);  
if(a==null){return  b; };} return gcd(a % b, b);  
if(a==null){return  a|0;} return gcd(a % b, b);  
if(a==null){return  c;} return gcd(a % b, b);  
if(a==null){return  x;} return gcd(a % b, b);  
if(a==null){return  a.length;} return gcd(a % b, b);  
if(a==null){return  10;} return gcd(a % b, b);  
if(a==null){return  undefined;} return gcd(a % b, b);  
if(a==null){return  a * b;;} return gcd(a % b, b);  
if(a==null){return  BigInteger.ZERO;} return gcd(a % b, b);  
if(a==null){return  nil;} return gcd(a % b, b);  
if(a==null){return  zero;;} return gcd(a % b, b);  
if(a==null){return  b == 1;} return gcd(a % b, b);  
if(a==null){return  a|b;} return gcd(a % b, b);  
if(a==null){return  a; };} return gcd(a % b, b);  
if(a==null){return  -1*b;;} return gcd(a % b, b);  
if(a==null){return  a%b; ;} return gcd(a % b, b);  
if(a==null){return  b-a;} return gcd(a % b, b);  
if(a==null){return  a>>>0;} return gcd(a % b, b);  
if(a==null){return  true;} return gcd(a % b, b);  
if(a==null){return  a.signum();;} return gcd(a % b, b);  
if(a==null){return  a<b;} return gcd(a % b, b);  
if(a==null){return  a = 0;} return gcd(a % b, b);  
if(a==null){return  a - b;;} return gcd(a % b, b);  
if(a==null){return  (b==0);;} return gcd(a % b, b);  
if(a==null){return  n;} return gcd(a % b, b);  
if(a==null){return  a == 0;;} return gcd(a % b, b);  
if(a==null){return  a>=b;} return gcd(a % b, b);  
if(a==null){return  a -b;} return gcd(a % b, b);  
if(a==null){return 0;;} return gcd(a % b, b);  
if(a==null){return  a <= b;} return gcd(a % b, b);  
if(a==null){return  a & 0xFF;} return gcd(a % b, b);  
if(a==null){return  0; ;} return gcd(a % b, b);  
if(a==null){return  &b;} return gcd(a % b, b);  
if(a==null){return  -2;} return gcd(a % b, b);  
if(a==null){return  NaN;;} return gcd(a % b, b);  
if(a==null){return  Integer.NaN;} return gcd(a % b, b);  
if(a==null){return  a=0;} return gcd(a % b, b);  
if(a==null){return null;;} return gcd(a % b, b);  
if(a==null){return  a% b;} return gcd(a % b, b);  
if(a==null){return  x;;} return gcd(a % b, b);  
if(a==null){return  - 1;} return gcd(a % b, b);  
if(a==null){return  a > b;} return gcd(a % b, b);  
if(a==null){return  true;;} return gcd(a % b, b);  
if(a==null){return  b/a;} return gcd(a % b, b);  
if(a==null){return  a==b;;} return gcd(a % b, b);  
if(a==null){return  a &amp; b;} return gcd(a % b, b);  
if(a==null){return  a >= b;} return gcd(a % b, b);  
if(a==null){return  this;} return gcd(a % b, b);  
if(a==null){return  a &gt; b;} return gcd(a % b, b);  
if(a==null){return  Double.NaN;} return gcd(a % b, b);  
if(a==null){return  &a;} return gcd(a % b, b);  
if(a==null){return  null;};} return gcd(a % b, b);  
if(a==null){return  a%b == 0;} return gcd(a % b, b);  
if(a==null){return  a>b;} return gcd(a % b, b);  
if(a==null){return  -(b+1);;} return gcd(a % b, b);  
if(a==null){return   null;;} return gcd(a % b, b);  
if(a==null){return  b*a;;} return gcd(a % b, b);  
if(a==null){return  a*a;;} return gcd(a % b, b);  
if(a==null){return  a != 0;} return gcd(a % b, b);  
if(a==null){return  b; };} return gcd(a % b, b);  
if(a==null){return  b <= 0;} return gcd(a % b, b);  
if(a==null){return  null ;;} return gcd(a % b, b);  
if(a==null){return  a-b;;} return gcd(a % b, b);  
if(a==null){return  a%b+1;} return gcd(a % b, b);  
if(a==null){return  a % b != 0;} return gcd(a % b, b);  
if(a==null){return  b++;;} return gcd(a % b, b);  
if(a==null){return  b+1;;} return gcd(a % b, b);  
if(a==null){return  b; ;} return gcd(a % b, b);  
if(a==null){return  +1;;} return gcd(a % b, b);  
if(a==null){return [];;} return gcd(a % b, b);  
if(a==null){return  b >= 0;} return gcd(a % b, b);  
if(a==null){return a;;} return gcd(a % b, b);  
if(a==null){return  b>0;} return gcd(a % b, b);  
if(a==null){return  n;;} return gcd(a % b, b);  
if(a==null){return  255;} return gcd(a % b, b);  
if(a==null){return  void;} return gcd(a % b, b);  
if(a==null){return  b>=0;} return gcd(a % b, b);  
if(a==null){return  -1; ;} return gcd(a % b, b);  
if(a==null){return  b=0;} return gcd(a % b, b);  
if(a==null){return  a!=0;} return gcd(a % b, b);  
if(a==null){return  void 0;} return gcd(a % b, b);  
if(a==null){return  Infinity;} return gcd(a % b, b);  
if(a==null){return  a / b;;} return gcd(a % b, b);  
if(a==null){return  a & 0xff;} return gcd(a % b, b);  
if(a==null){return  ab;} return gcd(a % b, b);  
if(a==null){return   b;} return gcd(a % b, b);  
if(a==null){return  (0);;} return gcd(a % b, b);  
if(a==null){return  b==null;;} return gcd(a % b, b);  
if(a==null){return  a % b % b;} return gcd(a % b, b);  
if(a==null){return  (int)0;} return gcd(a % b, b);  
if(a==null){return  a &;} return gcd(a % b, b);  
if(a==null){return  a %b;;} return gcd(a % b, b);  
if(a==null){return  -Infinity;;} return gcd(a % b, b);  
if(a==null){return  -1 * b;} return gcd(a % b, b);  
if(a==null){return  ZERO;} return gcd(a % b, b);  
if(a==null){return  a & 1;} return gcd(a % b, b);  
if(a==null){return  a+1;} return gcd(a % b, b);  
if(a==null){return  a == null;;} return gcd(a % b, b);  
if(a==null){return 1;;} return gcd(a % b, b);  
if(a==null){return  (a % b);;} return gcd(a % b, b);  
if(a==null){return  99999999;} return gcd(a % b, b);  
if(a==null){return  b ;} return gcd(a % b, b);  
if(a==null){return  b+a;;} return gcd(a % b, b);  
if(a==null){return  b * b;} return gcd(a % b, b);  
if(a==null){return  a.toString();;} return gcd(a % b, b);  
if(a==null){return  a | b;} return gcd(a % b, b);  
if(a==null){return  A;;} return gcd(a % b, b);  
if(a==null){return  b != null;} return gcd(a % b, b);  
if(a==null){return  a.abs();;} return gcd(a % b, b);  
if(a==null){return  a<<1;} return gcd(a % b, b);  
if(a==null){return  "";;} return gcd(a % b, b);  
if(a==null){return  a+b+1;} return gcd(a % b, b);  
if(a==null){return (0);;} return gcd(a % b, b);  
if(a==null){return  a ;;} return gcd(a % b, b);  
if(a==null){return  a = b;} return gcd(a % b, b);  
if(a==null){return  a % b; };} return gcd(a % b, b);  
if(a==null){return  a >>> 1;} return gcd(a % b, b);  
if(a==null){return  a &gt;= b;} return gcd(a % b, b);  
if(a==null){return  a==1;;} return gcd(a % b, b);  
if(a==null){return  Double.NEGATIVE_INFINITY;} return gcd(a % b, b);  
if(a==null){return  --b;} return gcd(a % b, b);  
if(a==null){return  Long.MIN_VALUE;} return gcd(a % b, b);  
if(a==null){return  a; };} return gcd(a % b, b);  
if(a==null){return  b==1;;} return gcd(a % b, b);  
if(a==null){return  a ;} return gcd(a % b, b);  
if(a==null){return  a^b;;} return gcd(a % b, b);  
if(a==null){return  a + b + 1;} return gcd(a % b, b);  
if(a==null){return  -1; };} return gcd(a % b, b);  
if(a==null){return  B;} return gcd(a % b, b);  
if(a==null){return  [];;} return gcd(a % b, b);  
if(a==null){return  ~a;} return gcd(a % b, b);  
if(a==null){return  a % b + b;} return gcd(a % b, b);  
if(a==null){return  b + a;;} return gcd(a % b, b);  
if(a==null){return  null;} else;} return gcd(a % b, b);  
if(a==null){return  (int)b;} return gcd(a % b, b);  
if(a==null){return  b + 1;;} return gcd(a % b, b);  
if(a==null){return  a & (~b);;} return gcd(a % b, b);  
if(a==null){return  (a%b);;} return gcd(a % b, b);  
if(a==null){return  a % b > 0;} return gcd(a % b, b);  
if(a==null){return  a% b;;} return gcd(a % b, b);  
if(a==null){return  null; } ;} return gcd(a % b, b);  
if(a==null){return  null; };} return gcd(a % b, b);  
if(a==null){return  a &lt; b;} return gcd(a % b, b);  
if(a==null){ a=0; } return gcd(a % b, b);  
if(a==null){ a=1; } return gcd(a % b, b);  
if(a==null){ a=b; } return gcd(a % b, b);  
if(a==null){ a=BigInteger.ONE; } return gcd(a % b, b);  
if(a==null){ a=a%b; } return gcd(a % b, b);  
if(a==null){ a= 0; } return gcd(a % b, b);  
if(a==null){ a=BigInteger.ZERO; } return gcd(a % b, b);  
if(a==null){ a=Integer; } return gcd(a % b, b);  
if(a==null){ a=new int; } return gcd(a % b, b);  
if(a==null){ a=a*b; } return gcd(a % b, b);  
if(a==null){ a=A; } return gcd(a % b, b);  
if(a==null){ a=a*a; } return gcd(a % b, b);  
if(a==null){ a=int; } return gcd(a % b, b);  
if(a==null){ a=a>>>1; } return gcd(a % b, b);  
if(a==null){ a=2; } return gcd(a % b, b);  
if(a==null){ a=a; } return gcd(a % b, b);  
if(a==null){ a=a+b; } return gcd(a % b, b);  
if(a==null){ a=B; } return gcd(a % b, b);  
if(a==null){ a=zero; } return gcd(a % b, b);  
if(a==null){ a=a/b; } return gcd(a % b, b);  
if(a==null){ a=i; } return gcd(a % b, b);  
if(a==null){ a=init; } return gcd(a % b, b);  
if(a==null){ a=a>>>0; } return gcd(a % b, b);  
if(a==null){ a=MAX; } return gcd(a % b, b);  
if(a==null){ a=a*0; } return gcd(a % b, b);  
if(a==null){ a= -1; } return gcd(a % b, b);  
if(a==null){ a=a % b; } return gcd(a % b, b);  
if(a==null){ a=256; } return gcd(a % b, b);  
if(a==null){ a=a*2; } return gcd(a % b, b);  
if(a==null){ a=null; } return gcd(a % b, b);  
if(a==null){ a= 1; } return gcd(a % b, b);  
if(a==null){ a=c; } return gcd(a % b, b);  
if(a==null){ a=Math.floor; } return gcd(a % b, b);  
if(a==null){ a=255; } return gcd(a % b, b);  
if(a==null){ a=100; } return gcd(a % b, b);  
if(a==null){ a=BigInteger; } return gcd(a % b, b);  
if(a==null){ a=a*1; } return gcd(a % b, b);  
if(a==null){ a=length; } return gcd(a % b, b);  
if(a==null){ a=num; } return gcd(a % b, b);  
if(a==null){ a= BigInteger.ONE; } return gcd(a % b, b);  
if(a==null){ a=max; } return gcd(a % b, b);  
if(a==null){ a=Int; } return gcd(a % b, b);  
if(a==null){ a=INF; } return gcd(a % b, b);  
if(a==null){ a=a+1; } return gcd(a % b, b);  
if(a==null){ a=1024; } return gcd(a % b, b);  
if(a==null){ a=10; } return gcd(a % b, b);  
if(a==null){ a=N; } return gcd(a % b, b);  
if(a==null){ a=initialValue; } return gcd(a % b, b);  
if(a==null){ a=Math.max; } return gcd(a % b, b);  
if(a==null){ a=Number; } return gcd(a % b, b);  
if(a==null){ a=seed; } return gcd(a % b, b);  
if(a==null){ a=UNDEFINED; } return gcd(a % b, b);  
if(a==null){ a=d; } return gcd(a % b, b);  
if(a==null){ a=n; } return gcd(a % b, b);  
if(a==null){ a=MIN; } return gcd(a % b, b);  
if(a==null){ a=min; } return gcd(a % b, b);  
if(a==null){ a=this; } return gcd(a % b, b);  
if(a==null){ a=3; } return gcd(a % b, b);  
if(a==null){ a=System.identity; } return gcd(a % b, b);  
if(a==null){ a=random; } return gcd(a % b, b);  
if(a==null){ a=360; } return gcd(a % b, b);  
if(a==null){ a=a >>> 1; } return gcd(a % b, b);  
if(a==null){ a=size; } return gcd(a % b, b);  
if(a==null){ a=Math; } return gcd(a % b, b);  
if(a==null){ a=a<<1; } return gcd(a % b, b);  
if(a==null){ a=byte; } return gcd(a % b, b);  
if(a==null){ a=0x10000; } return gcd(a % b, b);  
if(a==null){ a=ONE; } return gcd(a % b, b);  
if(a==null){ a=DEFAULT; } return gcd(a % b, b);  
if(a==null){ a= b; } return gcd(a % b, b);  
if(a==null){ a=C; } return gcd(a % b, b);  
if(a==null){ a=x; } return gcd(a % b, b);  
if(a==null){ a=DEFAULT_A; } return gcd(a % b, b);  
if(a==null){ a=initial; } return gcd(a % b, b);  
if(a==null){ a=0xff; } return gcd(a % b, b);  
if(a==null){ a=ai; } return gcd(a % b, b);  
if(a==null){ a=Math.min; } return gcd(a % b, b);  
if(a==null){ a=value; } return gcd(a % b, b);  
if(a==null){ a=ZERO; } return gcd(a % b, b);  
if(a==null){ a=32; } return gcd(a % b, b);  
if(a==null){ a=a0; } return gcd(a % b, b);  
if(a==null){ a=a-b; } return gcd(a % b, b);  
if(a==null){ a=v; } return gcd(a % b, b);  
if(a==null){ a=a-1; } return gcd(a % b, b);  
if(a==null){ a=constant; } return gcd(a % b, b);  
if(a==null){ a=8; } return gcd(a % b, b);  
if(a==null){ a=a.length; } return gcd(a % b, b);  
if(a==null){ a=minValue; } return gcd(a % b, b);  
if(a==null){ a=base; } return gcd(a % b, b);  
if(a==null){ a=G; } return gcd(a % b, b);  
if(a==null){ a=0; }; } return gcd(a % b, b);  
if(a==null){ a=void; } return gcd(a % b, b);  
if(a==null){ a=0xFF; } return gcd(a % b, b);  
if(a==null){ a=BIGINT; } return gcd(a % b, b);  
if(a==null){ a=I; } return gcd(a % b, b);  
if(a==null){ a=NIL; } return gcd(a % b, b);  
if(a==null){ a=long; } return gcd(a % b, b);  
if(a==null){ a=bi; } return gcd(a % b, b);  
if(a==null){ a=s; } return gcd(a % b, b);  
if(a==null){ a=default_a; } return gcd(a % b, b);  
if(a==null){ a=void 0; } return gcd(a % b, b);  
if(a==null){ a= BigInteger.ZERO; } return gcd(a % b, b);  
if(a==null){ a=1000; } return gcd(a % b, b);  
if(a==null){ a=Math.sqrt; } return gcd(a % b, b);  
if(a==null){ a=bit; } return gcd(a % b, b);  
if(a==null){ a=+a; } return gcd(a % b, b);  
if(a==null){ a=a|0; } return gcd(a % b, b);  
if(a==null){ a=M; } return gcd(a % b, b);  
if(a==null){ a=Double.NaN; } return gcd(a % b, b);  
if(a==null){ a=g; } return gcd(a % b, b);  
if(a==null){ a=Integer.MIN; } return gcd(a % b, b);  
if(a==null){ a=0l; } return gcd(a % b, b);  
if(a==null){ a=NULL; } return gcd(a % b, b);  
if(a==null){ a=new int[]; } return gcd(a % b, b);  
if(a==null){ a=POSITIVE; } return gcd(a % b, b);  
if(a==null){ a=42; } return gcd(a % b, b);  
if(a==null){ a= -a; } return gcd(a % b, b);  
if(a==null){ a=new Integer; } return gcd(a % b, b);  
if(a==null){ a=m; } return gcd(a % b, b);  
if(a==null){ a=0d; } return gcd(a % b, b);  
if(a==null){ a=next; } return gcd(a % b, b);  
if(a==null){ a=[]; } return gcd(a % b, b);  
if(a==null){ a=BIG; } return gcd(a % b, b);  
if(a==null){ a=INITIAL; } return gcd(a % b, b);  
if(a==null){ a=Gi; } return gcd(a % b, b);  
if(a==null){ a= +a; } return gcd(a % b, b);  
if(a==null){ a=div; } return gcd(a % b, b);  
if(a==null){ a=4; } return gcd(a % b, b);  
if(a==null){ a=i1; } return gcd(a % b, b);  
if(a==null){ a=BigDecimal.ZERO; } return gcd(a % b, b);  
if(a==null){ a=BigDecimal.ONE; } return gcd(a % b, b);  
if(a==null){ a=Number.NaN; } return gcd(a % b, b);  
if(a==null){ a=BIG_INT; } return gcd(a % b, b);  
if(a==null){ a=MAX_VALUE; } return gcd(a % b, b);  
if(a==null){ a=""; } return gcd(a % b, b);  
if(a==null){ a=a*256; } return gcd(a % b, b);  
if(a==null){ a=9; } return gcd(a % b, b);  
if(a==null){ a=r; } return gcd(a % b, b);  
if(a==null){ a=E; } return gcd(a % b, b);  
if(a==null){ a=10000; } return gcd(a % b, b);  
if(a==null){ a=Math.random; } return gcd(a % b, b);  
if(a==null){ a=a/2; } return gcd(a % b, b);  
if(a==null){ a=intA; } return gcd(a % b, b);  
if(a==null){ a=a% b; } return gcd(a % b, b);  
if(a==null){ a=Object; } return gcd(a % b, b);  
if(a==null){ a=11; } return gcd(a % b, b);  
if(a==null){ a=Float.NaN; } return gcd(a % b, b);  
if(a==null){ a=a1; } return gcd(a % b, b);  
if(a==null){ a=Range; } return gcd(a % b, b);  
if(a==null){ a=void0; } return gcd(a % b, b);  
if(a==null){ a=first; } return gcd(a % b, b);  
if(a==null){ a=[]int{}; } return gcd(a % b, b);  
if(a==null){ a=128; } return gcd(a % b, b);  
if(a==null){ a=this.a; } return gcd(a % b, b);  
if(a==null){ a=int0; } return gcd(a % b, b);  
if(a==null){ a=a==0; } return gcd(a % b, b);  
if(a==null){ a=7; } return gcd(a % b, b);  
if(a==null){ a=o; } return gcd(a % b, b);  
if(a==null){ a= BIGINT; } return gcd(a % b, b);  
if(a==null){ a=pow; } return gcd(a % b, b);  
if(a==null){ a=a*10; } return gcd(a % b, b);  
if(a==null){ a=EMPTY; } return gcd(a % b, b);  
if(a==null){ a=other; } return gcd(a % b, b);  
if(a==null){ a=0xFFFF; } return gcd(a % b, b);  
if(a==null){ a=bits; } return gcd(a % b, b);  
if(a==null){ a=a >> 1; } return gcd(a % b, b);  
if(a==null){ a=start; } return gcd(a % b, b);  
if(a==null){ a=ulong; } return gcd(a % b, b);  
if(a==null){ a=20; } return gcd(a % b, b);  
if(a==null){ a=0.0; } return gcd(a % b, b);  
if(a==null){ a=j; } return gcd(a % b, b);  
if(a==null){ a=original; } return gcd(a % b, b);  
if(a==null){ a=BASE; } return gcd(a % b, b);  
if(a==null){ a=new int(); } return gcd(a % b, b);  
if(a==null){ a=mod; } return gcd(a % b, b);  
if(a==null){ a=2*b; } return gcd(a % b, b);  
if(a==null){ a=S; } return gcd(a % b, b);  
if(a==null){ a=radix; } return gcd(a % b, b);  
if(a==null){ a=pow10; } return gcd(a % b, b);  
if(a==null){ a=one; } return gcd(a % b, b);  
if(a==null){ a=empty; } return gcd(a % b, b);  
if(a==null){ a=-1; } return gcd(a % b, b);  
if(a==null){ a=64; } return gcd(a % b, b);  
if(a==null){ a=parseInt; } return gcd(a % b, b);  
if(a==null){ a=bot; } return gcd(a % b, b);  
if(a==null){ a=0L; } return gcd(a % b, b);  
if(a==null){ a=default_value; } return gcd(a % b, b);  
if(a==null){ a=a*; } return gcd(a % b, b);  
if(a==null){ a=true; } return gcd(a % b, b);  
if(a==null){ a=16; } return gcd(a % b, b);  
if(a==null){ a=BigInteger.zero; } return gcd(a % b, b);  
if(a==null){ a=new BigInteger; } return gcd(a % b, b);  
if(a==null){ a=no; } return gcd(a % b, b);  
if(a==null){ a=MIN_VALUE; } return gcd(a % b, b);  
if(a==null){ a=blank; } return gcd(a % b, b);  
if(a==null){ a=MaxInt; } return gcd(a % b, b);  
if(a==null){ a=input; } return gcd(a % b, b);  
if(a==null){ a=a + b; } return gcd(a % b, b);  
if(a==null){ a=number; } return gcd(a % b, b);  
if(a==null){ a=b=0; } return gcd(a % b, b);  
if(a==null){ a=short; } return gcd(a % b, b);  
if(a==null){ a=Z; } return gcd(a % b, b);  
if(a==null){ a=Math.round; } return gcd(a % b, b);  
if(a==null){ a=Object.create; } return gcd(a % b, b);  
if(a==null){ a=0b; } return gcd(a % b, b);  
if(a==null){ a=ab; } return gcd(a % b, b);  
if(a==null){ a=Long; } return gcd(a % b, b);  
if(a==null){ a=arg; } return gcd(a % b, b);  
if(a==null){ a=b+1; } return gcd(a % b, b);  
if(a==null){ a=a*3; } return gcd(a % b, b);  
if(a==null){ a=defaultA; } return gcd(a % b, b);  
if(a==null){ a=BIG_INTEGER; } return gcd(a % b, b);  
if(a==null){ a=U; } return gcd(a % b, b);  
if(a==null){ a=a^b; } return gcd(a % b, b);  
if(a==null){ a=1000000; } return gcd(a % b, b);  
if(a==null){ a=bit1; } return gcd(a % b, b);  
if(a==null){ a=total; } return gcd(a % b, b);  
if(a==null){ a=Big.ONE; } return gcd(a % b, b);  
if(a==null){ a=u; } return gcd(a % b, b);  
if(a==null){ a=DEFAULT_VALUE; } return gcd(a % b, b);  
if(a==null){ a=defaultIfNull; } return gcd(a % b, b);  
if(a==null){ a=a>>1; } return gcd(a % b, b);  
if(a==null){ a=default; } return gcd(a % b, b);  
if(a==null){ a=identity; } return gcd(a % b, b);  
if(a==null){ a=0x00000000; } return gcd(a % b, b);  
if(a==null){ a=MAX_INT; } return gcd(a % b, b);  
if(a==null){ a=defaultInt; } return gcd(a % b, b);  
if(a==null){ a=0x80000000; } return gcd(a % b, b);  
if(a==null){ a=b = 0; } return gcd(a % b, b);  
if(a==null){ a=a * b; } return gcd(a % b, b);  
if(a==null){ a=a*c; } return gcd(a % b, b);  
if(a==null){ a=b*a; } return gcd(a % b, b);  
if(a==null){ a=0x80; } return gcd(a % b, b);  
if(a==null){ a=0AST#ternary_expression#Right; } return gcd(a % b, b);  
if(a==null){ a=Boolean.FALSE; } return gcd(a % b, b);  
if(a==null){ a=scala; } return gcd(a % b, b);  
if(a==null){ a=0}; } return gcd(a % b, b);  
if(a==null){ a=b*2; } return gcd(a % b, b);  
if(a==null){ a=0x00; } return gcd(a % b, b);  
if(a==null){ a=Math.ceil; } return gcd(a % b, b);  
if(a==null){ a=Math.PI; } return gcd(a % b, b);  
if(a==null){ a=0AST#assignment_expression#Right; } return gcd(a % b, b);  
if(a==null){ a=Math.NaN; } return gcd(a % b, b);  
if(a==null){ a=greatest; } return gcd(a % b, b);  
if(a==null){ a=Math.identity; } return gcd(a % b, b);  
if(a==null){ a=Math.abs; } return gcd(a % b, b);  
if(a==null){ a=a%2; } return gcd(a % b, b);  
if(a==null){ a=Math.log; } return gcd(a % b, b);  
if(a==null){ a=ObjectUtils; } return gcd(a % b, b);  
if(a==null){ a=MIN_INT; } return gcd(a % b, b);  
if(b==null){return  a % b;} return gcd(a % b, b);  
if(b==null){return  b;} return gcd(a % b, b);  
if(b==null){return  null;} return gcd(a % b, b);  
if(b==null){return  0;} return gcd(a % b, b);  
if(b==null){return  a;} return gcd(a % b, b);  
if(b==null){return  b;;} return gcd(a % b, b);  
if(b==null){return  -1;} return gcd(a % b, b);  
if(b==null){return  a;;} return gcd(a % b, b);  
if(b==null){return  a%b;} return gcd(a % b, b);  
if(b==null){return  a/b;} return gcd(a % b, b);  
if(b==null){return  1;} return gcd(a % b, b);  
if(b==null){return  a % b;;} return gcd(a % b, b);  
if(b==null){return  null;;} return gcd(a % b, b);  
if(b==null){return  a / b;} return gcd(a % b, b);  
if(b==null){return  a - b;} return gcd(a % b, b);  
if(b==null){return  -1;;} return gcd(a % b, b);  
if(b==null){return  a * b;} return gcd(a % b, b);  
if(b==null){return  a + b;} return gcd(a % b, b);  
if(b==null){return  -a;} return gcd(a % b, b);  
if(b==null){return  a%b;;} return gcd(a % b, b);  
if(b==null){return  a*a;} return gcd(a % b, b);  
if(b==null){return  0;;} return gcd(a % b, b);  
if(b==null){return  a & b;} return gcd(a % b, b);  
if(b==null){return  Integer.MAX_VALUE;} return gcd(a % b, b);  
if(b==null){return  1;;} return gcd(a % b, b);  
if(b==null){return  a+b;} return gcd(a % b, b);  
if(b==null){return  a ^ b;} return gcd(a % b, b);  
if(b==null){return  -a;;} return gcd(a % b, b);  
if(b==null){return  a &b;} return gcd(a % b, b);  
if(b==null){return  Integer.MIN_VALUE;} return gcd(a % b, b);  
if(b==null){return  a-b;} return gcd(a % b, b);  
if(b==null){return  b % a;} return gcd(a % b, b);  
if(b==null){return  NaN;} return gcd(a % b, b);  
if(b==null){return  +a;} return gcd(a % b, b);  
if(b==null){return  a/b;;} return gcd(a % b, b);  
if(b==null){return  b==0;} return gcd(a % b, b);  
if(b==null){return  a*b;} return gcd(a % b, b);  
if(b==null){return  a %b;} return gcd(a % b, b);  
if(b==null){return  false;} return gcd(a % b, b);  
if(b==null){return  a % b; ;} return gcd(a % b, b);  
if(b==null){return  b == 0;} return gcd(a % b, b);  
if(b==null){return  a&b;} return gcd(a % b, b);  
if(b==null){return  b*a;} return gcd(a % b, b);  
if(b==null){return  int;} return gcd(a % b, b);  
if(b==null){return  BigInteger.ONE;} return gcd(a % b, b);  
if(b==null){return  zero;} return gcd(a % b, b);  
if(b==null){return  a|b;} return gcd(a % b, b);  
if(b==null){return  a + b;;} return gcd(a % b, b);  
if(b==null){return  a^b;} return gcd(a % b, b);  
if(b==null){return  &a;} return gcd(a % b, b);  
if(b==null){return 0;} return gcd(a % b, b);  
if(b==null){return  (a/b);;} return gcd(a % b, b);  
if(b==null){return ;;} return gcd(a % b, b);  
if(b==null){return  b; ;} return gcd(a % b, b);  
if(b==null){return  a - b;;} return gcd(a % b, b);  
if(b==null){return  a*a;;} return gcd(a % b, b);  
if(b==null){return  (a % b);;} return gcd(a % b, b);  
if(b==null){return  false;;} return gcd(a % b, b);  
if(b==null){return  b * a;} return gcd(a % b, b);  
if(b==null){return  -1*a;} return gcd(a % b, b);  
if(b==null){return  2;} return gcd(a % b, b);  
if(b==null){return  NULL;} return gcd(a % b, b);  
if(b==null){return 1;} return gcd(a % b, b);  
if(b==null){return  a; ;} return gcd(a % b, b);  
if(b==null){return  b+a;} return gcd(a % b, b);  
if(b==null){return -1;} return gcd(a % b, b);  
if(b==null){return  a/%b;} return gcd(a % b, b);  
if(b==null){return b;} return gcd(a % b, b);  
if(b==null){return  a / b;;} return gcd(a % b, b);  
if(b==null){return  b + a;} return gcd(a % b, b);  
if(b==null){return  a & ~b;} return gcd(a % b, b);  
if(b==null){return  c;} return gcd(a % b, b);  
if(b==null){return  c;;} return gcd(a % b, b);  
if(b==null){return  b==null;} return gcd(a % b, b);  
if(b==null){return  a==null;} return gcd(a % b, b);  
if(b==null){return  10;} return gcd(a % b, b);  
if(b==null){return  x;} return gcd(a % b, b);  
if(b==null){return  b - a;} return gcd(a % b, b);  
if(b==null){return  a * b;;} return gcd(a % b, b);  
if(b==null){return  a /b;} return gcd(a % b, b);  
if(b==null){return  a | b;} return gcd(a % b, b);  
if(b==null){return  n;} return gcd(a % b, b);  
if(b==null){return   0;} return gcd(a % b, b);  
if(b==null){return  a -b;} return gcd(a % b, b);  
if(b==null){return   a % b;} return gcd(a % b, b);  
if(b==null){return  a == null;} return gcd(a % b, b);  
if(b==null){return  Long.MAX_VALUE;} return gcd(a % b, b);  
if(b==null){return  a &;} return gcd(a % b, b);  
if(b==null){return  undefined;} return gcd(a % b, b);  
if(b==null){return  b+1;} return gcd(a % b, b);  
if(b==null){return  true;} return gcd(a % b, b);  
if(b==null){return  a*a + b;} return gcd(a % b, b);  
if(b==null){return  b%a;} return gcd(a % b, b);  
if(b==null){return  a + 1;} return gcd(a % b, b);  
if(b==null){return   a;} return gcd(a % b, b);  
if(b==null){return  b % a;;} return gcd(a % b, b);  
if(b==null){return  a * a;} return gcd(a % b, b);  
if(b==null){return  (a / b);;} return gcd(a % b, b);  
if(b==null){return  -a*a;} return gcd(a % b, b);  
if(b==null){return  this;} return gcd(a % b, b);  
if(b==null){return  a % b == 0;} return gcd(a % b, b);  
if(b==null){return  b ;;} return gcd(a % b, b);  
if(b==null){return  a+b;;} return gcd(a % b, b);  
if(b==null){return  a >>> b;} return gcd(a % b, b);  
if(b==null){return  -Infinity;} return gcd(a % b, b);  
if(b==null){return  nil;} return gcd(a % b, b);  
if(b==null){return  255;} return gcd(a % b, b);  
if(b==null){return  a ;} return gcd(a % b, b);  
if(b==null){return  a.length;} return gcd(a % b, b);  
if(b==null){return  a<b;} return gcd(a % b, b);  
if(b==null){return  b + 1;} return gcd(a % b, b);  
if(b==null){return  a != null;} return gcd(a % b, b);  
if(b==null){return   null;} return gcd(a % b, b);  
if(b==null){return  b-a;} return gcd(a % b, b);  
if(b==null){return  (a%b);;} return gcd(a % b, b);  
if(b==null){return  ~a;} return gcd(a % b, b);  
if(b==null){return  a%b+1;} return gcd(a % b, b);  
if(b==null){return  b == null;} return gcd(a % b, b);  
if(b==null){return  b/a;} return gcd(a % b, b);  
if(b==null){return  a% b;} return gcd(a % b, b);  
if(b==null){return  a%b; ;} return gcd(a % b, b);  
if(b==null){return null;} return gcd(a % b, b);  
if(b==null){return  x;;} return gcd(a % b, b);  
if(b==null){return  a &gt; b;} return gcd(a % b, b);  
if(b==null){return   a;;} return gcd(a % b, b);  
if(b==null){return  a & 1;} return gcd(a % b, b);  
if(b==null){return  a & b;;} return gcd(a % b, b);  
if(b==null){return  a % b + 1;} return gcd(a % b, b);  
if(b==null){return  a >= b;} return gcd(a % b, b);  
if(b==null){return  a+1;} return gcd(a % b, b);  
if(b==null){return  (a & b);;} return gcd(a % b, b);  
if(b==null){return  a * 0;} return gcd(a % b, b);  
if(b==null){return  a & 0xFF;} return gcd(a % b, b);  
if(b==null){return  -b;} return gcd(a % b, b);  
if(b==null){return  a % a;} return gcd(a % b, b);  
if(b==null){return  a %b;;} return gcd(a % b, b);  
if(b==null){return  b != 0;} return gcd(a % b, b);  
if(b==null){return  (int)a;} return gcd(a % b, b);  
if(b==null){return  a ^ b;;} return gcd(a % b, b);  
if(b==null){return  a ;} return gcd(a % b, b);  
if(b==null){return  a > b;} return gcd(a % b, b);  
if(b==null){return  a,b;} return gcd(a % b, b);  
if(b==null){return  a.length;;} return gcd(a % b, b);  
if(b==null){return  --a;} return gcd(a % b, b);  
if(b==null){return  a &amp; b;} return gcd(a % b, b);  
if(b==null){return  b==1;} return gcd(a % b, b);  
if(b==null){return  a / a;} return gcd(a % b, b);  
if(b==null){return  a/0;} return gcd(a % b, b);  
if(b==null){return  a.abs();;} return gcd(a % b, b);  
if(b==null){return  void;} return gcd(a % b, b);  
if(b==null){return  n;;} return gcd(a % b, b);  
if(b==null){return  +1;} return gcd(a % b, b);  
if(b==null){return  a/a;} return gcd(a % b, b);  
if(b==null){return  2*a;} return gcd(a % b, b);  
if(b==null){return  a.signum();;} return gcd(a % b, b);  
if(b==null){return  +b;} return gcd(a % b, b);  
if(b==null){return  a / null;} return gcd(a % b, b);  
if(b==null){return  -1 * a;} return gcd(a % b, b);  
if(b==null){return  b==a;} return gcd(a % b, b);  
if(b==null){return  a & 0xff;} return gcd(a % b, b);  
if(b==null){return  a..b;} return gcd(a % b, b);  
if(b==null){return  a - a;} return gcd(a % b, b);  
if(b==null){return  b > 0;} return gcd(a % b, b);  
if(b==null){return  ab;} return gcd(a % b, b);  
if(b==null){return  -(a/b);;} return gcd(a % b, b);  
if(b==null){return  b.intValue();;} return gcd(a % b, b);  
if(b==null){return  - 1;} return gcd(a % b, b);  
if(b==null){return  a|0;} return gcd(a % b, b);  
if(b==null){return  a!=null;} return gcd(a % b, b);  
if(b==null){return  b / a;} return gcd(a % b, b);  
if(b==null){return  a == 0;} return gcd(a % b, b);  
if(b==null){return  a%b==0;} return gcd(a % b, b);  
if(b==null){return  b!=0;} return gcd(a % b, b);  
if(b==null){return  a==0;} return gcd(a % b, b);  
if(b==null){return  &a;;} return gcd(a % b, b);  
if(b==null){return a;} return gcd(a % b, b);  
if(b==null){return b;;} return gcd(a % b, b);  
if(b==null){return  b ;} return gcd(a % b, b);  
if(b==null){return  *a;} return gcd(a % b, b);  
if(b==null){return  a - 1;} return gcd(a % b, b);  
if(b==null){return  BigInteger.ZERO;} return gcd(a % b, b);  
if(b==null){return  i;} return gcd(a % b, b);  
if(b==null){return  Infinity;} return gcd(a % b, b);  
if(b==null){return  b*a;;} return gcd(a % b, b);  
if(b==null){return  gcd;} return gcd(a % b, b);  
if(b==null){return  a*b;;} return gcd(a % b, b);  
if(b==null){return  a*a+b;} return gcd(a % b, b);  
if(b==null){return  a-b;;} return gcd(a % b, b);  
if(b==null){return  +a;;} return gcd(a % b, b);  
if(b==null){return  -1*a;;} return gcd(a % b, b);  
if(b==null){return  a + a;} return gcd(a % b, b);  
if(b==null){return  3;} return gcd(a % b, b);  
if(b==null){return  a <= b;} return gcd(a % b, b);  
if(b==null){return  b & 1;} return gcd(a % b, b);  
if(b==null){return  b|0;} return gcd(a % b, b);  
if(b==null){return  a>>>0;} return gcd(a % b, b);  
if(b==null){return  b^a;} return gcd(a % b, b);  
if(b==null){return  a >>> 1;} return gcd(a % b, b);  
if(b==null){return a % b;} return gcd(a % b, b);  
if(b==null){return  a &lt; b;} return gcd(a % b, b);  
if(b==null){return  a % b ;;} return gcd(a % b, b);  
if(b==null){return  a &gt;= b;} return gcd(a % b, b);  
if(b==null){return  a}%b;} return gcd(a % b, b);  
if(b==null){return  a-%b;} return gcd(a % b, b);  
if(b==null){return  a>b;} return gcd(a % b, b);  
if(b==null){return  -a%b;} return gcd(a % b, b);  
if(b==null){return  i;;} return gcd(a % b, b);  
if(b==null){return  a | null;} return gcd(a % b, b);  
if(b==null){return  a % b != 0;} return gcd(a % b, b);  
if(b==null){return  a & mask;} return gcd(a % b, b);  
if(b==null){return  a%2;} return gcd(a % b, b);  
if(b==null){return  a/2;} return gcd(a % b, b);  
if(b==null){return  !a;} return gcd(a % b, b);  
if(b==null){return  gcd(a,0;} return gcd(a % b, b);  
if(b==null){return  a>=b;} return gcd(a % b, b);  
if(b==null){return  -a % b;} return gcd(a % b, b);  
if(b==null){return  a % b ;} return gcd(a % b, b);  
if(b==null){return  MAX;} return gcd(a % b, b);  
if(b==null){return  b != null;} return gcd(a % b, b);  
if(b==null){return  a ;;} return gcd(a % b, b);  
if(b==null){return  b * a;;} return gcd(a % b, b);  
if(b==null){return  Integer;} return gcd(a % b, b);  
if(b==null){return  null; ;} return gcd(a % b, b);  
if(b==null){return  a >> b;} return gcd(a % b, b);  
if(b==null){return  -a/b;} return gcd(a % b, b);  
if(b==null){return  a &b;;} return gcd(a % b, b);  
if(b==null){return  true;;} return gcd(a % b, b);  
if(b==null){return  a&1;} return gcd(a % b, b);  
if(b==null){return  a > 0;} return gcd(a % b, b);  
if(b==null){return  a & (~b);;} return gcd(a % b, b);  
if(b==null){return  set;} return gcd(a % b, b);  
if(b==null){return  a:b;} return gcd(a % b, b);  
if(b==null){return  a % b + b;} return gcd(a % b, b);  
if(b==null){return  a & 255;} return gcd(a % b, b);  
if(b==null){return  gcd(a,null;} return gcd(a % b, b);  
if(b==null){return (a/b);;} return gcd(a % b, b);  
if(b==null){return   a%b;} return gcd(a % b, b);  
if(b==null){return  a/b; ;} return gcd(a % b, b);  
if(b==null){return  a + b + 1;} return gcd(a % b, b);  
if(b==null){return  -(a%b);;} return gcd(a % b, b);  
if(b==null){return  a &amp;&amp;} return gcd(a % b, b);  
if(b==null){return  a|b;;} return gcd(a % b, b);  
if(b==null){return  N;} return gcd(a % b, b);  
if(b==null){return  4;} return gcd(a % b, b);  
if(b==null){return  a % b+1;} return gcd(a % b, b);  
if(b==null){return  a & b; ;} return gcd(a % b, b);  
if(b==null){return  m;} return gcd(a % b, b);  
if(b==null){return  another;} return gcd(a % b, b);  
if(b==null){return  ZERO;} return gcd(a % b, b);  
if(b==null){return  NIL;} return gcd(a % b, b);  
if(b==null){ b=1; } return gcd(a % b, b);  
if(b==null){ b=0; } return gcd(a % b, b);  
if(b==null){ b=a; } return gcd(a % b, b);  
if(b==null){ b=a%b; } return gcd(a % b, b);  
if(b==null){ b=a % b; } return gcd(a % b, b);  
if(b==null){ b=2; } return gcd(a % b, b);  
if(b==null){ b=a*a; } return gcd(a % b, b);  
if(b==null){ b=a/b; } return gcd(a % b, b);  
if(b==null){ b=b; } return gcd(a % b, b);  
if(b==null){ b=null; } return gcd(a % b, b);  
if(b==null){ b=10; } return gcd(a % b, b);  
if(b==null){ b=MAX; } return gcd(a % b, b);  
if(b==null){ b=a.length; } return gcd(a % b, b);  
if(b==null){ b= 0; } return gcd(a % b, b);  
if(b==null){ b=INF; } return gcd(a % b, b);  
if(b==null){ b=A; } return gcd(a % b, b);  
if(b==null){ b= 1; } return gcd(a % b, b);  
if(b==null){ b=DEFAULT_B; } return gcd(a % b, b);  
if(b==null){ b=8; } return gcd(a % b, b);  
if(b==null){ b=256; } return gcd(a % b, b);  
if(b==null){ b=N; } return gcd(a % b, b);  
if(b==null){ b=100; } return gcd(a % b, b);  
if(b==null){ b=3; } return gcd(a % b, b);  
if(b==null){ b=max; } return gcd(a % b, b);  
if(b==null){ b=4; } return gcd(a % b, b);  
if(b==null){ b=int; } return gcd(a % b, b);  
if(b==null){ b=c; } return gcd(a % b, b);  
if(b==null){ b=n; } return gcd(a % b, b);  
if(b==null){ b=Math.max; } return gcd(a % b, b);  
if(b==null){ b=i; } return gcd(a % b, b);  
if(b==null){ b=1024; } return gcd(a % b, b);  
if(b==null){ b=default_b; } return gcd(a % b, b);  
if(b==null){ b= a; } return gcd(a % b, b);  
if(b==null){ b=1000; } return gcd(a % b, b);  
if(b==null){ b=Integer; } return gcd(a % b, b);  
if(b==null){ b=BigInteger.ONE; } return gcd(a % b, b);  
if(b==null){ b=a%2; } return gcd(a % b, b);  
if(b==null){ b=a%a; } return gcd(a % b, b);  
if(b==null){ b=b%2; } return gcd(a % b, b);  
if(b==null){ b=length; } return gcd(a % b, b);  
if(b==null){ b= a % b; } return gcd(a % b, b);  
if(b==null){ b=32; } return gcd(a % b, b);  
if(b==null){ b=defaultB; } return gcd(a % b, b);  
if(b==null){ b=9; } return gcd(a % b, b);  
if(b==null){ b=Math.floor; } return gcd(a % b, b);  
if(b==null){ b=zero; } return gcd(a % b, b);  
if(b==null){ b=DEFAULT_BASE; } return gcd(a % b, b);  
if(b==null){ b=a*b; } return gcd(a % b, b);  
if(b==null){ b=a-b; } return gcd(a % b, b);  
if(b==null){ b=a&1; } return gcd(a % b, b);  
if(b==null){ b=NULL; } return gcd(a % b, b);  
if(b==null){ b=255; } return gcd(a % b, b);  
if(b==null){ b=b-1; } return gcd(a % b, b);  
if(b==null){ b= -1; } return gcd(a % b, b);  
if(b==null){ b=a+b; } return gcd(a % b, b);  
if(b==null){ b=a / b; } return gcd(a % b, b);  
if(b==null){ b=MAX_VALUE; } return gcd(a % b, b);  
if(b==null){ b=a&b; } return gcd(a % b, b);  
if(b==null){ b=2*a; } return gcd(a % b, b);  
if(b==null){ b=a+1; } return gcd(a % b, b);  
if(b==null){ b=b+1; } return gcd(a % b, b);  
if(b==null){ b=a % a; } return gcd(a % b, b);  
if(b==null){ b=b*2; } return gcd(a % b, b);  
if(b==null){ b=x; } return gcd(a % b, b);  
if(b==null){ b= a%b; } return gcd(a % b, b);  
if(b==null){ b=7; } return gcd(a % b, b);  
if(b==null){ b=min; } return gcd(a % b, b);  
if(b==null){ b=DEFAULT; } return gcd(a % b, b);  
if(b==null){ b=16; } return gcd(a % b, b);  
if(b==null){ b=num; } return gcd(a % b, b);  
if(b==null){ b=defaultNum; } return gcd(a % b, b);  
if(b==null){ b=a * b; } return gcd(a % b, b);  
if(b==null){ b=64; } return gcd(a % b, b);  
if(b==null){ b=MaxInt; } return gcd(a % b, b);  
if(b==null){ b=99; } return gcd(a % b, b);  
if(b==null){ b=Math.min; } return gcd(a % b, b);  
if(b==null){ b=MAX_INT; } return gcd(a % b, b);  
if(b==null){ b=1000000; } return gcd(a % b, b);  
if(b==null){ b=5; } return gcd(a % b, b);  
if(b==null){ b=len; } return gcd(a % b, b);  
if(b==null){ b=11; } return gcd(a % b, b);  
if(b==null){ b=a% b; } return gcd(a % b, b);  
if(b==null){ b=ONE; } return gcd(a % b, b);  
if(b==null){ b=Infinity; } return gcd(a % b, b);  
if(b==null){ b=31; } return gcd(a % b, b);  
if(b==null){ b=a - b; } return gcd(a % b, b);  
if(b==null){ b=a %b; } return gcd(a % b, b);  
if(b==null){ b=divisor; } return gcd(a % b, b);  
if(b==null){ b=a-1; } return gcd(a % b, b);  
if(b==null){ b=0xff; } return gcd(a % b, b);  
if(b==null){ b=20; } return gcd(a % b, b);  
if(b==null){ b=B; } return gcd(a % b, b);  
if(b==null){ b=true; } return gcd(a % b, b);  
if(b==null){ b=one; } return gcd(a % b, b);  
if(b==null){ b=args.length; } return gcd(a % b, b);  
if(b==null){ b=random; } return gcd(a % b, b);  
if(b==null){ b=MIN; } return gcd(a % b, b);  
if(b==null){ b=b%a; } return gcd(a % b, b);  
if(b==null){ b=scale; } return gcd(a % b, b);  
if(b==null){ b=MAX_B; } return gcd(a % b, b);  
if(b==null){ b=false; } return gcd(a % b, b);  
if(b==null){ b=a; }; } return gcd(a % b, b);  
if(b==null){ b=b%b; } return gcd(a % b, b);  
if(b==null){ b=d; } return gcd(a % b, b);  
if(b==null){ b=UNDEFINED; } return gcd(a % b, b);  
if(b==null){ b=6; } return gcd(a % b, b);  
if(b==null){ b=ai; } return gcd(a % b, b);  
if(b==null){ b=NIL; } return gcd(a % b, b);  
if(b==null){ b=a&; } return gcd(a % b, b);  
if(b==null){ b=999; } return gcd(a % b, b);  
if(b==null){ b=integer; } return gcd(a % b, b);  
if(b==null){ b=b*a; } return gcd(a % b, b);  
if(b==null){ b=10000; } return gcd(a % b, b);  
if(b==null){ b=a&255; } return gcd(a % b, b);  
if(b==null){ b=42; } return gcd(a % b, b);  
if(b==null){ b=128; } return gcd(a % b, b);  
if(b==null){ b=Int; } return gcd(a % b, b);  
if(b==null){ b=radix; } return gcd(a % b, b);  
if(b==null){ b=Math; } return gcd(a % b, b);  
if(b==null){ b=a>>>1; } return gcd(a % b, b);  
if(b==null){ b=bits; } return gcd(a % b, b);  
if(b==null){ b=mod; } return gcd(a % b, b);  
if(b==null){ b=Math.sqrt; } return gcd(a % b, b);  
if(b==null){ b=a*2; } return gcd(a % b, b);  
if(b==null){ b=a%; } return gcd(a % b, b);  
if(b==null){ b=10000000; } return gcd(a % b, b);  
if(b==null){ b=k; } return gcd(a % b, b);  
if(b==null){ b=size; } return gcd(a % b, b);  
if(b==null){ b=0; }; } return gcd(a % b, b);  
if(b==null){ b=1*a; } return gcd(a % b, b);  
if(b==null){ b=b>>>0; } return gcd(a % b, b);  
if(b==null){ b=80; } return gcd(a % b, b);  
if(b==null){ b=m; } return gcd(a % b, b);  
if(b==null){ b=12; } return gcd(a % b, b);  
if(b==null){ b=Math.ceil; } return gcd(a % b, b);  
if(b==null){ b=b % a; } return gcd(a % b, b);  
if(b==null){ b=rand; } return gcd(a % b, b);  
if(b==null){ b=a^b; } return gcd(a % b, b);  
if(b==null){ b=div; } return gcd(a % b, b);  
if(b==null){ b=b==0; } return gcd(a % b, b);  
if(b==null){ b=a/2; } return gcd(a % b, b);  
if(b==null){ b=C; } return gcd(a % b, b);  
if(b==null){ b=a%1; } return gcd(a % b, b);  
if(b==null){ b=maximum; } return gcd(a % b, b);  
if(b==null){ b=nil; } return gcd(a % b, b);  
if(b==null){ b=value; } return gcd(a % b, b);  
if(b==null){ b=b % 2; } return gcd(a % b, b);  
if(b==null){ b=a/%b; } return gcd(a % b, b);  
if(b==null){ b=this; } return gcd(a % b, b);  
if(b==null){ b=alpha; } return gcd(a % b, b);  
if(b==null){ b=a<<1; } return gcd(a % b, b);  
if(b==null){ b=MAX_UINT; } return gcd(a % b, b);  
if(b==null){ b=a + b; } return gcd(a % b, b);  
if(b==null){ b=a * a; } return gcd(a % b, b);  
if(b==null){ b=init; } return gcd(a % b, b);  
if(b==null){ b=gcd; } return gcd(a % b, b);  
if(b==null){ b=count; } return gcd(a % b, b);  
if(b==null){ b=30; } return gcd(a % b, b);  
if(b==null){ b=19; } return gcd(a % b, b);  
if(b==null){ b=0x10000; } return gcd(a % b, b);  
if(b==null){ b=b%10; } return gcd(a % b, b);  
if(b==null){ b=15; } return gcd(a % b, b);  
if(b==null){ b=63; } return gcd(a % b, b);  
if(b==null){ b=a%10; } return gcd(a % b, b);  
if(b==null){ b=a % 1; } return gcd(a % b, b);  
if(b==null){ b=512; } return gcd(a % b, b);  
if(b==null){ b=calcB; } return gcd(a % b, b);  
if(b==null){ b=360; } return gcd(a % b, b);  
if(b==null){ b=a==0; } return gcd(a % b, b);  
if(b==null){ b=pow; } return gcd(a % b, b);  
if(b==null){ b=base; } return gcd(a % b, b);  
if(b==null){ b=Default; } return gcd(a % b, b);  
if(b==null){ b=a >> 1; } return gcd(a % b, b);  
if(b==null){ b=50; } return gcd(a % b, b);  
if(b==null){ b=s; } return gcd(a % b, b);  
if(b==null){ b=isZero; } return gcd(a % b, b);  
if(b==null){ b=M; } return gcd(a % b, b);  
if(b==null){ b=greatest; } return gcd(a % b, b);  
if(b==null){ b=Math.abs; } return gcd(a % b, b);  
if(b==null){ b=DEFAULT_N; } return gcd(a % b, b);  
if(b==null){ b=a % 2; } return gcd(a % b, b);  
if(b==null){ b=getMaxValue; } return gcd(a % b, b);  
if(b==null){ b=b+a; } return gcd(a % b, b);  
if(b==null){ b=BigInteger.ZERO; } return gcd(a % b, b);  
if(b==null){ b=total; } return gcd(a % b, b);  
if(b==null){ b=bit; } return gcd(a % b, b);  
if(b==null){ b=input.length; } return gcd(a % b, b);  
if(b==null){ b=b>>>1; } return gcd(a % b, b);  
if(b==null){ b=g; } return gcd(a % b, b);  
if(b==null){ b=this.length; } return gcd(a % b, b);  
if(b==null){ b=System.identity; } return gcd(a % b, b);  
if(b==null){ b=Max; } return gcd(a % b, b);  
if(b==null){ b=number; } return gcd(a % b, b);  
if(b==null){ b=default; } return gcd(a % b, b);  
if(b==null){ b=a - 1; } return gcd(a % b, b);  
if(b==null){ b=a & 1; } return gcd(a % b, b);  
if(b==null){ b=floor; } return gcd(a % b, b);  
if(b==null){ b=a*1; } return gcd(a % b, b);  
if(b==null){ b=1; }; } return gcd(a % b, b);  
if(b==null){ b=all; } return gcd(a % b, b);  
if(b==null){ b=b%1; } return gcd(a % b, b);  
if(b==null){ b=a*0; } return gcd(a % b, b);  
if(b==null){ b=b-a; } return gcd(a % b, b);  
if(b==null){ b=E; } return gcd(a % b, b);  
if(b==null){ b=a * 0; } return gcd(a % b, b);  
if(b==null){ b=36; } return gcd(a % b, b);  
if(b==null){ b= gcd; } return gcd(a % b, b);  
if(b==null){ b= 2; } return gcd(a % b, b);  
if(b==null){ b=ab; } return gcd(a % b, b);  
if(b==null){ b= a/b; } return gcd(a % b, b);  
if(b==null){ b=constant; } return gcd(a % b, b);  
if(b==null){ b=a|0; } return gcd(a % b, b);  
if(b==null){ b=type; } return gcd(a % b, b);  
if(b==null){ b=l; } return gcd(a % b, b);  
if(b==null){ b=a==null; } return gcd(a % b, b);  
if(b==null){ b=a + 1; } return gcd(a % b, b);  
if(b==null){ b=a>>1; } return gcd(a % b, b);  
if(b==null){ b=G; } return gcd(a % b, b);  
if(b==null){ b=a/a; } return gcd(a % b, b);  
if(b==null){ b=v; } return gcd(a % b, b);  
if(b==null){ b=gen; } return gcd(a % b, b);  
if(b==null){ b=input; } return gcd(a % b, b);  
if(b==null){ b=result; } return gcd(a % b, b);  
if(b==null){ b=default_divisor; } return gcd(a % b, b);  
if(b==null){ b=; } return gcd(a % b, b);  
if(b==null){ b=first; } return gcd(a % b, b);  
if(b==null){ b=defaultVal; } return gcd(a % b, b);  
if(b==null){ b=new int; } return gcd(a % b, b);  
if(b==null){ b=-1; } return gcd(a % b, b);  
if(b==null){ b=a % 10; } return gcd(a % b, b);  
if(b==null){ b=24; } return gcd(a % b, b);  
if(b==null){ b= a.length; } return gcd(a % b, b);  
if(b==null){ b=pow10; } return gcd(a % b, b);  
if(b==null){ b=Math.round; } return gcd(a % b, b);  
if(b==null){ b=POSITIVE; } return gcd(a % b, b);  
if(b==null){ b=e; } return gcd(a % b, b);  
if(b==null){ b=NULL_VALUE; } return gcd(a % b, b);  
if(b==null){ b=0x80; } return gcd(a % b, b);  
if(b==null){ b=Z; } return gcd(a % b, b);  
if(b==null){ b=Gi; } return gcd(a % b, b);  
if(b==null){ b=Math.random; } return gcd(a % b, b);  
if(b==null){ b=0xFF; } return gcd(a % b, b);  
if(b==null){ b=wi; } return gcd(a % b, b);  
if(b==null){ b=width; } return gcd(a % b, b);  
if(b==null){ b=p; } return gcd(a % b, b);  
if(b==null){ b=1/a; } return gcd(a % b, b);  
if(b==null){ b=2048; } return gcd(a % b, b);  
if(b==null){ b=h; } return gcd(a % b, b);  
if(b==null){ b=0xffff; } return gcd(a % b, b);  
if(b==null){ b=a & b; } return gcd(a % b, b);  
if(b==null){return  a % b;} return gcd(a % b, b);  
if(b==null){return  b;} return gcd(a % b, b);  
if(b==null){return  null;} return gcd(a % b, b);  
if(b==null){return  0;} return gcd(a % b, b);  
if(b==null){return  a;} return gcd(a % b, b);  
if(b==null){return  b;;} return gcd(a % b, b);  
if(b==null){return  -1;} return gcd(a % b, b);  
if(b==null){return  a;;} return gcd(a % b, b);  
if(b==null){return  a%b;} return gcd(a % b, b);  
if(b==null){return  a/b;} return gcd(a % b, b);  
if(b==null){return  1;} return gcd(a % b, b);  
if(b==null){return  a % b;;} return gcd(a % b, b);  
if(b==null){return  null;;} return gcd(a % b, b);  
if(b==null){return  a / b;} return gcd(a % b, b);  
if(b==null){return  a - b;} return gcd(a % b, b);  
if(b==null){return  -1;;} return gcd(a % b, b);  
if(b==null){return  a * b;} return gcd(a % b, b);  
if(b==null){return  a + b;} return gcd(a % b, b);  
if(b==null){return  -a;} return gcd(a % b, b);  
if(b==null){return  a%b;;} return gcd(a % b, b);  
if(b==null){return  a*a;} return gcd(a % b, b);  
if(b==null){return  0;;} return gcd(a % b, b);  
if(b==null){return  a & b;} return gcd(a % b, b);  
if(b==null){return  Integer.MAX_VALUE;} return gcd(a % b, b);  
if(b==null){return  1;;} return gcd(a % b, b);  
if(b==null){return  a+b;} return gcd(a % b, b);  
if(b==null){return  a ^ b;} return gcd(a % b, b);  
if(b==null){return  -a;;} return gcd(a % b, b);  
if(b==null){return  a &b;} return gcd(a % b, b);  
if(b==null){return  Integer.MIN_VALUE;} return gcd(a % b, b);  
if(b==null){return  a-b;} return gcd(a % b, b);  
if(b==null){return  b % a;} return gcd(a % b, b);  
if(b==null){return  NaN;} return gcd(a % b, b);  
if(b==null){return  +a;} return gcd(a % b, b);  
if(b==null){return  a/b;;} return gcd(a % b, b);  
if(b==null){return  b==0;} return gcd(a % b, b);  
if(b==null){return  a*b;} return gcd(a % b, b);  
if(b==null){return  a %b;} return gcd(a % b, b);  
if(b==null){return  false;} return gcd(a % b, b);  
if(b==null){return  a % b; ;} return gcd(a % b, b);  
if(b==null){return  b == 0;} return gcd(a % b, b);  
if(b==null){return  a&b;} return gcd(a % b, b);  
if(b==null){return  b*a;} return gcd(a % b, b);  
if(b==null){return  int;} return gcd(a % b, b);  
if(b==null){return  BigInteger.ONE;} return gcd(a % b, b);  
if(b==null){return  zero;} return gcd(a % b, b);  
if(b==null){return  a|b;} return gcd(a % b, b);  
if(b==null){return  a + b;;} return gcd(a % b, b);  
if(b==null){return  a^b;} return gcd(a % b, b);  
if(b==null){return  &a;} return gcd(a % b, b);  
if(b==null){return 0;} return gcd(a % b, b);  
if(b==null){return  (a/b);;} return gcd(a % b, b);  
if(b==null){return ;;} return gcd(a % b, b);  
if(b==null){return  b; ;} return gcd(a % b, b);  
if(b==null){return  a - b;;} return gcd(a % b, b);  
if(b==null){return  a*a;;} return gcd(a % b, b);  
if(b==null){return  (a % b);;} return gcd(a % b, b);  
if(b==null){return  false;;} return gcd(a % b, b);  
if(b==null){return  b * a;} return gcd(a % b, b);  
if(b==null){return  -1*a;} return gcd(a % b, b);  
if(b==null){return  2;} return gcd(a % b, b);  
if(b==null){return  NULL;} return gcd(a % b, b);  
if(b==null){return 1;} return gcd(a % b, b);  
if(b==null){return  a; ;} return gcd(a % b, b);  
if(b==null){return  b+a;} return gcd(a % b, b);  
if(b==null){return -1;} return gcd(a % b, b);  
if(b==null){return  a/%b;} return gcd(a % b, b);  
if(b==null){return b;} return gcd(a % b, b);  
if(b==null){return  a / b;;} return gcd(a % b, b);  
if(b==null){return  b + a;} return gcd(a % b, b);  
if(b==null){return  a & ~b;} return gcd(a % b, b);  
if(b==null){return  c;} return gcd(a % b, b);  
if(b==null){return  c;;} return gcd(a % b, b);  
if(b==null){return  b==null;} return gcd(a % b, b);  
if(b==null){return  a==null;} return gcd(a % b, b);  
if(b==null){return  10;} return gcd(a % b, b);  
if(b==null){return  x;} return gcd(a % b, b);  
if(b==null){return  b - a;} return gcd(a % b, b);  
if(b==null){return  a * b;;} return gcd(a % b, b);  
if(b==null){return  a /b;} return gcd(a % b, b);  
if(b==null){return  a | b;} return gcd(a % b, b);  
if(b==null){return  n;} return gcd(a % b, b);  
if(b==null){return   0;} return gcd(a % b, b);  
if(b==null){return  a -b;} return gcd(a % b, b);  
if(b==null){return   a % b;} return gcd(a % b, b);  
if(b==null){return  a == null;} return gcd(a % b, b);  
if(b==null){return  Long.MAX_VALUE;} return gcd(a % b, b);  
if(b==null){return  a &;} return gcd(a % b, b);  
if(b==null){return  undefined;} return gcd(a % b, b);  
if(b==null){return  b+1;} return gcd(a % b, b);  
if(b==null){return  true;} return gcd(a % b, b);  
if(b==null){return  a*a + b;} return gcd(a % b, b);  
if(b==null){return  b%a;} return gcd(a % b, b);  
if(b==null){return  a + 1;} return gcd(a % b, b);  
if(b==null){return   a;} return gcd(a % b, b);  
if(b==null){return  b % a;;} return gcd(a % b, b);  
if(b==null){return  a * a;} return gcd(a % b, b);  
if(b==null){return  (a / b);;} return gcd(a % b, b);  
if(b==null){return  -a*a;} return gcd(a % b, b);  
if(b==null){return  this;} return gcd(a % b, b);  
if(b==null){return  a % b == 0;} return gcd(a % b, b);  
if(b==null){return  b ;;} return gcd(a % b, b);  
if(b==null){return  a+b;;} return gcd(a % b, b);  
if(b==null){return  a >>> b;} return gcd(a % b, b);  
if(b==null){return  -Infinity;} return gcd(a % b, b);  
if(b==null){return  nil;} return gcd(a % b, b);  
if(b==null){return  255;} return gcd(a % b, b);  
if(b==null){return  a ;} return gcd(a % b, b);  
if(b==null){return  a.length;} return gcd(a % b, b);  
if(b==null){return  a<b;} return gcd(a % b, b);  
if(b==null){return  b + 1;} return gcd(a % b, b);  
if(b==null){return  a != null;} return gcd(a % b, b);  
if(b==null){return   null;} return gcd(a % b, b);  
if(b==null){return  b-a;} return gcd(a % b, b);  
if(b==null){return  (a%b);;} return gcd(a % b, b);  
if(b==null){return  ~a;} return gcd(a % b, b);  
if(b==null){return  a%b+1;} return gcd(a % b, b);  
if(b==null){return  b == null;} return gcd(a % b, b);  
if(b==null){return  b/a;} return gcd(a % b, b);  
if(b==null){return  a% b;} return gcd(a % b, b);  
if(b==null){return  a%b; ;} return gcd(a % b, b);  
if(b==null){return null;} return gcd(a % b, b);  
if(b==null){return  x;;} return gcd(a % b, b);  
if(b==null){return  a &gt; b;} return gcd(a % b, b);  
if(b==null){return   a;;} return gcd(a % b, b);  
if(b==null){return  a & 1;} return gcd(a % b, b);  
if(b==null){return  a & b;;} return gcd(a % b, b);  
if(b==null){return  a % b + 1;} return gcd(a % b, b);  
if(b==null){return  a >= b;} return gcd(a % b, b);  
if(b==null){return  a+1;} return gcd(a % b, b);  
if(b==null){return  (a & b);;} return gcd(a % b, b);  
if(b==null){return  a * 0;} return gcd(a % b, b);  
if(b==null){return  a & 0xFF;} return gcd(a % b, b);  
if(b==null){return  -b;} return gcd(a % b, b);  
if(b==null){return  a % a;} return gcd(a % b, b);  
if(b==null){return  a %b;;} return gcd(a % b, b);  
if(b==null){return  b != 0;} return gcd(a % b, b);  
if(b==null){return  (int)a;} return gcd(a % b, b);  
if(b==null){return  a ^ b;;} return gcd(a % b, b);  
if(b==null){return  a ;} return gcd(a % b, b);  
if(b==null){return  a > b;} return gcd(a % b, b);  
if(b==null){return  a,b;} return gcd(a % b, b);  
if(b==null){return  a.length;;} return gcd(a % b, b);  
if(b==null){return  --a;} return gcd(a % b, b);  
if(b==null){return  a &amp; b;} return gcd(a % b, b);  
if(b==null){return  b==1;} return gcd(a % b, b);  
if(b==null){return  a / a;} return gcd(a % b, b);  
if(b==null){return  a/0;} return gcd(a % b, b);  
if(b==null){return  a.abs();;} return gcd(a % b, b);  
if(b==null){return  void;} return gcd(a % b, b);  
if(b==null){return  n;;} return gcd(a % b, b);  
if(b==null){return  +1;} return gcd(a % b, b);  
if(b==null){return  a/a;} return gcd(a % b, b);  
if(b==null){return  2*a;} return gcd(a % b, b);  
if(b==null){return  a.signum();;} return gcd(a % b, b);  
if(b==null){return  +b;} return gcd(a % b, b);  
if(b==null){return  a / null;} return gcd(a % b, b);  
if(b==null){return  -1 * a;} return gcd(a % b, b);  
if(b==null){return  b==a;} return gcd(a % b, b);  
if(b==null){return  a & 0xff;} return gcd(a % b, b);  
if(b==null){return  a..b;} return gcd(a % b, b);  
if(b==null){return  a - a;} return gcd(a % b, b);  
if(b==null){return  b > 0;} return gcd(a % b, b);  
if(b==null){return  ab;} return gcd(a % b, b);  
if(b==null){return  -(a/b);;} return gcd(a % b, b);  
if(b==null){return  b.intValue();;} return gcd(a % b, b);  
if(b==null){return  - 1;} return gcd(a % b, b);  
if(b==null){return  a|0;} return gcd(a % b, b);  
if(b==null){return  a!=null;} return gcd(a % b, b);  
if(b==null){return  b / a;} return gcd(a % b, b);  
if(b==null){return  a == 0;} return gcd(a % b, b);  
if(b==null){return  a%b==0;} return gcd(a % b, b);  
if(b==null){return  b!=0;} return gcd(a % b, b);  
if(b==null){return  a==0;} return gcd(a % b, b);  
if(b==null){return  &a;;} return gcd(a % b, b);  
if(b==null){return a;} return gcd(a % b, b);  
if(b==null){return b;;} return gcd(a % b, b);  
if(b==null){return  b ;} return gcd(a % b, b);  
if(b==null){return  *a;} return gcd(a % b, b);  
if(b==null){return  a - 1;} return gcd(a % b, b);  
if(b==null){return  BigInteger.ZERO;} return gcd(a % b, b);  
if(b==null){return  i;} return gcd(a % b, b);  
if(b==null){return  Infinity;} return gcd(a % b, b);  
if(b==null){return  b*a;;} return gcd(a % b, b);  
if(b==null){return  gcd;} return gcd(a % b, b);  
if(b==null){return  a*b;;} return gcd(a % b, b);  
if(b==null){return  a*a+b;} return gcd(a % b, b);  
if(b==null){return  a-b;;} return gcd(a % b, b);  
if(b==null){return  +a;;} return gcd(a % b, b);  
if(b==null){return  -1*a;;} return gcd(a % b, b);  
if(b==null){return  a + a;} return gcd(a % b, b);  
if(b==null){return  3;} return gcd(a % b, b);  
if(b==null){return  a <= b;} return gcd(a % b, b);  
if(b==null){return  b & 1;} return gcd(a % b, b);  
if(b==null){return  b|0;} return gcd(a % b, b);  
if(b==null){return  a>>>0;} return gcd(a % b, b);  
if(b==null){return  b^a;} return gcd(a % b, b);  
if(b==null){return  a >>> 1;} return gcd(a % b, b);  
if(b==null){return a % b;} return gcd(a % b, b);  
if(b==null){return  a &lt; b;} return gcd(a % b, b);  
if(b==null){return  a % b ;;} return gcd(a % b, b);  
if(b==null){return  a &gt;= b;} return gcd(a % b, b);  
if(b==null){return  a}%b;} return gcd(a % b, b);  
if(b==null){return  a-%b;} return gcd(a % b, b);  
if(b==null){return  a>b;} return gcd(a % b, b);  
if(b==null){return  -a%b;} return gcd(a % b, b);  
if(b==null){return  i;;} return gcd(a % b, b);  
if(b==null){return  a | null;} return gcd(a % b, b);  
if(b==null){return  a % b != 0;} return gcd(a % b, b);  
if(b==null){return  a & mask;} return gcd(a % b, b);  
if(b==null){return  a%2;} return gcd(a % b, b);  
if(b==null){return  a/2;} return gcd(a % b, b);  
if(b==null){return  !a;} return gcd(a % b, b);  
if(b==null){return  gcd(a,0;} return gcd(a % b, b);  
if(b==null){return  a>=b;} return gcd(a % b, b);  
if(b==null){return  -a % b;} return gcd(a % b, b);  
if(b==null){return  a % b ;} return gcd(a % b, b);  
if(b==null){return  MAX;} return gcd(a % b, b);  
if(b==null){return  b != null;} return gcd(a % b, b);  
if(b==null){return  a ;;} return gcd(a % b, b);  
if(b==null){return  b * a;;} return gcd(a % b, b);  
if(b==null){return  Integer;} return gcd(a % b, b);  
if(b==null){return  null; ;} return gcd(a % b, b);  
if(b==null){return  a >> b;} return gcd(a % b, b);  
if(b==null){return  -a/b;} return gcd(a % b, b);  
if(b==null){return  a &b;;} return gcd(a % b, b);  
if(b==null){return  true;;} return gcd(a % b, b);  
if(b==null){return  a&1;} return gcd(a % b, b);  
if(b==null){return  a > 0;} return gcd(a % b, b);  
if(b==null){return  a & (~b);;} return gcd(a % b, b);  
if(b==null){return  set;} return gcd(a % b, b);  
if(b==null){return  a:b;} return gcd(a % b, b);  
if(b==null){return  a % b + b;} return gcd(a % b, b);  
if(b==null){return  a & 255;} return gcd(a % b, b);  
if(b==null){return  gcd(a,null;} return gcd(a % b, b);  
if(b==null){return (a/b);;} return gcd(a % b, b);  
if(b==null){return   a%b;} return gcd(a % b, b);  
if(b==null){return  a/b; ;} return gcd(a % b, b);  
if(b==null){return  a + b + 1;} return gcd(a % b, b);  
if(b==null){return  -(a%b);;} return gcd(a % b, b);  
if(b==null){return  a &amp;&amp;} return gcd(a % b, b);  
if(b==null){return  a|b;;} return gcd(a % b, b);  
if(b==null){return  N;} return gcd(a % b, b);  
if(b==null){return  4;} return gcd(a % b, b);  
if(b==null){return  a % b+1;} return gcd(a % b, b);  
if(b==null){return  a & b; ;} return gcd(a % b, b);  
if(b==null){return  m;} return gcd(a % b, b);  
if(b==null){return  another;} return gcd(a % b, b);  
if(b==null){return  ZERO;} return gcd(a % b, b);  
if(b==null){return  NIL;} return gcd(a % b, b);  
if(b==null){ b=1; } return gcd(a % b, b);  
if(b==null){ b=0; } return gcd(a % b, b);  
if(b==null){ b=a; } return gcd(a % b, b);  
if(b==null){ b=a%b; } return gcd(a % b, b);  
if(b==null){ b=a % b; } return gcd(a % b, b);  
if(b==null){ b=2; } return gcd(a % b, b);  
if(b==null){ b=a*a; } return gcd(a % b, b);  
if(b==null){ b=a/b; } return gcd(a % b, b);  
if(b==null){ b=b; } return gcd(a % b, b);  
if(b==null){ b=null; } return gcd(a % b, b);  
if(b==null){ b=10; } return gcd(a % b, b);  
if(b==null){ b=MAX; } return gcd(a % b, b);  
if(b==null){ b=a.length; } return gcd(a % b, b);  
if(b==null){ b= 0; } return gcd(a % b, b);  
if(b==null){ b=INF; } return gcd(a % b, b);  
if(b==null){ b=A; } return gcd(a % b, b);  
if(b==null){ b= 1; } return gcd(a % b, b);  
if(b==null){ b=DEFAULT_B; } return gcd(a % b, b);  
if(b==null){ b=8; } return gcd(a % b, b);  
if(b==null){ b=256; } return gcd(a % b, b);  
if(b==null){ b=N; } return gcd(a % b, b);  
if(b==null){ b=100; } return gcd(a % b, b);  
if(b==null){ b=3; } return gcd(a % b, b);  
if(b==null){ b=max; } return gcd(a % b, b);  
if(b==null){ b=4; } return gcd(a % b, b);  
if(b==null){ b=int; } return gcd(a % b, b);  
if(b==null){ b=c; } return gcd(a % b, b);  
if(b==null){ b=n; } return gcd(a % b, b);  
if(b==null){ b=Math.max; } return gcd(a % b, b);  
if(b==null){ b=i; } return gcd(a % b, b);  
if(b==null){ b=1024; } return gcd(a % b, b);  
if(b==null){ b=default_b; } return gcd(a % b, b);  
if(b==null){ b= a; } return gcd(a % b, b);  
if(b==null){ b=1000; } return gcd(a % b, b);  
if(b==null){ b=Integer; } return gcd(a % b, b);  
if(b==null){ b=BigInteger.ONE; } return gcd(a % b, b);  
if(b==null){ b=a%2; } return gcd(a % b, b);  
if(b==null){ b=a%a; } return gcd(a % b, b);  
if(b==null){ b=b%2; } return gcd(a % b, b);  
if(b==null){ b=length; } return gcd(a % b, b);  
if(b==null){ b= a % b; } return gcd(a % b, b);  
if(b==null){ b=32; } return gcd(a % b, b);  
if(b==null){ b=defaultB; } return gcd(a % b, b);  
if(b==null){ b=9; } return gcd(a % b, b);  
if(b==null){ b=Math.floor; } return gcd(a % b, b);  
if(b==null){ b=zero; } return gcd(a % b, b);  
if(b==null){ b=DEFAULT_BASE; } return gcd(a % b, b);  
if(b==null){ b=a*b; } return gcd(a % b, b);  
if(b==null){ b=a-b; } return gcd(a % b, b);  
if(b==null){ b=a&1; } return gcd(a % b, b);  
if(b==null){ b=NULL; } return gcd(a % b, b);  
if(b==null){ b=255; } return gcd(a % b, b);  
if(b==null){ b=b-1; } return gcd(a % b, b);  
if(b==null){ b= -1; } return gcd(a % b, b);  
if(b==null){ b=a+b; } return gcd(a % b, b);  
if(b==null){ b=a / b; } return gcd(a % b, b);  
if(b==null){ b=MAX_VALUE; } return gcd(a % b, b);  
if(b==null){ b=a&b; } return gcd(a % b, b);  
if(b==null){ b=2*a; } return gcd(a % b, b);  
if(b==null){ b=a+1; } return gcd(a % b, b);  
if(b==null){ b=b+1; } return gcd(a % b, b);  
if(b==null){ b=a % a; } return gcd(a % b, b);  
if(b==null){ b=b*2; } return gcd(a % b, b);  
if(b==null){ b=x; } return gcd(a % b, b);  
if(b==null){ b= a%b; } return gcd(a % b, b);  
if(b==null){ b=7; } return gcd(a % b, b);  
if(b==null){ b=min; } return gcd(a % b, b);  
if(b==null){ b=DEFAULT; } return gcd(a % b, b);  
if(b==null){ b=16; } return gcd(a % b, b);  
if(b==null){ b=num; } return gcd(a % b, b);  
if(b==null){ b=defaultNum; } return gcd(a % b, b);  
if(b==null){ b=a * b; } return gcd(a % b, b);  
if(b==null){ b=64; } return gcd(a % b, b);  
if(b==null){ b=MaxInt; } return gcd(a % b, b);  
if(b==null){ b=99; } return gcd(a % b, b);  
if(b==null){ b=Math.min; } return gcd(a % b, b);  
if(b==null){ b=MAX_INT; } return gcd(a % b, b);  
if(b==null){ b=1000000; } return gcd(a % b, b);  
if(b==null){ b=5; } return gcd(a % b, b);  
if(b==null){ b=len; } return gcd(a % b, b);  
if(b==null){ b=11; } return gcd(a % b, b);  
if(b==null){ b=a% b; } return gcd(a % b, b);  
if(b==null){ b=ONE; } return gcd(a % b, b);  
if(b==null){ b=Infinity; } return gcd(a % b, b);  
if(b==null){ b=31; } return gcd(a % b, b);  
if(b==null){ b=a - b; } return gcd(a % b, b);  
if(b==null){ b=a %b; } return gcd(a % b, b);  
if(b==null){ b=divisor; } return gcd(a % b, b);  
if(b==null){ b=a-1; } return gcd(a % b, b);  
if(b==null){ b=0xff; } return gcd(a % b, b);  
if(b==null){ b=20; } return gcd(a % b, b);  
if(b==null){ b=B; } return gcd(a % b, b);  
if(b==null){ b=true; } return gcd(a % b, b);  
if(b==null){ b=one; } return gcd(a % b, b);  
if(b==null){ b=args.length; } return gcd(a % b, b);  
if(b==null){ b=random; } return gcd(a % b, b);  
if(b==null){ b=MIN; } return gcd(a % b, b);  
if(b==null){ b=b%a; } return gcd(a % b, b);  
if(b==null){ b=scale; } return gcd(a % b, b);  
if(b==null){ b=MAX_B; } return gcd(a % b, b);  
if(b==null){ b=false; } return gcd(a % b, b);  
if(b==null){ b=a; }; } return gcd(a % b, b);  
if(b==null){ b=b%b; } return gcd(a % b, b);  
if(b==null){ b=d; } return gcd(a % b, b);  
if(b==null){ b=UNDEFINED; } return gcd(a % b, b);  
if(b==null){ b=6; } return gcd(a % b, b);  
if(b==null){ b=ai; } return gcd(a % b, b);  
if(b==null){ b=NIL; } return gcd(a % b, b);  
if(b==null){ b=a&; } return gcd(a % b, b);  
if(b==null){ b=999; } return gcd(a % b, b);  
if(b==null){ b=integer; } return gcd(a % b, b);  
if(b==null){ b=b*a; } return gcd(a % b, b);  
if(b==null){ b=10000; } return gcd(a % b, b);  
if(b==null){ b=a&255; } return gcd(a % b, b);  
if(b==null){ b=42; } return gcd(a % b, b);  
if(b==null){ b=128; } return gcd(a % b, b);  
if(b==null){ b=Int; } return gcd(a % b, b);  
if(b==null){ b=radix; } return gcd(a % b, b);  
if(b==null){ b=Math; } return gcd(a % b, b);  
if(b==null){ b=a>>>1; } return gcd(a % b, b);  
if(b==null){ b=bits; } return gcd(a % b, b);  
if(b==null){ b=mod; } return gcd(a % b, b);  
if(b==null){ b=Math.sqrt; } return gcd(a % b, b);  
if(b==null){ b=a*2; } return gcd(a % b, b);  
if(b==null){ b=a%; } return gcd(a % b, b);  
if(b==null){ b=10000000; } return gcd(a % b, b);  
if(b==null){ b=k; } return gcd(a % b, b);  
if(b==null){ b=size; } return gcd(a % b, b);  
if(b==null){ b=0; }; } return gcd(a % b, b);  
if(b==null){ b=1*a; } return gcd(a % b, b);  
if(b==null){ b=b>>>0; } return gcd(a % b, b);  
if(b==null){ b=80; } return gcd(a % b, b);  
if(b==null){ b=m; } return gcd(a % b, b);  
if(b==null){ b=12; } return gcd(a % b, b);  
if(b==null){ b=Math.ceil; } return gcd(a % b, b);  
if(b==null){ b=b % a; } return gcd(a % b, b);  
if(b==null){ b=rand; } return gcd(a % b, b);  
if(b==null){ b=a^b; } return gcd(a % b, b);  
if(b==null){ b=div; } return gcd(a % b, b);  
if(b==null){ b=b==0; } return gcd(a % b, b);  
if(b==null){ b=a/2; } return gcd(a % b, b);  
if(b==null){ b=C; } return gcd(a % b, b);  
if(b==null){ b=a%1; } return gcd(a % b, b);  
if(b==null){ b=maximum; } return gcd(a % b, b);  
if(b==null){ b=nil; } return gcd(a % b, b);  
if(b==null){ b=value; } return gcd(a % b, b);  
if(b==null){ b=b % 2; } return gcd(a % b, b);  
if(b==null){ b=a/%b; } return gcd(a % b, b);  
if(b==null){ b=this; } return gcd(a % b, b);  
if(b==null){ b=alpha; } return gcd(a % b, b);  
if(b==null){ b=a<<1; } return gcd(a % b, b);  
if(b==null){ b=MAX_UINT; } return gcd(a % b, b);  
if(b==null){ b=a + b; } return gcd(a % b, b);  
if(b==null){ b=a * a; } return gcd(a % b, b);  
if(b==null){ b=init; } return gcd(a % b, b);  
if(b==null){ b=gcd; } return gcd(a % b, b);  
if(b==null){ b=count; } return gcd(a % b, b);  
if(b==null){ b=30; } return gcd(a % b, b);  
if(b==null){ b=19; } return gcd(a % b, b);  
if(b==null){ b=0x10000; } return gcd(a % b, b);  
if(b==null){ b=b%10; } return gcd(a % b, b);  
if(b==null){ b=15; } return gcd(a % b, b);  
if(b==null){ b=63; } return gcd(a % b, b);  
if(b==null){ b=a%10; } return gcd(a % b, b);  
if(b==null){ b=a % 1; } return gcd(a % b, b);  
if(b==null){ b=512; } return gcd(a % b, b);  
if(b==null){ b=calcB; } return gcd(a % b, b);  
if(b==null){ b=360; } return gcd(a % b, b);  
if(b==null){ b=a==0; } return gcd(a % b, b);  
if(b==null){ b=pow; } return gcd(a % b, b);  
if(b==null){ b=base; } return gcd(a % b, b);  
if(b==null){ b=Default; } return gcd(a % b, b);  
if(b==null){ b=a >> 1; } return gcd(a % b, b);  
if(b==null){ b=50; } return gcd(a % b, b);  
if(b==null){ b=s; } return gcd(a % b, b);  
if(b==null){ b=isZero; } return gcd(a % b, b);  
if(b==null){ b=M; } return gcd(a % b, b);  
if(b==null){ b=greatest; } return gcd(a % b, b);  
if(b==null){ b=Math.abs; } return gcd(a % b, b);  
if(b==null){ b=DEFAULT_N; } return gcd(a % b, b);  
if(b==null){ b=a % 2; } return gcd(a % b, b);  
if(b==null){ b=getMaxValue; } return gcd(a % b, b);  
if(b==null){ b=b+a; } return gcd(a % b, b);  
if(b==null){ b=BigInteger.ZERO; } return gcd(a % b, b);  
if(b==null){ b=total; } return gcd(a % b, b);  
if(b==null){ b=bit; } return gcd(a % b, b);  
if(b==null){ b=input.length; } return gcd(a % b, b);  
if(b==null){ b=b>>>1; } return gcd(a % b, b);  
if(b==null){ b=g; } return gcd(a % b, b);  
if(b==null){ b=this.length; } return gcd(a % b, b);  
if(b==null){ b=System.identity; } return gcd(a % b, b);  
if(b==null){ b=Max; } return gcd(a % b, b);  
if(b==null){ b=number; } return gcd(a % b, b);  
if(b==null){ b=default; } return gcd(a % b, b);  
if(b==null){ b=a - 1; } return gcd(a % b, b);  
if(b==null){ b=a & 1; } return gcd(a % b, b);  
if(b==null){ b=floor; } return gcd(a % b, b);  
if(b==null){ b=a*1; } return gcd(a % b, b);  
if(b==null){ b=1; }; } return gcd(a % b, b);  
if(b==null){ b=all; } return gcd(a % b, b);  
if(b==null){ b=b%1; } return gcd(a % b, b);  
if(b==null){ b=a*0; } return gcd(a % b, b);  
if(b==null){ b=b-a; } return gcd(a % b, b);  
if(b==null){ b=E; } return gcd(a % b, b);  
if(b==null){ b=a * 0; } return gcd(a % b, b);  
if(b==null){ b=36; } return gcd(a % b, b);  
if(b==null){ b= gcd; } return gcd(a % b, b);  
if(b==null){ b= 2; } return gcd(a % b, b);  
if(b==null){ b=ab; } return gcd(a % b, b);  
if(b==null){ b= a/b; } return gcd(a % b, b);  
if(b==null){ b=constant; } return gcd(a % b, b);  
if(b==null){ b=a|0; } return gcd(a % b, b);  
if(b==null){ b=type; } return gcd(a % b, b);  
if(b==null){ b=l; } return gcd(a % b, b);  
if(b==null){ b=a==null; } return gcd(a % b, b);  
if(b==null){ b=a + 1; } return gcd(a % b, b);  
if(b==null){ b=a>>1; } return gcd(a % b, b);  
if(b==null){ b=G; } return gcd(a % b, b);  
if(b==null){ b=a/a; } return gcd(a % b, b);  
if(b==null){ b=v; } return gcd(a % b, b);  
if(b==null){ b=gen; } return gcd(a % b, b);  
if(b==null){ b=input; } return gcd(a % b, b);  
if(b==null){ b=result; } return gcd(a % b, b);  
if(b==null){ b=default_divisor; } return gcd(a % b, b);  
if(b==null){ b=; } return gcd(a % b, b);  
if(b==null){ b=first; } return gcd(a % b, b);  
if(b==null){ b=defaultVal; } return gcd(a % b, b);  
if(b==null){ b=new int; } return gcd(a % b, b);  
if(b==null){ b=-1; } return gcd(a % b, b);  
if(b==null){ b=a % 10; } return gcd(a % b, b);  
if(b==null){ b=24; } return gcd(a % b, b);  
if(b==null){ b= a.length; } return gcd(a % b, b);  
if(b==null){ b=pow10; } return gcd(a % b, b);  
if(b==null){ b=Math.round; } return gcd(a % b, b);  
if(b==null){ b=POSITIVE; } return gcd(a % b, b);  
if(b==null){ b=e; } return gcd(a % b, b);  
if(b==null){ b=NULL_VALUE; } return gcd(a % b, b);  
if(b==null){ b=0x80; } return gcd(a % b, b);  
if(b==null){ b=Z; } return gcd(a % b, b);  
if(b==null){ b=Gi; } return gcd(a % b, b);  
if(b==null){ b=Math.random; } return gcd(a % b, b);  
if(b==null){ b=0xFF; } return gcd(a % b, b);  
if(b==null){ b=wi; } return gcd(a % b, b);  
if(b==null){ b=width; } return gcd(a % b, b);  
if(b==null){ b=p; } return gcd(a % b, b);  
if(b==null){ b=1/a; } return gcd(a % b, b);  
if(b==null){ b=2048; } return gcd(a % b, b);  
if(b==null){ b=h; } return gcd(a % b, b);  
if(b==null){ b=0xffff; } return gcd(a % b, b);  
if(b==null){ b=a & b; } return gcd(a % b, b);  
if(a != 0){ return gcd(a % b, b);}  
if(a > b){ return gcd(a % b, b);}  
if(a % b == 0){ return gcd(a % b, b);}  
if(a != b){ return gcd(a % b, b);}  
if(a < b){ return gcd(a % b, b);}  
if(a % b != 0){ return gcd(a % b, b);}  
if(a >= b){ return gcd(a % b, b);}  
if(a == 0){ return gcd(a % b, b);}  
if(a == b){ return gcd(a % b, b);}  
if(a%b == 0){ return gcd(a % b, b);}  
if(b > 0){ return gcd(a % b, b);}  
if(a % b){ return gcd(a % b, b);}  
if(a != 0 && b != 0){ return gcd(a % b, b);}  
if(a <= b){ return gcd(a % b, b);}  
if(a % b > 0){ return gcd(a % b, b);}  
if(a > 0){ return gcd(a % b, b);}  
if(a % b < 0){ return gcd(a % b, b);}  
if(b != 0){ return gcd(a % b, b);}  
if(a%b != 0){ return gcd(a % b, b);}  
if(a!=0){ return gcd(a % b, b);}  
if(a%b==0){ return gcd(a % b, b);}  
if(b < 0){ return gcd(a % b, b);}  
if(b == a){ return gcd(a % b, b);}  
if(b == 0){ return gcd(a % b, b);}  
if(a < 0){ return gcd(a % b, b);}  
if(b < a){ return gcd(a % b, b);}  
if(a==0){ return gcd(a % b, b);}  
if(a!=b){ return gcd(a % b, b);}  
if(a>b){ return gcd(a % b, b);}  
if(b == 1){ return gcd(a % b, b);}  
if(a<b){ return gcd(a % b, b);}  
if(a & b){ return gcd(a % b, b);}  
if(a % b == b){ return gcd(a % b, b);}  
if(b > a){ return gcd(a % b, b);}  
if(a >= 0){ return gcd(a % b, b);}  
if(a % b <= 0){ return gcd(a % b, b);}  
if(a % b == 1){ return gcd(a % b, b);}  
if(a % b >= 0){ return gcd(a % b, b);}  
if(a==b){ return gcd(a % b, b);}  
if(b <= a){ return gcd(a % b, b);}  
if(b >= 0){ return gcd(a % b, b);}  
if(a%b){ return gcd(a % b, b);}  
if( a % b == 0){ return gcd(a % b, b);}  
if( a != 0){ return gcd(a % b, b);}  
if(b % a == 0){ return gcd(a % b, b);}  
if(a%b > 0){ return gcd(a % b, b);}  
if(a && b){ return gcd(a % b, b);}  
if( a != b){ return gcd(a % b, b);}  
if(a != a){ return gcd(a % b, b);}  
if( a > b){ return gcd(a % b, b);}  
if(b != a){ return gcd(a % b, b);}  
if(a%b!=0){ return gcd(a % b, b);}  
if(a > 0 && b > 0){ return gcd(a % b, b);}  
if(b==0){ return gcd(a % b, b);}  
if(a != a%b){ return gcd(a % b, b);}  
if(a != 0 || b != 0){ return gcd(a % b, b);}  
if(a == 0 && b == 0){ return gcd(a % b, b);}  
if(a%b < 0){ return gcd(a % b, b);}  
if(a == 1){ return gcd(a % b, b);}  
if(a & b != 0){ return gcd(a % b, b);}  
if(a & b == 0){ return gcd(a % b, b);}  
if(a>=b){ return gcd(a % b, b);}  
if(a % b==0){ return gcd(a % b, b);}  
if( a % b != 0){ return gcd(a % b, b);}  
if(b >= a){ return gcd(a % b, b);}  
if(b % a){ return gcd(a % b, b);}  
if(a != 1){ return gcd(a % b, b);}  
if(a == 0 || b == 0){ return gcd(a % b, b);}  
if(b!=0){ return gcd(a % b, b);}  
if(a!=0 && b!=0){ return gcd(a % b, b);}  
if(b>0){ return gcd(a % b, b);}  
if(a != a % b){ return gcd(a % b, b);}  
if( a < b){ return gcd(a % b, b);}  
if(a & 1){ return gcd(a % b, b);}  
if(a != 0 && a != b){ return gcd(a % b, b);}  
if(a.length == b.length){ return gcd(a % b, b);}  
if(b > 1){ return gcd(a % b, b);}  
if(b <= 0){ return gcd(a % b, b);}  
if(b==1){ return gcd(a % b, b);}  
if(a >= 0 && b >= 0){ return gcd(a % b, b);}  
if(b % a != 0){ return gcd(a % b, b);}  
if(a<=b){ return gcd(a % b, b);}  
if(a != a && b != 0){ return gcd(a % b, b);}  
if(a% b == 0){ return gcd(a % b, b);}  
if(a != a && b != b){ return gcd(a % b, b);}  
if(a & b > 0){ return gcd(a % b, b);}  
if(b & 1){ return gcd(a % b, b);}  
if(b != 1){ return gcd(a % b, b);}  
if( a == b){ return gcd(a % b, b);}  
if(a != a+b){ return gcd(a % b, b);}  
if( a >= b){ return gcd(a % b, b);}  
if(a> b){ return gcd(a % b, b);}  
if(a != -1){ return gcd(a % b, b);}  
if( a != 0 && b != 0){ return gcd(a % b, b);}  
if(a / b == 0){ return gcd(a % b, b);}  
if(a>0){ return gcd(a % b, b);}  
if(b<0){ return gcd(a % b, b);}  
if(a%b<0){ return gcd(a % b, b);}  
if(a%b == 1){ return gcd(a % b, b);}  
if(a%b == b){ return gcd(a % b, b);}  
if(a.equals(b){ return gcd(a % b, b);}  
if( a == 0){ return gcd(a % b, b);}  
if(a/b != 0){ return gcd(a % b, b);}  
if(a/b == 0){ return gcd(a % b, b);}  
if(a % b < b){ return gcd(a % b, b);}  
if(b%2 == 0){ return gcd(a % b, b);}  
if(a % b == a){ return gcd(a % b, b);}  
if(a<0){ return gcd(a % b, b);}  
if(a%b <= 0){ return gcd(a % b, b);}  
if(a%b >= 0){ return gcd(a % b, b);}  
if(b==a){ return gcd(a % b, b);}  
if(a + b > 0){ return gcd(a % b, b);}  
if(a - b > 0){ return gcd(a % b, b);}  
if(a <= 0){ return gcd(a % b, b);}  
if(b < 1){ return gcd(a % b, b);}  
if(a ^ b){ return gcd(a % b, b);}  
if(b % b == 0){ return gcd(a % b, b);}  
if( a % b){ return gcd(a % b, b);}  
if( b > 0){ return gcd(a % b, b);}  
if( a > 0){ return gcd(a % b, b);}  
if(a != a || b != b){ return gcd(a % b, b);}  
if(a % b!=0){ return gcd(a % b, b);}  
if(a.length == b){ return gcd(a % b, b);}  
if(a&b != 0){ return gcd(a % b, b);}  
if(a % b != b){ return gcd(a % b, b);}  
if( a%b == 0){ return gcd(a % b, b);}  
if(a% b != 0){ return gcd(a % b, b);}  
if(a / b != 0){ return gcd(a % b, b);}  
if(a - b < 0){ return gcd(a % b, b);}  
if( a % b < 0){ return gcd(a % b, b);}  
if(a - b == 0){ return gcd(a % b, b);}  
if(a + b < 0){ return gcd(a % b, b);}  
if( a % b > 0){ return gcd(a % b, b);}  
if(a/b > 0){ return gcd(a % b, b);}  
if(a.length != b.length){ return gcd(a % b, b);}  
if(a==0 && b==0){ return gcd(a % b, b);}  
if( a <= b){ return gcd(a % b, b);}  
if( b != 0){ return gcd(a % b, b);}  
if(a != a + b){ return gcd(a % b, b);}  
if(a %= b){ return gcd(a % b, b);}  
if(0 < b){ return gcd(a % b, b);}  
if(a != b && a != 0){ return gcd(a % b, b);}  
if(b>a){ return gcd(a % b, b);}  
if(a % b<0){ return gcd(a % b, b);}  
if(a == 0 && b != 0){ return gcd(a % b, b);}  
if(a+b > 0){ return gcd(a % b, b);}  
if(b<a){ return gcd(a % b, b);}  
if(a % b <= b){ return gcd(a % b, b);}  
if(b % 2 == 0){ return gcd(a % b, b);}  
if(a%b==1){ return gcd(a % b, b);}  
if(a%b>0){ return gcd(a % b, b);}  
if(a > 1){ return gcd(a % b, b);}  
if(a&b == 0){ return gcd(a % b, b);}  
if(a.length > b){ return gcd(a % b, b);}  
if(a * b == 0){ return gcd(a % b, b);}  
if(a != 0 && b == 0){ return gcd(a % b, b);}  
if(a * b != 0){ return gcd(a % b, b);}  
if(a ^ b == 0){ return gcd(a % b, b);}  
if(a !=0){ return gcd(a % b, b);}  
if(a.length < b.length){ return gcd(a % b, b);}  
if(b%2 == 1){ return gcd(a % b, b);}  
if(a == a+b){ return gcd(a % b, b);}  
if(b % 2 == 1){ return gcd(a % b, b);}  
if(a & 1 == 0){ return gcd(a % b, b);}  
if(a * b > 0){ return gcd(a % b, b);}  
if(a-b){ return gcd(a % b, b);}  
if(b <= 1){ return gcd(a % b, b);}  
if(b>=0){ return gcd(a % b, b);}  
if(a/b < 0){ return gcd(a % b, b);}  
if(a != 0 && a < b){ return gcd(a % b, b);}  
if(a >= 0 && a < b){ return gcd(a % b, b);}  
if(a==1){ return gcd(a % b, b);}  
if(b % a > 0){ return gcd(a % b, b);}  
if(a / b > 0){ return gcd(a % b, b);}  
if(a.length==b.length){ return gcd(a % b, b);}  
if(a * b < 0){ return gcd(a % b, b);}  
if(a % b === 0){ return gcd(a % b, b);}  
if(a + b == 0){ return gcd(a % b, b);}  
if(b%a == 0){ return gcd(a % b, b);}  
if(b % 2){ return gcd(a % b, b);}  
if(b >= 1){ return gcd(a % b, b);}  
if(b%2==0){ return gcd(a % b, b);}  
if(b%b == 0){ return gcd(a % b, b);}  
if(b == a.length){ return gcd(a % b, b);}  
if(a.length > b.length){ return gcd(a % b, b);}  
if(a+b < 0){ return gcd(a % b, b);}  
if(a & 1 != 0){ return gcd(a % b, b);}  
if(a!=a){ return gcd(a % b, b);}  
if( a % b == b){ return gcd(a % b, b);}  
if(a.length % b == 0){ return gcd(a % b, b);}  
if(b == b){ return gcd(a % b, b);}  
if(a != 0&&b != 0){ return gcd(a % b, b);}  
if(a != -b){ return gcd(a % b, b);}  
if(a &b){ return gcd(a % b, b);}  
if(b < 10){ return gcd(a % b, b);}  
if(a & b == b){ return gcd(a % b, b);}  
if(a >= 0 && a <= b){ return gcd(a % b, b);}  
if(a & 1 == 1){ return gcd(a % b, b);}  
if(a & b < 0){ return gcd(a % b, b);}  
if(a != 0 and b != 0){ return gcd(a % b, b);}  
if(b < 2){ return gcd(a % b, b);}  
if(a.length >= b){ return gcd(a % b, b);}  
if(a & 0x55555555){ return gcd(a % b, b);}  
if(a - b != 0){ return gcd(a % b, b);}  
if(a instanceof int){ return gcd(a % b, b);}  
if(a - b <= 0){ return gcd(a % b, b);}  
if(a < 0 && b < 0){ return gcd(a % b, b);}  
if(a==0 || b==0){ return gcd(a % b, b);}  
if(b<=a){ return gcd(a % b, b);}  
if(a%b==b){ return gcd(a % b, b);}  
if(a%b<=0){ return gcd(a % b, b);}  
if( b < 0){ return gcd(a % b, b);}  
if( a%b != 0){ return gcd(a % b, b);}  
if(a & ~b){ return gcd(a % b, b);}  
if(a > b || a == b){ return gcd(a % b, b);}  
if(a * b == b){ return gcd(a % b, b);}  
if(a% b==0){ return gcd(a % b, b);}  
if(a % b == -1){ return gcd(a % b, b);}  
if(a&b){ return gcd(a % b, b);}  
if(b == 2){ return gcd(a % b, b);}  
if(c > 0){ return gcd(a % b, b);}  
if(a / b < 0){ return gcd(a % b, b);}  
if(a == 0 && b > 0){ return gcd(a % b, b);}  
if(a / b == 1){ return gcd(a % b, b);}  
if(a > 0 && a < b){ return gcd(a % b, b);}  
if(a*b != 0){ return gcd(a % b, b);}  
if(a*b > 0){ return gcd(a % b, b);}  
if(a.length % b){ return gcd(a % b, b);}  
if(a != a & b){ return gcd(a % b, b);}  
if(a != 0 && b > 0){ return gcd(a % b, b);}  
if(a and b){ return gcd(a % b, b);}  
if(a != 0 && b!=0){ return gcd(a % b, b);}  
if(a-b > 0){ return gcd(a % b, b);}  
if(a.length == 0){ return gcd(a % b, b);}  
if(a-b < 0){ return gcd(a % b, b);}  
if(b % a < 0){ return gcd(a % b, b);}  
if(a + b != 0){ return gcd(a % b, b);}  
if(a != b || a != 0){ return gcd(a % b, b);}  
if(a != (int)b){ return gcd(a % b, b);}  
if(a % b != 1){ return gcd(a % b, b);}  
if(a > b || b == 0){ return gcd(a % b, b);}  
if(a == a + b){ return gcd(a % b, b);}  
if(b%b==0){ return gcd(a % b, b);}  
if(a != a*b){ return gcd(a % b, b);}  
if(a + b >= 0){ return gcd(a % b, b);}  
if(a.length == 1){ return gcd(a % b, b);}  
if( a % b == 1){ return gcd(a % b, b);}  
if(b % a == 1){ return gcd(a % b, b);}  
if(a/b == 1){ return gcd(a % b, b);}  
if(a != b && b != 0){ return gcd(a % b, b);}  
